{"version":3,"sources":["vendor/ember-cli/app-prefix.js","fusor-ember-cli/adapters/application.js","fusor-ember-cli/adapters/deployment.js","fusor-ember-cli/adapters/foreman-task.js","fusor-ember-cli/adapters/session-portal.js","fusor-ember-cli/app.js","fusor-ember-cli/components/accordion-item.js","fusor-ember-cli/components/base-f.js","fusor-ember-cli/components/button-f.js","fusor-ember-cli/components/cancel-back-next.js","fusor-ember-cli/components/deployment-role.js","fusor-ember-cli/components/draggable-object-target.js","fusor-ember-cli/components/draggable-object.js","fusor-ember-cli/components/em-button.js","fusor-ember-cli/components/em-checkbox.js","fusor-ember-cli/components/em-form-control-help.js","fusor-ember-cli/components/em-form-group.js","fusor-ember-cli/components/em-form-label.js","fusor-ember-cli/components/em-form-submit.js","fusor-ember-cli/components/em-form.js","fusor-ember-cli/components/em-input.js","fusor-ember-cli/components/em-modal-body.js","fusor-ember-cli/components/em-modal-confirm-with-reason.js","fusor-ember-cli/components/em-modal-confirm.js","fusor-ember-cli/components/em-modal-emform.js","fusor-ember-cli/components/em-modal-footer.js","fusor-ember-cli/components/em-modal-form.js","fusor-ember-cli/components/em-modal-title.js","fusor-ember-cli/components/em-modal-toggler.js","fusor-ember-cli/components/em-modal.js","fusor-ember-cli/components/em-select.js","fusor-ember-cli/components/em-text.js","fusor-ember-cli/components/env-path-list-item.js","fusor-ember-cli/components/labeled-radio-button.js","fusor-ember-cli/components/markdown-to-html.js","fusor-ember-cli/components/modal-confirm.js","fusor-ember-cli/components/node-profile.js","fusor-ember-cli/components/object-bin.js","fusor-ember-cli/components/radio-button-f.js","fusor-ember-cli/components/radio-button.js","fusor-ember-cli/components/rchi-item.js","fusor-ember-cli/components/review-link.js","fusor-ember-cli/components/rhci-hover-text.js","fusor-ember-cli/components/rhci-start.js","fusor-ember-cli/components/rhci-wizard.js","fusor-ember-cli/components/select-f.js","fusor-ember-cli/components/select-simple-f.js","fusor-ember-cli/components/step-number.js","fusor-ember-cli/components/subnet-drop-area.js","fusor-ember-cli/components/text-f.js","fusor-ember-cli/components/textarea-f.js","fusor-ember-cli/components/tr-engine.js","fusor-ember-cli/components/tr-hypervisor.js","fusor-ember-cli/components/tr-management-app.js","fusor-ember-cli/components/tr-organization.js","fusor-ember-cli/components/tr-subscription.js","fusor-ember-cli/components/tr-task.js","fusor-ember-cli/components/traffic-type.js","fusor-ember-cli/components/upstream-downstream.js","fusor-ember-cli/components/vertical-tab.js","fusor-ember-cli/components/wizard-item.js","fusor-ember-cli/controllers/application.js","fusor-ember-cli/controllers/assign-nodes.js","fusor-ember-cli/controllers/cloudforms-storage-domain.js","fusor-ember-cli/controllers/cloudforms-vm.js","fusor-ember-cli/controllers/cloudforms.js","fusor-ember-cli/controllers/cloudforms/cfme-configuration.js","fusor-ember-cli/controllers/configure-environment.js","fusor-ember-cli/controllers/configure-organization.js","fusor-ember-cli/controllers/deployment-new.js","fusor-ember-cli/controllers/deployment-new/satellite.js","fusor-ember-cli/controllers/deployment-new/satellite/configure-environment.js","fusor-ember-cli/controllers/deployment-new/satellite/configure-organization.js","fusor-ember-cli/controllers/deployment-new/satellite/index.js","fusor-ember-cli/controllers/deployment-new/start.js","fusor-ember-cli/controllers/deployment.js","fusor-ember-cli/controllers/deployment/start.js","fusor-ember-cli/controllers/deployments.js","fusor-ember-cli/controllers/discovered-host.js","fusor-ember-cli/controllers/engine.js","fusor-ember-cli/controllers/engine/discovered-host.js","fusor-ember-cli/controllers/host.js","fusor-ember-cli/controllers/hostgroup.js","fusor-ember-cli/controllers/hypervisor.js","fusor-ember-cli/controllers/hypervisor/discovered-host.js","fusor-ember-cli/controllers/lifecycle-environment.js","fusor-ember-cli/controllers/lifecycle-environments.js","fusor-ember-cli/controllers/login.js","fusor-ember-cli/controllers/logout-model.js","fusor-ember-cli/controllers/networking.js","fusor-ember-cli/controllers/new-environment.js","fusor-ember-cli/controllers/new-organization.js","fusor-ember-cli/controllers/openstack.js","fusor-ember-cli/controllers/organization.js","fusor-ember-cli/controllers/organizations.js","fusor-ember-cli/controllers/products.js","fusor-ember-cli/controllers/register-nodes.js","fusor-ember-cli/controllers/review.js","fusor-ember-cli/controllers/review/installation.js","fusor-ember-cli/controllers/review/progress.js","fusor-ember-cli/controllers/review/progress/details/task.js","fusor-ember-cli/controllers/review/progress/details/task/index.js","fusor-ember-cli/controllers/review/progress/overview.js","fusor-ember-cli/controllers/rhci.js","fusor-ember-cli/controllers/rhev-options.js","fusor-ember-cli/controllers/rhev-setup.js","fusor-ember-cli/controllers/rhev.js","fusor-ember-cli/controllers/satellite.js","fusor-ember-cli/controllers/satellite/index.js","fusor-ember-cli/controllers/satellite/subscription.js","fusor-ember-cli/controllers/side-menu.js","fusor-ember-cli/controllers/storage.js","fusor-ember-cli/controllers/subscription.js","fusor-ember-cli/controllers/subscriptions.js","fusor-ember-cli/controllers/subscriptions/credentials.js","fusor-ember-cli/controllers/subscriptions/management-application.js","fusor-ember-cli/controllers/subscriptions/select-subscriptions.js","fusor-ember-cli/controllers/where-install.js","fusor-ember-cli/helpers/fa-icon.js","fusor-ember-cli/helpers/log.js","fusor-ember-cli/helpers/raw-text.js","fusor-ember-cli/initialize.js","fusor-ember-cli/initializers/app-version.js","fusor-ember-cli/initializers/coordinator-setup.js","fusor-ember-cli/initializers/ember-idx-modal.js","fusor-ember-cli/initializers/export-application-global.js","fusor-ember-cli/mixins/configure-environment-mixin.js","fusor-ember-cli/mixins/configure-organization-mixin.js","fusor-ember-cli/mixins/deployment-controller-mixin.js","fusor-ember-cli/mixins/deployment-new-controller-mixin.js","fusor-ember-cli/mixins/deployment-new-satellite-route-mixin.js","fusor-ember-cli/mixins/deployment-route-mixin.js","fusor-ember-cli/mixins/disable-tab-mixin.js","fusor-ember-cli/mixins/meta.js","fusor-ember-cli/mixins/progress-bar-mixin.js","fusor-ember-cli/mixins/satellite-controller-mixin.js","fusor-ember-cli/mixins/save-hostname-mixin.js","fusor-ember-cli/mixins/start-controller-mixin.js","fusor-ember-cli/models/coordinator.js","fusor-ember-cli/models/deployment.js","fusor-ember-cli/models/discovered-host.js","fusor-ember-cli/models/environment.js","fusor-ember-cli/models/foreman-task.js","fusor-ember-cli/models/host.js","fusor-ember-cli/models/hostgroup.js","fusor-ember-cli/models/lifecycle-environment.js","fusor-ember-cli/models/location.js","fusor-ember-cli/models/management-application.js","fusor-ember-cli/models/obj-hash.js","fusor-ember-cli/models/organization.js","fusor-ember-cli/models/product.js","fusor-ember-cli/models/session-portal.js","fusor-ember-cli/models/subnet.js","fusor-ember-cli/models/subscription.js","fusor-ember-cli/models/traffic-type.js","fusor-ember-cli/models/user.js","fusor-ember-cli/router.js","fusor-ember-cli/routes/application.js","fusor-ember-cli/routes/assign-nodes.js","fusor-ember-cli/routes/cloudforms-storage-domain.js","fusor-ember-cli/routes/cloudforms-vm.js","fusor-ember-cli/routes/cloudforms.js","fusor-ember-cli/routes/cloudforms/cfme-configuration.js","fusor-ember-cli/routes/cloudforms/index.js","fusor-ember-cli/routes/configure-environment.js","fusor-ember-cli/routes/configure-organization.js","fusor-ember-cli/routes/deployment-new.js","fusor-ember-cli/routes/deployment-new/index.js","fusor-ember-cli/routes/deployment-new/satellite.js","fusor-ember-cli/routes/deployment-new/satellite/configure-environment.js","fusor-ember-cli/routes/deployment-new/satellite/configure-organization.js","fusor-ember-cli/routes/deployment-new/satellite/index.js","fusor-ember-cli/routes/deployment-new/start.js","fusor-ember-cli/routes/deployment.js","fusor-ember-cli/routes/deployment/index.js","fusor-ember-cli/routes/deployment/start.js","fusor-ember-cli/routes/deployments.js","fusor-ember-cli/routes/discovered-host.js","fusor-ember-cli/routes/discovered-hosts.js","fusor-ember-cli/routes/engine.js","fusor-ember-cli/routes/engine/discovered-host.js","fusor-ember-cli/routes/engine/existing-host.js","fusor-ember-cli/routes/engine/hypervisor.js","fusor-ember-cli/routes/engine/new-host.js","fusor-ember-cli/routes/hostgroup.js","fusor-ember-cli/routes/hostgroup/edit.js","fusor-ember-cli/routes/hostgroups.js","fusor-ember-cli/routes/hypervisor.js","fusor-ember-cli/routes/hypervisor/discovered-host.js","fusor-ember-cli/routes/hypervisor/existing-host.js","fusor-ember-cli/routes/hypervisor/new-host.js","fusor-ember-cli/routes/index.js","fusor-ember-cli/routes/loggedin.js","fusor-ember-cli/routes/login.js","fusor-ember-cli/routes/networking.js","fusor-ember-cli/routes/new-environment.js","fusor-ember-cli/routes/new-node-registration.js","fusor-ember-cli/routes/new-organization.js","fusor-ember-cli/routes/openstack.js","fusor-ember-cli/routes/openstack/index.js","fusor-ember-cli/routes/products.js","fusor-ember-cli/routes/register-nodes.js","fusor-ember-cli/routes/review.js","fusor-ember-cli/routes/review/index.js","fusor-ember-cli/routes/review/installation.js","fusor-ember-cli/routes/review/progress.js","fusor-ember-cli/routes/review/progress/details.js","fusor-ember-cli/routes/review/progress/details/task.js","fusor-ember-cli/routes/review/progress/details/task/index.js","fusor-ember-cli/routes/review/progress/details/task/running-steps.js","fusor-ember-cli/routes/review/progress/details/task/task-errors.js","fusor-ember-cli/routes/review/progress/details/task/task-locks.js","fusor-ember-cli/routes/review/progress/details/task/task-raw.js","fusor-ember-cli/routes/review/progress/overview.js","fusor-ember-cli/routes/rhci.js","fusor-ember-cli/routes/rhev-options.js","fusor-ember-cli/routes/rhev-setup.js","fusor-ember-cli/routes/rhev.js","fusor-ember-cli/routes/rhev/index.js","fusor-ember-cli/routes/satellite.js","fusor-ember-cli/routes/satellite/index.js","fusor-ember-cli/routes/setpassword.js","fusor-ember-cli/routes/single-deployment.js","fusor-ember-cli/routes/storage.js","fusor-ember-cli/routes/subscriptions.js","fusor-ember-cli/routes/subscriptions/credentials.js","fusor-ember-cli/routes/subscriptions/index.js","fusor-ember-cli/routes/subscriptions/management-application.js","fusor-ember-cli/routes/subscriptions/select-subscriptions.js","fusor-ember-cli/routes/where-install.js","fusor-ember-cli/serializers/foreman-task.js","fusor-ember-cli/serializers/puppetclass.js","fusor-ember-cli/services/validations.js","fusor-ember-cli/templates/application.js","fusor-ember-cli/templates/application/index.js","fusor-ember-cli/templates/assign-nodes.js","fusor-ember-cli/templates/cancel-deployment-modal.js","fusor-ember-cli/templates/cloudforms-storage-domain.js","fusor-ember-cli/templates/cloudforms-vm.js","fusor-ember-cli/templates/cloudforms.js","fusor-ember-cli/templates/cloudforms/cfme-configuration.js","fusor-ember-cli/templates/cloudforms/index.js","fusor-ember-cli/templates/components/accordion-item.js","fusor-ember-cli/templates/components/base-f.js","fusor-ember-cli/templates/components/button-f.js","fusor-ember-cli/templates/components/cancel-back-next.js","fusor-ember-cli/templates/components/deployment-role.js","fusor-ember-cli/templates/components/draggable-object-target.js","fusor-ember-cli/templates/components/draggable-object.js","fusor-ember-cli/templates/components/em-button.js","fusor-ember-cli/templates/components/em-form-control-help.js","fusor-ember-cli/templates/components/em-form-group.js","fusor-ember-cli/templates/components/em-form-label.js","fusor-ember-cli/templates/components/em-form-submit.js","fusor-ember-cli/templates/components/em-form.js","fusor-ember-cli/templates/components/em-modal-confirm.js","fusor-ember-cli/templates/components/em-modal.js","fusor-ember-cli/templates/components/env-path-list-item.js","fusor-ember-cli/templates/components/formgroup/control-within-label.js","fusor-ember-cli/templates/components/formgroup/form-group-control.js","fusor-ember-cli/templates/components/formgroup/form-group.js","fusor-ember-cli/templates/components/labeled-radio-button.js","fusor-ember-cli/templates/components/markdown-to-html.js","fusor-ember-cli/templates/components/modal-confirm.js","fusor-ember-cli/templates/components/node-profile.js","fusor-ember-cli/templates/components/object-bin.js","fusor-ember-cli/templates/components/radio-button-f.js","fusor-ember-cli/templates/components/rchi-item.js","fusor-ember-cli/templates/components/review-link.js","fusor-ember-cli/templates/components/rhci-hover-text.js","fusor-ember-cli/templates/components/rhci-start.js","fusor-ember-cli/templates/components/rhci-wizard.js","fusor-ember-cli/templates/components/select-f.js","fusor-ember-cli/templates/components/select-simple-f.js","fusor-ember-cli/templates/components/step-number.js","fusor-ember-cli/templates/components/subnet-drop-area.js","fusor-ember-cli/templates/components/text-f.js","fusor-ember-cli/templates/components/textarea-f.js","fusor-ember-cli/templates/components/tr-engine.js","fusor-ember-cli/templates/components/tr-hypervisor.js","fusor-ember-cli/templates/components/tr-management-app.js","fusor-ember-cli/templates/components/tr-organization.js","fusor-ember-cli/templates/components/tr-subscription.js","fusor-ember-cli/templates/components/tr-task.js","fusor-ember-cli/templates/components/traffic-type.js","fusor-ember-cli/templates/components/upstream-downstream.js","fusor-ember-cli/templates/components/vertical-tab.js","fusor-ember-cli/templates/components/wizard-item.js","fusor-ember-cli/templates/configure-environment.js","fusor-ember-cli/templates/configure-environment.loading.js","fusor-ember-cli/templates/configure-organization.js","fusor-ember-cli/templates/configure-organization.loading.js","fusor-ember-cli/templates/content-source-upstream.js","fusor-ember-cli/templates/debug-deployment.js","fusor-ember-cli/templates/deployment-new.js","fusor-ember-cli/templates/deployment-new/index.js","fusor-ember-cli/templates/deployment-new/satellite.js","fusor-ember-cli/templates/deployment-new/satellite/configure-environment.js","fusor-ember-cli/templates/deployment-new/satellite/configure-environment.loading.js","fusor-ember-cli/templates/deployment-new/satellite/configure-organization.js","fusor-ember-cli/templates/deployment-new/satellite/configure-organization.loading.js","fusor-ember-cli/templates/deployment-new/satellite/index.js","fusor-ember-cli/templates/deployment-new/satellite/loading.js","fusor-ember-cli/templates/deployment-new/start.js","fusor-ember-cli/templates/deployment.js","fusor-ember-cli/templates/deployment/start.js","fusor-ember-cli/templates/deployments.js","fusor-ember-cli/templates/devonly.js","fusor-ember-cli/templates/discovered-host.js","fusor-ember-cli/templates/discovered-hosts.js","fusor-ember-cli/templates/engine.js","fusor-ember-cli/templates/engine/discovered-host.js","fusor-ember-cli/templates/hostgroup.js","fusor-ember-cli/templates/hostgroup/edit.js","fusor-ember-cli/templates/hostgroups.js","fusor-ember-cli/templates/hypervisor.js","fusor-ember-cli/templates/hypervisor/discovered-host.js","fusor-ember-cli/templates/index.js","fusor-ember-cli/templates/loading.js","fusor-ember-cli/templates/loggedin.js","fusor-ember-cli/templates/login.js","fusor-ember-cli/templates/logout-modal.js","fusor-ember-cli/templates/mainmenu.js","fusor-ember-cli/templates/networking.js","fusor-ember-cli/templates/new-environment.js","fusor-ember-cli/templates/new-node-registration.js","fusor-ember-cli/templates/new-organization.js","fusor-ember-cli/templates/new-satellite.js","fusor-ember-cli/templates/nodes.js","fusor-ember-cli/templates/openstack.js","fusor-ember-cli/templates/openstack/index.js","fusor-ember-cli/templates/products.js","fusor-ember-cli/templates/register-nodes.js","fusor-ember-cli/templates/review.js","fusor-ember-cli/templates/review/index.js","fusor-ember-cli/templates/review/installation.js","fusor-ember-cli/templates/review/progress.js","fusor-ember-cli/templates/review/progress/details.js","fusor-ember-cli/templates/review/progress/details/task.js","fusor-ember-cli/templates/review/progress/details/task/index.js","fusor-ember-cli/templates/review/progress/details/task/running-steps.js","fusor-ember-cli/templates/review/progress/details/task/task-errors.js","fusor-ember-cli/templates/review/progress/details/task/task-locks.js","fusor-ember-cli/templates/review/progress/details/task/task-raw.js","fusor-ember-cli/templates/review/progress/overview.js","fusor-ember-cli/templates/rhci.js","fusor-ember-cli/templates/rhev-options.js","fusor-ember-cli/templates/rhev-setup.js","fusor-ember-cli/templates/rhev.js","fusor-ember-cli/templates/satellite.js","fusor-ember-cli/templates/satellite/index.js","fusor-ember-cli/templates/satellite/loading.js","fusor-ember-cli/templates/setpassword.js","fusor-ember-cli/templates/side-menu.js","fusor-ember-cli/templates/side-menu.loading.js","fusor-ember-cli/templates/single-deployment.js","fusor-ember-cli/templates/storage.js","fusor-ember-cli/templates/subscriptions.js","fusor-ember-cli/templates/subscriptions/credentials.js","fusor-ember-cli/templates/subscriptions/index.js","fusor-ember-cli/templates/subscriptions/loading.js","fusor-ember-cli/templates/subscriptions/management-application.js","fusor-ember-cli/templates/subscriptions/management-application.loading.js","fusor-ember-cli/templates/subscriptions/select-subscriptions.js","fusor-ember-cli/templates/topbar.js","fusor-ember-cli/templates/where-install.js","fusor-ember-cli/tests/adapters/application.jshint.js","fusor-ember-cli/tests/adapters/deployment.jshint.js","fusor-ember-cli/tests/adapters/foreman-task.jshint.js","fusor-ember-cli/tests/adapters/session-portal.jshint.js","fusor-ember-cli/tests/app.jshint.js","fusor-ember-cli/tests/components/accordion-item.jshint.js","fusor-ember-cli/tests/components/base-f.jshint.js","fusor-ember-cli/tests/components/button-f.jshint.js","fusor-ember-cli/tests/components/cancel-back-next.jshint.js","fusor-ember-cli/tests/components/deployment-role.jshint.js","fusor-ember-cli/tests/components/env-path-list-item.jshint.js","fusor-ember-cli/tests/components/modal-confirm.jshint.js","fusor-ember-cli/tests/components/node-profile.jshint.js","fusor-ember-cli/tests/components/radio-button-f.jshint.js","fusor-ember-cli/tests/components/rchi-item.jshint.js","fusor-ember-cli/tests/components/review-link.jshint.js","fusor-ember-cli/tests/components/rhci-hover-text.jshint.js","fusor-ember-cli/tests/components/rhci-start.jshint.js","fusor-ember-cli/tests/components/rhci-wizard.jshint.js","fusor-ember-cli/tests/components/select-f.jshint.js","fusor-ember-cli/tests/components/select-simple-f.jshint.js","fusor-ember-cli/tests/components/step-number.jshint.js","fusor-ember-cli/tests/components/subnet-drop-area.jshint.js","fusor-ember-cli/tests/components/text-f.jshint.js","fusor-ember-cli/tests/components/textarea-f.jshint.js","fusor-ember-cli/tests/components/tr-engine.jshint.js","fusor-ember-cli/tests/components/tr-hypervisor.jshint.js","fusor-ember-cli/tests/components/tr-management-app.jshint.js","fusor-ember-cli/tests/components/tr-organization.jshint.js","fusor-ember-cli/tests/components/tr-subscription.jshint.js","fusor-ember-cli/tests/components/tr-task.jshint.js","fusor-ember-cli/tests/components/traffic-type.jshint.js","fusor-ember-cli/tests/components/upstream-downstream.jshint.js","fusor-ember-cli/tests/components/vertical-tab.jshint.js","fusor-ember-cli/tests/components/wizard-item.jshint.js","fusor-ember-cli/tests/controllers/application.jshint.js","fusor-ember-cli/tests/controllers/assign-nodes.jshint.js","fusor-ember-cli/tests/controllers/cloudforms-storage-domain.jshint.js","fusor-ember-cli/tests/controllers/cloudforms-vm.jshint.js","fusor-ember-cli/tests/controllers/cloudforms.jshint.js","fusor-ember-cli/tests/controllers/cloudforms/cfme-configuration.jshint.js","fusor-ember-cli/tests/controllers/configure-environment.jshint.js","fusor-ember-cli/tests/controllers/configure-organization.jshint.js","fusor-ember-cli/tests/controllers/deployment-new.jshint.js","fusor-ember-cli/tests/controllers/deployment-new/satellite.jshint.js","fusor-ember-cli/tests/controllers/deployment-new/satellite/configure-environment.jshint.js","fusor-ember-cli/tests/controllers/deployment-new/satellite/configure-organization.jshint.js","fusor-ember-cli/tests/controllers/deployment-new/satellite/index.jshint.js","fusor-ember-cli/tests/controllers/deployment-new/start.jshint.js","fusor-ember-cli/tests/controllers/deployment.jshint.js","fusor-ember-cli/tests/controllers/deployment/start.jshint.js","fusor-ember-cli/tests/controllers/deployments.jshint.js","fusor-ember-cli/tests/controllers/discovered-host.jshint.js","fusor-ember-cli/tests/controllers/engine.jshint.js","fusor-ember-cli/tests/controllers/engine/discovered-host.jshint.js","fusor-ember-cli/tests/controllers/host.jshint.js","fusor-ember-cli/tests/controllers/hostgroup.jshint.js","fusor-ember-cli/tests/controllers/hypervisor.jshint.js","fusor-ember-cli/tests/controllers/hypervisor/discovered-host.jshint.js","fusor-ember-cli/tests/controllers/lifecycle-environment.jshint.js","fusor-ember-cli/tests/controllers/lifecycle-environments.jshint.js","fusor-ember-cli/tests/controllers/login.jshint.js","fusor-ember-cli/tests/controllers/logout-model.jshint.js","fusor-ember-cli/tests/controllers/networking.jshint.js","fusor-ember-cli/tests/controllers/new-environment.jshint.js","fusor-ember-cli/tests/controllers/new-organization.jshint.js","fusor-ember-cli/tests/controllers/openstack.jshint.js","fusor-ember-cli/tests/controllers/organization.jshint.js","fusor-ember-cli/tests/controllers/organizations.jshint.js","fusor-ember-cli/tests/controllers/products.jshint.js","fusor-ember-cli/tests/controllers/register-nodes.jshint.js","fusor-ember-cli/tests/controllers/review.jshint.js","fusor-ember-cli/tests/controllers/review/installation.jshint.js","fusor-ember-cli/tests/controllers/review/progress.jshint.js","fusor-ember-cli/tests/controllers/review/progress/details/task.jshint.js","fusor-ember-cli/tests/controllers/review/progress/details/task/index.jshint.js","fusor-ember-cli/tests/controllers/review/progress/overview.jshint.js","fusor-ember-cli/tests/controllers/rhci.jshint.js","fusor-ember-cli/tests/controllers/rhev-options.jshint.js","fusor-ember-cli/tests/controllers/rhev-setup.jshint.js","fusor-ember-cli/tests/controllers/rhev.jshint.js","fusor-ember-cli/tests/controllers/satellite.jshint.js","fusor-ember-cli/tests/controllers/satellite/index.jshint.js","fusor-ember-cli/tests/controllers/satellite/subscription.jshint.js","fusor-ember-cli/tests/controllers/side-menu.jshint.js","fusor-ember-cli/tests/controllers/storage.jshint.js","fusor-ember-cli/tests/controllers/subscription.jshint.js","fusor-ember-cli/tests/controllers/subscriptions.jshint.js","fusor-ember-cli/tests/controllers/subscriptions/credentials.jshint.js","fusor-ember-cli/tests/controllers/subscriptions/management-application.jshint.js","fusor-ember-cli/tests/controllers/subscriptions/select-subscriptions.jshint.js","fusor-ember-cli/tests/controllers/where-install.jshint.js","fusor-ember-cli/tests/helpers/raw-text.jshint.js","fusor-ember-cli/tests/helpers/resolver.js","fusor-ember-cli/tests/helpers/resolver.jshint.js","fusor-ember-cli/tests/helpers/start-app.js","fusor-ember-cli/tests/helpers/start-app.jshint.js","fusor-ember-cli/tests/mixins/configure-environment-mixin.jshint.js","fusor-ember-cli/tests/mixins/configure-organization-mixin.jshint.js","fusor-ember-cli/tests/mixins/deployment-controller-mixin.jshint.js","fusor-ember-cli/tests/mixins/deployment-new-controller-mixin.jshint.js","fusor-ember-cli/tests/mixins/deployment-new-satellite-route-mixin.jshint.js","fusor-ember-cli/tests/mixins/deployment-route-mixin.jshint.js","fusor-ember-cli/tests/mixins/disable-tab-mixin.jshint.js","fusor-ember-cli/tests/mixins/meta.jshint.js","fusor-ember-cli/tests/mixins/progress-bar-mixin.jshint.js","fusor-ember-cli/tests/mixins/satellite-controller-mixin.jshint.js","fusor-ember-cli/tests/mixins/save-hostname-mixin.jshint.js","fusor-ember-cli/tests/mixins/start-controller-mixin.jshint.js","fusor-ember-cli/tests/models/deployment.jshint.js","fusor-ember-cli/tests/models/discovered-host.jshint.js","fusor-ember-cli/tests/models/environment.jshint.js","fusor-ember-cli/tests/models/foreman-task.jshint.js","fusor-ember-cli/tests/models/host.jshint.js","fusor-ember-cli/tests/models/hostgroup.jshint.js","fusor-ember-cli/tests/models/lifecycle-environment.jshint.js","fusor-ember-cli/tests/models/location.jshint.js","fusor-ember-cli/tests/models/management-application.jshint.js","fusor-ember-cli/tests/models/organization.jshint.js","fusor-ember-cli/tests/models/product.jshint.js","fusor-ember-cli/tests/models/session-portal.jshint.js","fusor-ember-cli/tests/models/subnet.jshint.js","fusor-ember-cli/tests/models/subscription.jshint.js","fusor-ember-cli/tests/models/traffic-type.jshint.js","fusor-ember-cli/tests/models/user.jshint.js","fusor-ember-cli/tests/router.jshint.js","fusor-ember-cli/tests/routes/application.jshint.js","fusor-ember-cli/tests/routes/assign-nodes.jshint.js","fusor-ember-cli/tests/routes/cloudforms-storage-domain.jshint.js","fusor-ember-cli/tests/routes/cloudforms-vm.jshint.js","fusor-ember-cli/tests/routes/cloudforms.jshint.js","fusor-ember-cli/tests/routes/cloudforms/cfme-configuration.jshint.js","fusor-ember-cli/tests/routes/cloudforms/index.jshint.js","fusor-ember-cli/tests/routes/configure-environment.jshint.js","fusor-ember-cli/tests/routes/configure-organization.jshint.js","fusor-ember-cli/tests/routes/deployment-new.jshint.js","fusor-ember-cli/tests/routes/deployment-new/index.jshint.js","fusor-ember-cli/tests/routes/deployment-new/satellite.jshint.js","fusor-ember-cli/tests/routes/deployment-new/satellite/configure-environment.jshint.js","fusor-ember-cli/tests/routes/deployment-new/satellite/configure-organization.jshint.js","fusor-ember-cli/tests/routes/deployment-new/satellite/index.jshint.js","fusor-ember-cli/tests/routes/deployment-new/start.jshint.js","fusor-ember-cli/tests/routes/deployment.jshint.js","fusor-ember-cli/tests/routes/deployment/index.jshint.js","fusor-ember-cli/tests/routes/deployment/start.jshint.js","fusor-ember-cli/tests/routes/deployments.jshint.js","fusor-ember-cli/tests/routes/discovered-host.jshint.js","fusor-ember-cli/tests/routes/discovered-hosts.jshint.js","fusor-ember-cli/tests/routes/engine.jshint.js","fusor-ember-cli/tests/routes/engine/discovered-host.jshint.js","fusor-ember-cli/tests/routes/engine/existing-host.jshint.js","fusor-ember-cli/tests/routes/engine/hypervisor.jshint.js","fusor-ember-cli/tests/routes/engine/new-host.jshint.js","fusor-ember-cli/tests/routes/hostgroup.jshint.js","fusor-ember-cli/tests/routes/hostgroup/edit.jshint.js","fusor-ember-cli/tests/routes/hostgroups.jshint.js","fusor-ember-cli/tests/routes/hypervisor.jshint.js","fusor-ember-cli/tests/routes/hypervisor/discovered-host.jshint.js","fusor-ember-cli/tests/routes/hypervisor/existing-host.jshint.js","fusor-ember-cli/tests/routes/hypervisor/new-host.jshint.js","fusor-ember-cli/tests/routes/index.jshint.js","fusor-ember-cli/tests/routes/loggedin.jshint.js","fusor-ember-cli/tests/routes/login.jshint.js","fusor-ember-cli/tests/routes/networking.jshint.js","fusor-ember-cli/tests/routes/new-environment.jshint.js","fusor-ember-cli/tests/routes/new-node-registration.jshint.js","fusor-ember-cli/tests/routes/new-organization.jshint.js","fusor-ember-cli/tests/routes/openstack.jshint.js","fusor-ember-cli/tests/routes/openstack/index.jshint.js","fusor-ember-cli/tests/routes/products.jshint.js","fusor-ember-cli/tests/routes/register-nodes.jshint.js","fusor-ember-cli/tests/routes/review.jshint.js","fusor-ember-cli/tests/routes/review/index.jshint.js","fusor-ember-cli/tests/routes/review/installation.jshint.js","fusor-ember-cli/tests/routes/review/progress.jshint.js","fusor-ember-cli/tests/routes/review/progress/details.jshint.js","fusor-ember-cli/tests/routes/review/progress/details/task.jshint.js","fusor-ember-cli/tests/routes/review/progress/details/task/index.jshint.js","fusor-ember-cli/tests/routes/review/progress/details/task/running-steps.jshint.js","fusor-ember-cli/tests/routes/review/progress/details/task/task-errors.jshint.js","fusor-ember-cli/tests/routes/review/progress/details/task/task-locks.jshint.js","fusor-ember-cli/tests/routes/review/progress/details/task/task-raw.jshint.js","fusor-ember-cli/tests/routes/review/progress/overview.jshint.js","fusor-ember-cli/tests/routes/rhci.jshint.js","fusor-ember-cli/tests/routes/rhev-options.jshint.js","fusor-ember-cli/tests/routes/rhev-setup.jshint.js","fusor-ember-cli/tests/routes/rhev.jshint.js","fusor-ember-cli/tests/routes/rhev/index.jshint.js","fusor-ember-cli/tests/routes/satellite.jshint.js","fusor-ember-cli/tests/routes/satellite/index.jshint.js","fusor-ember-cli/tests/routes/setpassword.jshint.js","fusor-ember-cli/tests/routes/single-deployment.jshint.js","fusor-ember-cli/tests/routes/storage.jshint.js","fusor-ember-cli/tests/routes/subscriptions.jshint.js","fusor-ember-cli/tests/routes/subscriptions/credentials.jshint.js","fusor-ember-cli/tests/routes/subscriptions/index.jshint.js","fusor-ember-cli/tests/routes/subscriptions/management-application.jshint.js","fusor-ember-cli/tests/routes/subscriptions/select-subscriptions.jshint.js","fusor-ember-cli/tests/routes/where-install.jshint.js","fusor-ember-cli/tests/serializers/foreman-task.jshint.js","fusor-ember-cli/tests/serializers/puppetclass.jshint.js","fusor-ember-cli/tests/test-helper.js","fusor-ember-cli/tests/test-helper.jshint.js","fusor-ember-cli/tests/torii-providers/foreman.jshint.js","fusor-ember-cli/tests/unit/adapters/application-test.js","fusor-ember-cli/tests/unit/adapters/application-test.jshint.js","fusor-ember-cli/tests/unit/adapters/credential-test.js","fusor-ember-cli/tests/unit/adapters/credential-test.jshint.js","fusor-ember-cli/tests/unit/adapters/foreman-task-test.js","fusor-ember-cli/tests/unit/adapters/foreman-task-test.jshint.js","fusor-ember-cli/tests/unit/adapters/hostgroup-test.js","fusor-ember-cli/tests/unit/adapters/hostgroup-test.jshint.js","fusor-ember-cli/tests/unit/adapters/lifecycle-environment-test.js","fusor-ember-cli/tests/unit/adapters/lifecycle-environment-test.jshint.js","fusor-ember-cli/tests/unit/adapters/subscriptions-test.js","fusor-ember-cli/tests/unit/adapters/subscriptions-test.jshint.js","fusor-ember-cli/tests/unit/adapters/traffic-type-test.js","fusor-ember-cli/tests/unit/adapters/traffic-type-test.jshint.js","fusor-ember-cli/tests/unit/components/accordion-item-test.js","fusor-ember-cli/tests/unit/components/accordion-item-test.jshint.js","fusor-ember-cli/tests/unit/components/base-f-test.js","fusor-ember-cli/tests/unit/components/base-f-test.jshint.js","fusor-ember-cli/tests/unit/components/button-f-test.js","fusor-ember-cli/tests/unit/components/button-f-test.jshint.js","fusor-ember-cli/tests/unit/components/cancel-back-next-test.js","fusor-ember-cli/tests/unit/components/cancel-back-next-test.jshint.js","fusor-ember-cli/tests/unit/components/env-path-list-item-test.js","fusor-ember-cli/tests/unit/components/env-path-list-item-test.jshint.js","fusor-ember-cli/tests/unit/components/modal-confirm-test.js","fusor-ember-cli/tests/unit/components/modal-confirm-test.jshint.js","fusor-ember-cli/tests/unit/components/radio-button-f-test.js","fusor-ember-cli/tests/unit/components/radio-button-f-test.jshint.js","fusor-ember-cli/tests/unit/components/rchi-item-test.js","fusor-ember-cli/tests/unit/components/rchi-item-test.jshint.js","fusor-ember-cli/tests/unit/components/review-link-test.js","fusor-ember-cli/tests/unit/components/review-link-test.jshint.js","fusor-ember-cli/tests/unit/components/rhci-hover-text-test.js","fusor-ember-cli/tests/unit/components/rhci-hover-text-test.jshint.js","fusor-ember-cli/tests/unit/components/rhci-start-test.js","fusor-ember-cli/tests/unit/components/rhci-start-test.jshint.js","fusor-ember-cli/tests/unit/components/rhci-wizard-test.js","fusor-ember-cli/tests/unit/components/rhci-wizard-test.jshint.js","fusor-ember-cli/tests/unit/components/select-f-test.js","fusor-ember-cli/tests/unit/components/select-f-test.jshint.js","fusor-ember-cli/tests/unit/components/select-simple-f-test.js","fusor-ember-cli/tests/unit/components/select-simple-f-test.jshint.js","fusor-ember-cli/tests/unit/components/step-number-test.js","fusor-ember-cli/tests/unit/components/step-number-test.jshint.js","fusor-ember-cli/tests/unit/components/subnet-drop-area-test.js","fusor-ember-cli/tests/unit/components/subnet-drop-area-test.jshint.js","fusor-ember-cli/tests/unit/components/text-f-test.js","fusor-ember-cli/tests/unit/components/text-f-test.jshint.js","fusor-ember-cli/tests/unit/components/textarea-f-test.js","fusor-ember-cli/tests/unit/components/textarea-f-test.jshint.js","fusor-ember-cli/tests/unit/components/tr-engine-test.js","fusor-ember-cli/tests/unit/components/tr-engine-test.jshint.js","fusor-ember-cli/tests/unit/components/tr-hypervisor-test.js","fusor-ember-cli/tests/unit/components/tr-hypervisor-test.jshint.js","fusor-ember-cli/tests/unit/components/tr-management-app-test.js","fusor-ember-cli/tests/unit/components/tr-management-app-test.jshint.js","fusor-ember-cli/tests/unit/components/tr-organization-test.js","fusor-ember-cli/tests/unit/components/tr-organization-test.jshint.js","fusor-ember-cli/tests/unit/components/tr-subscription-test.js","fusor-ember-cli/tests/unit/components/tr-subscription-test.jshint.js","fusor-ember-cli/tests/unit/components/tr-task-test.js","fusor-ember-cli/tests/unit/components/tr-task-test.jshint.js","fusor-ember-cli/tests/unit/components/traffic-type-test.js","fusor-ember-cli/tests/unit/components/traffic-type-test.jshint.js","fusor-ember-cli/tests/unit/components/upstream-downstream-test.js","fusor-ember-cli/tests/unit/components/upstream-downstream-test.jshint.js","fusor-ember-cli/tests/unit/components/vertical-tab-test.js","fusor-ember-cli/tests/unit/components/vertical-tab-test.jshint.js","fusor-ember-cli/tests/unit/components/wizard-item-test.js","fusor-ember-cli/tests/unit/components/wizard-item-test.jshint.js","fusor-ember-cli/tests/unit/components/wrap-in-container-test.js","fusor-ember-cli/tests/unit/components/wrap-in-container-test.jshint.js","fusor-ember-cli/tests/unit/controllers/application-test.js","fusor-ember-cli/tests/unit/controllers/application-test.jshint.js","fusor-ember-cli/tests/unit/controllers/cloudforms-storage-domain-test.js","fusor-ember-cli/tests/unit/controllers/cloudforms-storage-domain-test.jshint.js","fusor-ember-cli/tests/unit/controllers/cloudforms-test.js","fusor-ember-cli/tests/unit/controllers/cloudforms-test.jshint.js","fusor-ember-cli/tests/unit/controllers/cloudforms-vm-test.js","fusor-ember-cli/tests/unit/controllers/cloudforms-vm-test.jshint.js","fusor-ember-cli/tests/unit/controllers/cloudforms/cfme-configuration-test.js","fusor-ember-cli/tests/unit/controllers/cloudforms/cfme-configuration-test.jshint.js","fusor-ember-cli/tests/unit/controllers/configure-environment-test.js","fusor-ember-cli/tests/unit/controllers/configure-environment-test.jshint.js","fusor-ember-cli/tests/unit/controllers/configure-organization-test.js","fusor-ember-cli/tests/unit/controllers/configure-organization-test.jshint.js","fusor-ember-cli/tests/unit/controllers/configure/new-organization-test.js","fusor-ember-cli/tests/unit/controllers/configure/new-organization-test.jshint.js","fusor-ember-cli/tests/unit/controllers/deployment-new-test.js","fusor-ember-cli/tests/unit/controllers/deployment-new-test.jshint.js","fusor-ember-cli/tests/unit/controllers/deployment-new/satellite-test.js","fusor-ember-cli/tests/unit/controllers/deployment-new/satellite-test.jshint.js","fusor-ember-cli/tests/unit/controllers/deployment-new/satellite/configure-environment-test.js","fusor-ember-cli/tests/unit/controllers/deployment-new/satellite/configure-environment-test.jshint.js","fusor-ember-cli/tests/unit/controllers/deployment-new/satellite/configure-organization-test.js","fusor-ember-cli/tests/unit/controllers/deployment-new/satellite/configure-organization-test.jshint.js","fusor-ember-cli/tests/unit/controllers/deployment-new/satellite/index-test.js","fusor-ember-cli/tests/unit/controllers/deployment-new/satellite/index-test.jshint.js","fusor-ember-cli/tests/unit/controllers/deployment-new/start-test.js","fusor-ember-cli/tests/unit/controllers/deployment-new/start-test.jshint.js","fusor-ember-cli/tests/unit/controllers/deployment-test.js","fusor-ember-cli/tests/unit/controllers/deployment-test.jshint.js","fusor-ember-cli/tests/unit/controllers/deployment/start-test.js","fusor-ember-cli/tests/unit/controllers/deployment/start-test.jshint.js","fusor-ember-cli/tests/unit/controllers/deployments-test.js","fusor-ember-cli/tests/unit/controllers/deployments-test.jshint.js","fusor-ember-cli/tests/unit/controllers/discovered-host-test.js","fusor-ember-cli/tests/unit/controllers/discovered-host-test.jshint.js","fusor-ember-cli/tests/unit/controllers/engine-test.js","fusor-ember-cli/tests/unit/controllers/engine-test.jshint.js","fusor-ember-cli/tests/unit/controllers/engine/discovered-host-test.js","fusor-ember-cli/tests/unit/controllers/engine/discovered-host-test.jshint.js","fusor-ember-cli/tests/unit/controllers/host-test.js","fusor-ember-cli/tests/unit/controllers/host-test.jshint.js","fusor-ember-cli/tests/unit/controllers/hostgroup-test.js","fusor-ember-cli/tests/unit/controllers/hostgroup-test.jshint.js","fusor-ember-cli/tests/unit/controllers/hypervisor-test.js","fusor-ember-cli/tests/unit/controllers/hypervisor-test.jshint.js","fusor-ember-cli/tests/unit/controllers/hypervisor/discovered-host-test.js","fusor-ember-cli/tests/unit/controllers/hypervisor/discovered-host-test.jshint.js","fusor-ember-cli/tests/unit/controllers/lifecycle-environment-test.js","fusor-ember-cli/tests/unit/controllers/lifecycle-environment-test.jshint.js","fusor-ember-cli/tests/unit/controllers/lifecycle-environments-test.js","fusor-ember-cli/tests/unit/controllers/lifecycle-environments-test.jshint.js","fusor-ember-cli/tests/unit/controllers/login-test.js","fusor-ember-cli/tests/unit/controllers/login-test.jshint.js","fusor-ember-cli/tests/unit/controllers/logout-model-test.js","fusor-ember-cli/tests/unit/controllers/logout-model-test.jshint.js","fusor-ember-cli/tests/unit/controllers/networking-test.js","fusor-ember-cli/tests/unit/controllers/networking-test.jshint.js","fusor-ember-cli/tests/unit/controllers/new-environment-test.js","fusor-ember-cli/tests/unit/controllers/new-environment-test.jshint.js","fusor-ember-cli/tests/unit/controllers/new-organization-test.js","fusor-ember-cli/tests/unit/controllers/new-organization-test.jshint.js","fusor-ember-cli/tests/unit/controllers/openstack-test.js","fusor-ember-cli/tests/unit/controllers/openstack-test.jshint.js","fusor-ember-cli/tests/unit/controllers/organization-test.js","fusor-ember-cli/tests/unit/controllers/organization-test.jshint.js","fusor-ember-cli/tests/unit/controllers/organizations-test.js","fusor-ember-cli/tests/unit/controllers/organizations-test.jshint.js","fusor-ember-cli/tests/unit/controllers/product-test.js","fusor-ember-cli/tests/unit/controllers/product-test.jshint.js","fusor-ember-cli/tests/unit/controllers/products-test.js","fusor-ember-cli/tests/unit/controllers/products-test.jshint.js","fusor-ember-cli/tests/unit/controllers/review-test.js","fusor-ember-cli/tests/unit/controllers/review-test.jshint.js","fusor-ember-cli/tests/unit/controllers/review/installation-test.js","fusor-ember-cli/tests/unit/controllers/review/installation-test.jshint.js","fusor-ember-cli/tests/unit/controllers/review/progress-test.js","fusor-ember-cli/tests/unit/controllers/review/progress-test.jshint.js","fusor-ember-cli/tests/unit/controllers/review/progress/details/task-test.js","fusor-ember-cli/tests/unit/controllers/review/progress/details/task-test.jshint.js","fusor-ember-cli/tests/unit/controllers/review/progress/details/task/index-test.js","fusor-ember-cli/tests/unit/controllers/review/progress/details/task/index-test.jshint.js","fusor-ember-cli/tests/unit/controllers/review/progress/overview-test.js","fusor-ember-cli/tests/unit/controllers/review/progress/overview-test.jshint.js","fusor-ember-cli/tests/unit/controllers/rhci-test.js","fusor-ember-cli/tests/unit/controllers/rhci-test.jshint.js","fusor-ember-cli/tests/unit/controllers/rhev-options-test.js","fusor-ember-cli/tests/unit/controllers/rhev-options-test.jshint.js","fusor-ember-cli/tests/unit/controllers/rhev-setup-test.js","fusor-ember-cli/tests/unit/controllers/rhev-setup-test.jshint.js","fusor-ember-cli/tests/unit/controllers/rhev-test.js","fusor-ember-cli/tests/unit/controllers/rhev-test.jshint.js","fusor-ember-cli/tests/unit/controllers/rhev/index-test.js","fusor-ember-cli/tests/unit/controllers/rhev/index-test.jshint.js","fusor-ember-cli/tests/unit/controllers/satellite-test.js","fusor-ember-cli/tests/unit/controllers/satellite-test.jshint.js","fusor-ember-cli/tests/unit/controllers/satellite/index-test.js","fusor-ember-cli/tests/unit/controllers/satellite/index-test.jshint.js","fusor-ember-cli/tests/unit/controllers/side-menu-test.js","fusor-ember-cli/tests/unit/controllers/side-menu-test.jshint.js","fusor-ember-cli/tests/unit/controllers/storage-test.js","fusor-ember-cli/tests/unit/controllers/storage-test.jshint.js","fusor-ember-cli/tests/unit/controllers/subscription-test.js","fusor-ember-cli/tests/unit/controllers/subscription-test.jshint.js","fusor-ember-cli/tests/unit/controllers/subscriptions-test.js","fusor-ember-cli/tests/unit/controllers/subscriptions-test.jshint.js","fusor-ember-cli/tests/unit/controllers/subscriptions/credentials-test.js","fusor-ember-cli/tests/unit/controllers/subscriptions/credentials-test.jshint.js","fusor-ember-cli/tests/unit/controllers/subscriptions/management-application-test.js","fusor-ember-cli/tests/unit/controllers/subscriptions/management-application-test.jshint.js","fusor-ember-cli/tests/unit/controllers/subscriptions/select-subscriptions-test.js","fusor-ember-cli/tests/unit/controllers/subscriptions/select-subscriptions-test.jshint.js","fusor-ember-cli/tests/unit/controllers/user-test.js","fusor-ember-cli/tests/unit/controllers/user-test.jshint.js","fusor-ember-cli/tests/unit/controllers/user/edit-test.js","fusor-ember-cli/tests/unit/controllers/user/edit-test.jshint.js","fusor-ember-cli/tests/unit/controllers/users-test.js","fusor-ember-cli/tests/unit/controllers/users-test.jshint.js","fusor-ember-cli/tests/unit/controllers/users/new-test.js","fusor-ember-cli/tests/unit/controllers/users/new-test.jshint.js","fusor-ember-cli/tests/unit/controllers/where-install-test.js","fusor-ember-cli/tests/unit/controllers/where-install-test.jshint.js","fusor-ember-cli/tests/unit/helpers/raw-text-test.js","fusor-ember-cli/tests/unit/helpers/raw-text-test.jshint.js","fusor-ember-cli/tests/unit/mixins/config-environment-mixin-test.js","fusor-ember-cli/tests/unit/mixins/config-environment-mixin-test.jshint.js","fusor-ember-cli/tests/unit/mixins/configure-organization-mixin-test.js","fusor-ember-cli/tests/unit/mixins/configure-organization-mixin-test.jshint.js","fusor-ember-cli/tests/unit/mixins/deployment-controller-mixin-test.js","fusor-ember-cli/tests/unit/mixins/deployment-controller-mixin-test.jshint.js","fusor-ember-cli/tests/unit/mixins/deployment-new-satellite-route-mixin-test.js","fusor-ember-cli/tests/unit/mixins/deployment-new-satellite-route-mixin-test.jshint.js","fusor-ember-cli/tests/unit/mixins/deployment-route-mixin-test.js","fusor-ember-cli/tests/unit/mixins/deployment-route-mixin-test.jshint.js","fusor-ember-cli/tests/unit/mixins/disable-tab-mixin-test.js","fusor-ember-cli/tests/unit/mixins/disable-tab-mixin-test.jshint.js","fusor-ember-cli/tests/unit/mixins/progress-bar-mixin-test.js","fusor-ember-cli/tests/unit/mixins/progress-bar-mixin-test.jshint.js","fusor-ember-cli/tests/unit/mixins/satellite-controller-mixin-test.js","fusor-ember-cli/tests/unit/mixins/satellite-controller-mixin-test.jshint.js","fusor-ember-cli/tests/unit/mixins/save-hostname-mixin-test.js","fusor-ember-cli/tests/unit/mixins/save-hostname-mixin-test.jshint.js","fusor-ember-cli/tests/unit/mixins/start-controller-mixin-test.js","fusor-ember-cli/tests/unit/mixins/start-controller-mixin-test.jshint.js","fusor-ember-cli/tests/unit/models/credential-test.js","fusor-ember-cli/tests/unit/models/credential-test.jshint.js","fusor-ember-cli/tests/unit/models/deployment-host-test.js","fusor-ember-cli/tests/unit/models/deployment-host-test.jshint.js","fusor-ember-cli/tests/unit/models/deployment-test.js","fusor-ember-cli/tests/unit/models/deployment-test.jshint.js","fusor-ember-cli/tests/unit/models/discovered-host-test.js","fusor-ember-cli/tests/unit/models/discovered-host-test.jshint.js","fusor-ember-cli/tests/unit/models/environment-test.js","fusor-ember-cli/tests/unit/models/environment-test.jshint.js","fusor-ember-cli/tests/unit/models/foreman-task-test.js","fusor-ember-cli/tests/unit/models/foreman-task-test.jshint.js","fusor-ember-cli/tests/unit/models/host-test.js","fusor-ember-cli/tests/unit/models/host-test.jshint.js","fusor-ember-cli/tests/unit/models/hostgroup-test.js","fusor-ember-cli/tests/unit/models/hostgroup-test.jshint.js","fusor-ember-cli/tests/unit/models/lifecycle-environment-test.js","fusor-ember-cli/tests/unit/models/lifecycle-environment-test.jshint.js","fusor-ember-cli/tests/unit/models/location-test.js","fusor-ember-cli/tests/unit/models/location-test.jshint.js","fusor-ember-cli/tests/unit/models/management-application-test.js","fusor-ember-cli/tests/unit/models/management-application-test.jshint.js","fusor-ember-cli/tests/unit/models/organization-test.js","fusor-ember-cli/tests/unit/models/organization-test.jshint.js","fusor-ember-cli/tests/unit/models/product-test.js","fusor-ember-cli/tests/unit/models/product-test.jshint.js","fusor-ember-cli/tests/unit/models/rhev-setup-test.js","fusor-ember-cli/tests/unit/models/rhev-setup-test.jshint.js","fusor-ember-cli/tests/unit/models/subnet-test.js","fusor-ember-cli/tests/unit/models/subnet-test.jshint.js","fusor-ember-cli/tests/unit/models/subscription-test.js","fusor-ember-cli/tests/unit/models/subscription-test.jshint.js","fusor-ember-cli/tests/unit/models/traffic-type-test.js","fusor-ember-cli/tests/unit/models/traffic-type-test.jshint.js","fusor-ember-cli/tests/unit/models/user-test.js","fusor-ember-cli/tests/unit/models/user-test.jshint.js","fusor-ember-cli/tests/unit/routes/application-test.js","fusor-ember-cli/tests/unit/routes/application-test.jshint.js","fusor-ember-cli/tests/unit/routes/assign-nodes-test.js","fusor-ember-cli/tests/unit/routes/assign-nodes-test.jshint.js","fusor-ember-cli/tests/unit/routes/cloudforms-storage-domain-test.js","fusor-ember-cli/tests/unit/routes/cloudforms-storage-domain-test.jshint.js","fusor-ember-cli/tests/unit/routes/cloudforms-test.js","fusor-ember-cli/tests/unit/routes/cloudforms-test.jshint.js","fusor-ember-cli/tests/unit/routes/cloudforms-vm-test.js","fusor-ember-cli/tests/unit/routes/cloudforms-vm-test.jshint.js","fusor-ember-cli/tests/unit/routes/cloudforms/cfme-configuration-test.js","fusor-ember-cli/tests/unit/routes/cloudforms/cfme-configuration-test.jshint.js","fusor-ember-cli/tests/unit/routes/cloudforms/index-test.js","fusor-ember-cli/tests/unit/routes/cloudforms/index-test.jshint.js","fusor-ember-cli/tests/unit/routes/configure-environment-test.js","fusor-ember-cli/tests/unit/routes/configure-environment-test.jshint.js","fusor-ember-cli/tests/unit/routes/configure-organization-test.js","fusor-ember-cli/tests/unit/routes/configure-organization-test.jshint.js","fusor-ember-cli/tests/unit/routes/configure/new-organization-test.js","fusor-ember-cli/tests/unit/routes/configure/new-organization-test.jshint.js","fusor-ember-cli/tests/unit/routes/content-test.js","fusor-ember-cli/tests/unit/routes/content-test.jshint.js","fusor-ember-cli/tests/unit/routes/deployment-new-test.js","fusor-ember-cli/tests/unit/routes/deployment-new-test.jshint.js","fusor-ember-cli/tests/unit/routes/deployment-new/index-test.js","fusor-ember-cli/tests/unit/routes/deployment-new/index-test.jshint.js","fusor-ember-cli/tests/unit/routes/deployment-new/satellite-test.js","fusor-ember-cli/tests/unit/routes/deployment-new/satellite-test.jshint.js","fusor-ember-cli/tests/unit/routes/deployment-new/satellite/configure-environment-test.js","fusor-ember-cli/tests/unit/routes/deployment-new/satellite/configure-environment-test.jshint.js","fusor-ember-cli/tests/unit/routes/deployment-new/satellite/configure-organization-test.js","fusor-ember-cli/tests/unit/routes/deployment-new/satellite/configure-organization-test.jshint.js","fusor-ember-cli/tests/unit/routes/deployment-new/satellite/index-test.js","fusor-ember-cli/tests/unit/routes/deployment-new/satellite/index-test.jshint.js","fusor-ember-cli/tests/unit/routes/deployment-new/start-test.js","fusor-ember-cli/tests/unit/routes/deployment-new/start-test.jshint.js","fusor-ember-cli/tests/unit/routes/deployment-test.js","fusor-ember-cli/tests/unit/routes/deployment-test.jshint.js","fusor-ember-cli/tests/unit/routes/deployment/index-test.js","fusor-ember-cli/tests/unit/routes/deployment/index-test.jshint.js","fusor-ember-cli/tests/unit/routes/deployment/new-test.js","fusor-ember-cli/tests/unit/routes/deployment/new-test.jshint.js","fusor-ember-cli/tests/unit/routes/deployment/review-test.js","fusor-ember-cli/tests/unit/routes/deployment/review-test.jshint.js","fusor-ember-cli/tests/unit/routes/deployment/satellite/configure/new-organization-test.js","fusor-ember-cli/tests/unit/routes/deployment/satellite/configure/new-organization-test.jshint.js","fusor-ember-cli/tests/unit/routes/deployment/start-test.js","fusor-ember-cli/tests/unit/routes/deployment/start-test.jshint.js","fusor-ember-cli/tests/unit/routes/deployments-test.js","fusor-ember-cli/tests/unit/routes/deployments-test.jshint.js","fusor-ember-cli/tests/unit/routes/discovered-host-test.js","fusor-ember-cli/tests/unit/routes/discovered-host-test.jshint.js","fusor-ember-cli/tests/unit/routes/discovered-hosts-test.js","fusor-ember-cli/tests/unit/routes/discovered-hosts-test.jshint.js","fusor-ember-cli/tests/unit/routes/engine-test.js","fusor-ember-cli/tests/unit/routes/engine-test.jshint.js","fusor-ember-cli/tests/unit/routes/engine/discovered-host-test.js","fusor-ember-cli/tests/unit/routes/engine/discovered-host-test.jshint.js","fusor-ember-cli/tests/unit/routes/engine/existing-host-test.js","fusor-ember-cli/tests/unit/routes/engine/existing-host-test.jshint.js","fusor-ember-cli/tests/unit/routes/engine/hypervisor-test.js","fusor-ember-cli/tests/unit/routes/engine/hypervisor-test.jshint.js","fusor-ember-cli/tests/unit/routes/engine/new-host-test.js","fusor-ember-cli/tests/unit/routes/engine/new-host-test.jshint.js","fusor-ember-cli/tests/unit/routes/hostgroup-test.js","fusor-ember-cli/tests/unit/routes/hostgroup-test.jshint.js","fusor-ember-cli/tests/unit/routes/hostgroup/edit-test.js","fusor-ember-cli/tests/unit/routes/hostgroup/edit-test.jshint.js","fusor-ember-cli/tests/unit/routes/hostgroups-test.js","fusor-ember-cli/tests/unit/routes/hostgroups-test.jshint.js","fusor-ember-cli/tests/unit/routes/hypervisor-test.js","fusor-ember-cli/tests/unit/routes/hypervisor-test.jshint.js","fusor-ember-cli/tests/unit/routes/hypervisor/discovered-host-test.js","fusor-ember-cli/tests/unit/routes/hypervisor/discovered-host-test.jshint.js","fusor-ember-cli/tests/unit/routes/hypervisor/existing-host-test.js","fusor-ember-cli/tests/unit/routes/hypervisor/existing-host-test.jshint.js","fusor-ember-cli/tests/unit/routes/hypervisor/new-host-test.js","fusor-ember-cli/tests/unit/routes/hypervisor/new-host-test.jshint.js","fusor-ember-cli/tests/unit/routes/index-test.js","fusor-ember-cli/tests/unit/routes/index-test.jshint.js","fusor-ember-cli/tests/unit/routes/loggedin-test.js","fusor-ember-cli/tests/unit/routes/loggedin-test.jshint.js","fusor-ember-cli/tests/unit/routes/login-test.js","fusor-ember-cli/tests/unit/routes/login-test.jshint.js","fusor-ember-cli/tests/unit/routes/networking-test.js","fusor-ember-cli/tests/unit/routes/networking-test.jshint.js","fusor-ember-cli/tests/unit/routes/new-environment-test.js","fusor-ember-cli/tests/unit/routes/new-environment-test.jshint.js","fusor-ember-cli/tests/unit/routes/new-organization-test.js","fusor-ember-cli/tests/unit/routes/new-organization-test.jshint.js","fusor-ember-cli/tests/unit/routes/openstack-test.js","fusor-ember-cli/tests/unit/routes/openstack-test.jshint.js","fusor-ember-cli/tests/unit/routes/openstack/index-test.js","fusor-ember-cli/tests/unit/routes/openstack/index-test.jshint.js","fusor-ember-cli/tests/unit/routes/register-nodes-test.js","fusor-ember-cli/tests/unit/routes/register-nodes-test.jshint.js","fusor-ember-cli/tests/unit/routes/review-test.js","fusor-ember-cli/tests/unit/routes/review-test.jshint.js","fusor-ember-cli/tests/unit/routes/review/index-test.js","fusor-ember-cli/tests/unit/routes/review/index-test.jshint.js","fusor-ember-cli/tests/unit/routes/review/installation-test.js","fusor-ember-cli/tests/unit/routes/review/installation-test.jshint.js","fusor-ember-cli/tests/unit/routes/review/progress-test.js","fusor-ember-cli/tests/unit/routes/review/progress-test.jshint.js","fusor-ember-cli/tests/unit/routes/review/progress/details-test.js","fusor-ember-cli/tests/unit/routes/review/progress/details-test.jshint.js","fusor-ember-cli/tests/unit/routes/review/progress/details/task-test.js","fusor-ember-cli/tests/unit/routes/review/progress/details/task-test.jshint.js","fusor-ember-cli/tests/unit/routes/review/progress/details/task/index-test.js","fusor-ember-cli/tests/unit/routes/review/progress/details/task/index-test.jshint.js","fusor-ember-cli/tests/unit/routes/review/progress/details/task/running-steps-test.js","fusor-ember-cli/tests/unit/routes/review/progress/details/task/running-steps-test.jshint.js","fusor-ember-cli/tests/unit/routes/review/progress/details/task/task-errors-test.js","fusor-ember-cli/tests/unit/routes/review/progress/details/task/task-errors-test.jshint.js","fusor-ember-cli/tests/unit/routes/review/progress/details/task/task-locks-test.js","fusor-ember-cli/tests/unit/routes/review/progress/details/task/task-locks-test.jshint.js","fusor-ember-cli/tests/unit/routes/review/progress/details/task/task-raw-test.js","fusor-ember-cli/tests/unit/routes/review/progress/details/task/task-raw-test.jshint.js","fusor-ember-cli/tests/unit/routes/review/progress/overview-test.js","fusor-ember-cli/tests/unit/routes/review/progress/overview-test.jshint.js","fusor-ember-cli/tests/unit/routes/rhci-test.js","fusor-ember-cli/tests/unit/routes/rhci-test.jshint.js","fusor-ember-cli/tests/unit/routes/rhev-options-test.js","fusor-ember-cli/tests/unit/routes/rhev-options-test.jshint.js","fusor-ember-cli/tests/unit/routes/rhev-setup-test.js","fusor-ember-cli/tests/unit/routes/rhev-setup-test.jshint.js","fusor-ember-cli/tests/unit/routes/rhev-test.js","fusor-ember-cli/tests/unit/routes/rhev-test.jshint.js","fusor-ember-cli/tests/unit/routes/rhev/engine-test.js","fusor-ember-cli/tests/unit/routes/rhev/engine-test.jshint.js","fusor-ember-cli/tests/unit/routes/rhev/index-test.js","fusor-ember-cli/tests/unit/routes/rhev/index-test.jshint.js","fusor-ember-cli/tests/unit/routes/satellite-test.js","fusor-ember-cli/tests/unit/routes/satellite-test.jshint.js","fusor-ember-cli/tests/unit/routes/satellite/configure-test.js","fusor-ember-cli/tests/unit/routes/satellite/configure-test.jshint.js","fusor-ember-cli/tests/unit/routes/satellite/index-test.js","fusor-ember-cli/tests/unit/routes/satellite/index-test.jshint.js","fusor-ember-cli/tests/unit/routes/satellite/review-test.js","fusor-ember-cli/tests/unit/routes/satellite/review-test.jshint.js","fusor-ember-cli/tests/unit/routes/satellite/subscriptions-test.js","fusor-ember-cli/tests/unit/routes/satellite/subscriptions-test.jshint.js","fusor-ember-cli/tests/unit/routes/setpassword-test.js","fusor-ember-cli/tests/unit/routes/setpassword-test.jshint.js","fusor-ember-cli/tests/unit/routes/single-deployment-test.js","fusor-ember-cli/tests/unit/routes/single-deployment-test.jshint.js","fusor-ember-cli/tests/unit/routes/storage-test.js","fusor-ember-cli/tests/unit/routes/storage-test.jshint.js","fusor-ember-cli/tests/unit/routes/subscriptions/credentials-test.js","fusor-ember-cli/tests/unit/routes/subscriptions/credentials-test.jshint.js","fusor-ember-cli/tests/unit/routes/subscriptions/index-test.js","fusor-ember-cli/tests/unit/routes/subscriptions/index-test.jshint.js","fusor-ember-cli/tests/unit/routes/subscriptions/management-application-test.js","fusor-ember-cli/tests/unit/routes/subscriptions/management-application-test.jshint.js","fusor-ember-cli/tests/unit/routes/subscriptions/select-subscriptions-test.js","fusor-ember-cli/tests/unit/routes/subscriptions/select-subscriptions-test.jshint.js","fusor-ember-cli/tests/unit/routes/user-test.js","fusor-ember-cli/tests/unit/routes/user-test.jshint.js","fusor-ember-cli/tests/unit/routes/user/edit-test.js","fusor-ember-cli/tests/unit/routes/user/edit-test.jshint.js","fusor-ember-cli/tests/unit/routes/users-test.js","fusor-ember-cli/tests/unit/routes/users-test.jshint.js","fusor-ember-cli/tests/unit/routes/users/new-test.js","fusor-ember-cli/tests/unit/routes/users/new-test.jshint.js","fusor-ember-cli/tests/unit/routes/where-install-test.js","fusor-ember-cli/tests/unit/routes/where-install-test.jshint.js","fusor-ember-cli/tests/unit/serializers/discovered-host-test.js","fusor-ember-cli/tests/unit/serializers/discovered-host-test.jshint.js","fusor-ember-cli/tests/unit/serializers/foreman-task-test.js","fusor-ember-cli/tests/unit/serializers/foreman-task-test.jshint.js","fusor-ember-cli/tests/unit/views/application-test.js","fusor-ember-cli/tests/unit/views/application-test.jshint.js","fusor-ember-cli/tests/unit/views/configure-test.js","fusor-ember-cli/tests/unit/views/configure-test.jshint.js","fusor-ember-cli/tests/unit/views/organization-test.js","fusor-ember-cli/tests/unit/views/organization-test.jshint.js","fusor-ember-cli/tests/unit/views/rhci-test.js","fusor-ember-cli/tests/unit/views/rhci-test.jshint.js","fusor-ember-cli/tests/views/configure.jshint.js","fusor-ember-cli/tests/views/organization.jshint.js","fusor-ember-cli/tests/views/rhci.jshint.js","fusor-ember-cli/torii-providers/foreman.js","fusor-ember-cli/views/configure.js","fusor-ember-cli/views/organization.js","fusor-ember-cli/views/rhci.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('fusor-ember-cli/adapters/application', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    var token = $('meta[name=\"csrf-token\"]').attr('content');\n    exports['default'] = DS['default'].ActiveModelAdapter.extend({\n        namespace: 'api/v21',\n        headers: {\n            'X-CSRF-Token': token\n        }\n    });\n\n});","define('fusor-ember-cli/adapters/deployment', ['exports', 'ember-data'], function (exports, DS) {\n\n    'use strict';\n\n    var token = $('meta[name=\"csrf-token\"]').attr('content');\n    exports['default'] = DS['default'].ActiveModelAdapter.extend({\n        namespace: 'fusor/api/v21',\n        headers: {\n            'X-CSRF-Token': token\n        }\n    });\n\n});","define('fusor-ember-cli/adapters/foreman-task', ['exports'], function (exports) {\n\n    'use strict';\n\n    var token = $('meta[name=\"csrf-token\"]').attr('content');\n    exports['default'] = DS.ActiveModelAdapter.extend({\n        namespace: 'api/v21',\n        headers: {\n            'X-CSRF-Token': token\n        }\n    });\n\n});","define('fusor-ember-cli/adapters/session-portal', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].LSAdapter.extend({\n    namespace: 'rhci'\n  });\n\n});","define('fusor-ember-cli/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'fusor-ember-cli/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  var App;\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('fusor-ember-cli/components/accordion-item', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    isOpen: false,\n    actions: {\n      openItem: function openItem() {\n        this.set('isOpen', this.toggleProperty('isOpen'));\n      }\n    }\n  });\n\n});","define('fusor-ember-cli/components/base-f', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n\n    labelClassSize: (function () {\n      return this.getWithDefault('labelSize', 'col-md-2');\n    }).property(),\n\n    inputClassSize: (function () {\n      return this.getWithDefault('inputSize', 'col-md-4');\n    }).property(),\n\n    showUnits: (function () {\n      return Ember['default'].isBlank(this.get('unitsLabel'));\n    }).property('unitsLabel'),\n\n    unitsClassSize: (function () {\n      return this.getWithDefault('unitsSize', 'col-md-2');\n    }).property()\n  });\n\n});","define('fusor-ember-cli/components/button-f', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    tagName: 'button',\n    classNames: ['btn btn-primary'],\n    attributeBindings: ['disabled'],\n    click: function click() {\n      this.sendAction();\n    }\n  });\n\n});","define('fusor-ember-cli/components/cancel-back-next', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n\n    classNames: ['row'],\n\n    actions: {\n      saveAndCancelDeployment: function saveAndCancelDeployment() {\n        var self = this.get('targetObject');\n        self.send('saveAndCancelDeployment');\n        return self.set('closeModal', true);\n      },\n\n      cancelAndDeleteDeployment: function cancelAndDeleteDeployment() {\n        var self = this.get('targetObject');\n        self.send('cancelAndDeleteDeployment');\n        return self.set('closeModal', true);\n      } }\n\n  });\n\n});","define('fusor-ember-cli/components/deployment-role', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    assignedClass: (function () {\n      if (this.get('role-assigned')) {\n        return 'role-assigned';\n      } else {\n        return '';\n      }\n    }).property('role-assigned'),\n\n    roleLabel: (function () {\n      var roleLabel = this.get('role-label');\n      var roleType = this.get('role-type');\n      if (roleType === 'controller' && this.get('assignedNodes') > 1) {\n        roleLabel += ' (HA)';\n      }\n      return roleLabel;\n    }).property('role-label', 'role-type', 'assignedNodes'),\n\n    assignedNodes: (function () {\n      var roleType = this.get('role-type');\n      var profile = this.get('profile');\n      if (!this.get('role-assigned')) {\n        return 0;\n      }\n\n      if (roleType === 'controller') {\n        return profile.get('controllerNodes');\n      } else if (roleType === 'compute') {\n        return profile.get('computeNodes');\n      } else if (roleType === 'block') {\n        return profile.get('blockNodes');\n      } else if (roleType === 'object') {\n        return profile.get('objectNodes');\n      }\n    }).property('profile', 'profile.controllerNodes', 'profile.computeNodes', 'profile.blockNodes', 'profile.objectNodes'),\n\n    maxToAssign: (function () {\n      var numNodes = this.get('assignedNodes');\n      var freeNodes = this.get('profile').get('freeNodes');\n      return freeNodes + numNodes;\n    }).property('profile', 'profile.freeNodes', 'assignedNodes'),\n\n    availableOptions: (function () {\n      var avail = [];\n      var assignedNodes = this.get('assignedNodes');\n      var roleType = this.get('role-type');\n      var increment = 1;\n      if (roleType == 'controller') {\n        increment = 2;\n      }\n\n      for (var i = 1; i <= this.get('maxToAssign'); i = i + increment) {\n        var nextOption = Ember['default'].Object.create({\n          label: '' + i,\n          value: i,\n          selected: i === assignedNodes\n        });\n        avail.pushObject(nextOption);\n      }\n\n      return avail;\n    }).property('maxToAssign', 'assignedNodes', 'profile.freeNodes'),\n\n    actions: {\n      assignNodes: function assignNodes() {\n        var newCount = parseInt(this.$('select').val());\n        var roleType = this.get('role-type');\n        var profile = this.get('profile');\n        if (roleType === 'controller') {\n          profile.set('controllerNodes', newCount);\n        } else if (roleType === 'compute') {\n          profile.set('computeNodes', newCount);\n        } else if (roleType === 'block') {\n          profile.set('blockNodes', newCount);\n        } else if (roleType === 'object') {\n          profile.set('objectNodes', newCount);\n        }\n      },\n\n      editRole: function editRole(roleType) {\n        this.sendAction('edit', roleType);\n      },\n\n      removeRole: function removeRole(roleType) {\n        this.sendAction('remove', roleType);\n      }\n    }\n  });\n\n});","define('fusor-ember-cli/components/draggable-object-target', ['exports', 'ember', 'ember-drag-drop/mixins/droppable', 'fusor-ember-cli/helpers/log'], function (exports, Ember, Droppable, log) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend(Droppable['default'], {\n    classNames: ['draggable-object-target'],\n\n    handlePayload: function handlePayload(payload) {\n      log['default']('in handlePayload');\n      var obj = this.get('coordinator').getObject(payload, { target: this });\n      this.sendAction('action', obj, { target: this });\n      //throw obj.get(\"rating\");\n      // obj.set('rating','good');\n      // if (obj.save) {\n      //   obj.save();\n      // }\n    },\n\n    handleDrop: function handleDrop(event) {\n      var dataTransfer = event.dataTransfer;\n      var payload = dataTransfer.getData('Text');\n      this.handlePayload(payload);\n    },\n\n    acceptDrop: function acceptDrop(event) {\n      this.handleDrop(event);\n    },\n\n    actions: {\n      acceptForDrop: function acceptForDrop() {\n        var hashId = this.get('coordinator.clickedId');\n        this.handlePayload(hashId);\n      }\n    }\n  });\n\n});","define('fusor-ember-cli/components/draggable-object', ['exports', 'ember', 'fusor-ember-cli/helpers/log'], function (exports, Ember, log) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    tagName: 'div',\n    classNames: ['draggable-object'],\n    classNameBindings: ['isDraggingObject'],\n    attributeBindings: ['draggable'],\n\n    draggable: (function () {\n      return 'true';\n    }).property(),\n\n    handleDragStart: (function (event) {\n      log['default']('handleDragStart');\n\n      var dataTransfer = event.dataTransfer;\n\n      var obj = this.get('content');\n      var id = this.get('coordinator').setObject(obj, { source: this });\n\n      dataTransfer.setData('Text', id);\n\n      obj.set('isDraggingObject', true);\n      this.set('isDraggingObject', true);\n    }).on('dragStart'),\n\n    handleDragEnd: (function () {\n      log['default']('handleDragEnd');\n      this.set('content.isDraggingObject', false);\n      this.set('isDraggingObject', false);\n    }).on('dragEnd'),\n\n    actions: {\n      selectForDrag: function selectForDrag() {\n        log['default']('selectForDrag');\n        var obj = this.get('content');\n        var hashId = this.get('coordinator').setObject(obj, { source: this });\n        this.get('coordinator').set('clickedId', hashId);\n      }\n    }\n  });\n\n});","define('fusor-ember-cli/components/em-button', ['exports', 'ember-idx-button/button'], function (exports, ButtonComponent) {\n\n\t'use strict';\n\n\texports['default'] = ButtonComponent['default'];\n\n});","define('fusor-ember-cli/components/em-checkbox', ['exports', 'ember', 'ember-idx-forms/checkbox'], function (exports, Ember, CheckboxComponent) {\n\n\t'use strict';\n\n\texports['default'] = CheckboxComponent['default'];\n\n});","define('fusor-ember-cli/components/em-form-control-help', ['exports', 'ember', 'ember-idx-forms/control_help'], function (exports, Ember, FormControlHelperComponent) {\n\n\t'use strict';\n\n\texports['default'] = FormControlHelperComponent['default'];\n\n});","define('fusor-ember-cli/components/em-form-group', ['exports', 'ember', 'ember-idx-forms/group'], function (exports, Ember, FormGroupComponent) {\n\n\t'use strict';\n\n\texports['default'] = FormGroupComponent['default'];\n\n});","define('fusor-ember-cli/components/em-form-label', ['exports', 'ember', 'ember-idx-forms/label'], function (exports, Ember, FormLabelComponent) {\n\n\t'use strict';\n\n\texports['default'] = FormLabelComponent['default'];\n\n});","define('fusor-ember-cli/components/em-form-submit', ['exports', 'ember', 'ember-idx-forms/submit_button'], function (exports, Ember, SubmitButtonComponent) {\n\n\t'use strict';\n\n\texports['default'] = SubmitButtonComponent['default'];\n\n});","define('fusor-ember-cli/components/em-form', ['exports', 'ember', 'ember-idx-forms/form'], function (exports, Ember, FormComponent) {\n\n\t'use strict';\n\n\texports['default'] = FormComponent['default'];\n\n});","define('fusor-ember-cli/components/em-input', ['exports', 'ember', 'ember-idx-forms/input'], function (exports, Ember, InputComponent) {\n\n\t'use strict';\n\n\texports['default'] = InputComponent['default'];\n\n});","define('fusor-ember-cli/components/em-modal-body', ['exports', 'ember-idx-modal/modal-body'], function (exports, BodyComponent) {\n\n\t'use strict';\n\n\texports['default'] = BodyComponent['default'];\n\n});","define('fusor-ember-cli/components/em-modal-confirm-with-reason', ['exports', 'ember-idx-modal/modal-confirm-with-reason'], function (exports, ConfirmWithReasonModal) {\n\n\t'use strict';\n\n\texports['default'] = ConfirmWithReasonModal['default'];\n\n});","define('fusor-ember-cli/components/em-modal-confirm', ['exports', 'ember-idx-modal/modal-confirm'], function (exports, ModalConfirm) {\n\n\t'use strict';\n\n\texports['default'] = ModalConfirm['default'];\n\n});","define('fusor-ember-cli/components/em-modal-emform', ['exports', 'ember-idx-modal/modal-emform'], function (exports, ModalEmFormComponent) {\n\n\t'use strict';\n\n\texports['default'] = ModalEmFormComponent['default'];\n\n});","define('fusor-ember-cli/components/em-modal-footer', ['exports', 'ember-idx-modal/modal-footer'], function (exports, FooterComponent) {\n\n\t'use strict';\n\n\texports['default'] = FooterComponent['default'];\n\n});","define('fusor-ember-cli/components/em-modal-form', ['exports', 'ember-idx-modal/modal-form'], function (exports, ModalFormComponent) {\n\n\t'use strict';\n\n\texports['default'] = ModalFormComponent['default'];\n\n});","define('fusor-ember-cli/components/em-modal-title', ['exports', 'ember-idx-modal/modal-title'], function (exports, TitleComponent) {\n\n\t'use strict';\n\n\texports['default'] = TitleComponent['default'];\n\n});","define('fusor-ember-cli/components/em-modal-toggler', ['exports', 'ember-idx-modal/modal-toggler'], function (exports, TogglerComponent) {\n\n\t'use strict';\n\n\texports['default'] = TogglerComponent['default'];\n\n});","define('fusor-ember-cli/components/em-modal', ['exports', 'ember-idx-modal/modal'], function (exports, ModalComponent) {\n\n\t'use strict';\n\n\texports['default'] = ModalComponent['default'];\n\n});","define('fusor-ember-cli/components/em-select', ['exports', 'ember', 'ember-idx-forms/select'], function (exports, Ember, SelectComponent) {\n\n\t'use strict';\n\n\texports['default'] = SelectComponent['default'];\n\n});","define('fusor-ember-cli/components/em-text', ['exports', 'ember', 'ember-idx-forms/text'], function (exports, Ember, TextComponent) {\n\n\t'use strict';\n\n\texports['default'] = TextComponent['default'];\n\n});","define('fusor-ember-cli/components/env-path-list-item', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    tagName: 'li',\n    classNames: ['path-list-item', 'list_item_active'],\n\n    isChecked: (function () {\n      return this.get('selectedEnvironment') === this.get('env');\n    }).property('selectedEnvironment', 'env'),\n\n    bgColor: (function () {\n      if (this.get('isChecked')) {\n        return 'env_path_active';\n      } else {\n        return null;\n      }\n    }).property('isChecked'),\n\n    envCssId: (function () {\n      return 'env_' + this.get('env.id');\n    }).property('env'),\n\n    click: function click(event) {\n      this.sendAction('action', this.get('env'));\n    }\n\n  });\n\n});","define('fusor-ember-cli/components/labeled-radio-button', ['exports', 'ember-radio-button/components/labeled-radio-button'], function (exports, LabeledRadioButton) {\n\n\t'use strict';\n\n\texports['default'] = LabeledRadioButton['default'];\n\n});","define('fusor-ember-cli/components/markdown-to-html', ['exports', 'ember-cli-showdown/components/markdown-to-html'], function (exports, MarkdownToHtml) {\n\n\t'use strict';\n\n\texports['default'] = MarkdownToHtml['default'];\n\n});","define('fusor-ember-cli/components/modal-confirm', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n\n    dismissButtonLabel: (function () {\n      return this.getWithDefault('dismissLabel', 'Close');\n    }).property('dismissLabel'),\n\n    okButtonLabel: (function () {\n      return this.getWithDefault('okLabel', 'Yes');\n    }).property('okLabel'),\n\n    actions: {\n      ok: function ok() {\n        this.$('.modal').modal('hide');\n        this.sendAction('ok');\n      }\n    },\n\n    show: (function () {\n      this.$('.modal').modal().on('hidden.bs.modal', (function () {\n        this.sendAction('close');\n      }).bind(this));\n    }).on('didInsertElement')\n\n  });\n\n});","define('fusor-ember-cli/components/node-profile', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    assignMenuOpenClass: '',\n\n    profile: null,\n    nodeProfiles: null,\n\n    assignedRoles: (function () {\n      var roles = [];\n      var profile = this.get('profile');\n      var me = this;\n\n      var Role = Ember['default'].Object.extend({\n        roleType: '',\n        roleLabel: '',\n        profile: profile,\n        isDraggingObject: false,\n        watchForDrag: (function () {\n\n          if (this.get('isDraggingObject')) {\n            me.sendAction('startDrag', this);\n          } else {\n            me.sendAction('stopDrag', this);\n          }\n        }).observes('isDraggingObject')\n      });\n\n      if (profile.get('isControl')) {\n        roles.pushObject(Role.create({\n          roleType: 'controller',\n          roleLabel: 'Controller'\n        }));\n      }\n      if (profile.get('isCompute')) {\n        roles.pushObject(Role.create({\n          roleType: 'compute',\n          roleLabel: 'Compute'\n        }));\n      }\n      if (profile.get('isBlockStorage')) {\n        roles.pushObject(Role.create({\n          roleType: 'block',\n          roleLabel: 'Block Storage'\n        }));\n      }\n      if (profile.get('isObjectStorage')) {\n        roles.pushObject(Role.create({\n          roleType: 'object',\n          roleLabel: 'Object Storage'\n        }));\n      }\n      return roles;\n    }).property('profile.isCompute', 'profile.isControl', 'profile.isBlockStorage', 'profile.isObjectStorage'),\n\n    controllerAssigned: (function () {\n      var profiles = this.get('nodeProfiles');\n      if (!profiles) {\n        return false;\n      }\n      var retVal = false;\n      profiles.forEach(function (item, index) {\n        if (item.get('isControl')) {\n          retVal = true;\n        }\n      });\n      return retVal;\n    }).property('nodeProfiles', 'nodeProfiles.@each.isControl'),\n\n    computeAssigned: (function () {\n      var profiles = this.get('nodeProfiles');\n      if (!profiles) {\n        return false;\n      }\n      var retVal = false;\n      profiles.forEach(function (item, index) {\n        if (item.get('isCompute')) {\n          retVal = true;\n        }\n      });\n      return retVal;\n    }).property('nodeProfiles.@each.isCompute'),\n\n    blockAssigned: (function () {\n      var profiles = this.get('nodeProfiles');\n      if (!profiles) {\n        return false;\n      }\n      var retVal = false;\n      profiles.forEach(function (item, index) {\n        if (item.get('isBlockStorage')) {\n          retVal = true;\n        }\n      });\n      return retVal;\n    }).property('nodeProfiles.@each.isBlockStorage'),\n\n    objectAssigned: (function () {\n      var profiles = this.get('nodeProfiles');\n      if (!profiles) {\n        return false;\n      }\n      var retVal = false;\n      profiles.forEach(function (item, index) {\n        if (item.get('isObjectStorage')) {\n          retVal = true;\n        }\n      });\n      return retVal;\n    }).property('nodeProfiles.@each.isObjectStorage'),\n\n    freeNodes: (function () {\n      var profile = this.get('profile');\n      return profile.get('totalNodes') - profile.get('controllerNodes') - profile.get('computeNodes') - profile.get('blockNodes') - profile.get('objectNodes');\n    }).property('profile.totalNodes', 'profile.controllerNodes', 'profile.computeNodes', 'profile.blockNodes', 'profile.objectNodes'),\n\n    allAssigned: (function () {\n      return this.get('controllerAssigned') && this.get('computeAssigned') && this.get('blockAssigned') && this.get('objectAssigned');\n    }).property('controllerAssigned', 'computeAssigned', 'blockAssigned', 'objectAssigned'),\n\n    hideAssignMenu: function hideAssignMenu() {\n      this.set('assignMenuOpenClass', '');\n    },\n\n    actions: {\n      showAssignMenu: function showAssignMenu(profile) {\n        if (this.get('freeNodes') > 0) {\n          this.set('assignMenuOpenClass', 'open');\n        }\n      },\n      assignRole: function assignRole(roleType) {\n        this.set('assignMenuOpenClass', '');\n        this.sendAction('assignRole', this.get('profile'), roleType);\n      },\n      assignDroppedRole: function assignDroppedRole(role) {\n        role.set('isDraggingObject', false);\n        if (role.profile !== this.get('profile')) {\n          if (role.profile) {\n            this.sendAction('removeRole', role.profile, role.roleType);\n          }\n          this.sendAction('assignRole', this.get('profile'), role.roleType);\n        }\n      },\n      removeRole: function removeRole(roleType) {\n        this.sendAction('removeRole', this.get('profile'), roleType);\n      }\n    },\n    didInsertElement: function didInsertElement() {\n      var self = this;\n      $('body').on('click', function () {\n        try {\n          self.hideAssignMenu();\n        } catch (error) {}\n      });\n    }\n  });\n\n});","define('fusor-ember-cli/components/object-bin', ['exports', 'ember', 'fusor-ember-cli/helpers/log'], function (exports, Ember, log) {\n\n  'use strict';\n\n  var YieldLocalMixin = Ember['default'].Mixin.create({\n    _yield: function _yield(context, options) {\n      var view = options.data.view;\n      var parentView = this._parentView;\n      var template = Ember['default'].get(this, 'template');\n\n      if (template) {\n        Ember['default'].assert('A Component must have a parent view in order to yield.', parentView);\n\n        view.appendChild(Ember['default'].View, {\n          isVirtual: true,\n          tagName: '',\n          _contextView: parentView,\n          template: template,\n          context: Ember['default'].get(view, 'context'),\n          controller: Ember['default'].get(view, 'controller'),\n          templateData: { keywords: {} }\n        });\n      }\n    }\n  });\n\n  var removeOne = function removeOne(arr, obj) {\n    var l = arr.get('length');\n    arr.removeObject(obj);\n    var l2 = arr.get('length');\n\n    if (l - 1 !== l2) {\n      throw 'bad length ' + l + ' ' + l2;\n    }\n  };\n\n  exports['default'] = Ember['default'].Component.extend(YieldLocalMixin, {\n    model: [],\n    classNames: ['draggable-object-bin'],\n\n    manageList: true,\n\n    handleObjectMoved: (function () {\n      log['default']('bin objectMoved');\n    }).on('objectMoved'),\n\n    actions: {\n      handleObjectDropped: function handleObjectDropped(obj) {\n        log['default']('bin handleObjectDropped');\n        log['default']('manageList ' + this.get('manageList'));\n\n        if (this.get('manageList')) {\n          log['default']('pushing object');\n          this.get('model').pushObject(obj);\n        }\n\n        this.trigger('objectDroppedInternal', obj);\n        this.sendAction('objectDropped', { obj: obj, bin: this });\n      },\n\n      handleObjectDragged: function handleObjectDragged(obj) {\n        log['default']('bin handleObjectDragged');\n        if (this.get('manageList')) {\n          removeOne(this.get('model'), obj);\n        }\n        this.trigger('objectDraggedInternal', obj);\n        this.sendAction('objectDragged');\n      }\n    }\n  });\n\n});","define('fusor-ember-cli/components/radio-button-f', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Component.extend({});\n\n});","define('fusor-ember-cli/components/radio-button', ['exports', 'ember-radio-button/components/radio-button'], function (exports, RadioButton) {\n\n\t'use strict';\n\n\texports['default'] = RadioButton['default'];\n\n});","define('fusor-ember-cli/components/rchi-item', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    classNames: ['rhci-item'],\n    classNameBindings: ['isChecked:rhci-item-selected'],\n\n    click: function click() {\n      if (!this.get('isDisabled')) {\n        this.set('isChecked', this.toggleProperty('isChecked'));\n      }\n    },\n\n    showMsgToSelect: (function () {\n      return this.get('isHover') && !this.get('isChecked');\n    }).property('isHover', 'isChecked'),\n\n    showMsgToDeselect: (function () {\n      return this.get('isHover') && this.get('isChecked');\n    }).property('isHover', 'isChecked'),\n\n    mouseEnter: function mouseEnter() {\n      this.set('isHover', true);\n    },\n\n    mouseLeave: function mouseLeave() {\n      this.set('isHover', false);\n    } });\n\n});","define('fusor-ember-cli/components/review-link', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n\n    // all these values can be overwritten\n    isRequired: false,\n    isDefault: false,\n    useYieldInstead: false,\n    isPassword: false,\n    validationMessage: 'required field',\n    defaultMessage: 'default',\n\n    showValidationMessage: (function () {\n      return this.get('isRequired') && Ember['default'].isBlank(this.get('value'));\n    }).property('isRequired', 'value'),\n\n    showDefaultMessage: (function () {\n      return this.get('isDefault') && Ember['default'].isBlank(this.get('value'));\n    }).property('isDefault', 'value'),\n\n    valueFormatted: (function () {\n      if (this.get('isPassword') && Ember['default'].isPresent(this.get('value'))) {\n        return '********';\n      } else {\n        return this.get('value');\n      }\n    }).property('isPassword', 'value')\n\n  });\n\n});","define('fusor-ember-cli/components/rhci-hover-text', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    classNames: ['rhci-footer-hover'] });\n\n});","define('fusor-ember-cli/components/rhci-start', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Component.extend({});\n\n});","define('fusor-ember-cli/components/rhci-wizard', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Component.extend({});\n\n});","define('fusor-ember-cli/components/select-f', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Component.extend({});\n\n});","define('fusor-ember-cli/components/select-simple-f', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Component.extend({});\n\n});","define('fusor-ember-cli/components/step-number', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    tagName: 'span',\n    classNames: ['badge'],\n    classNameBindings: ['badgeInverse'],\n    badgeInverse: false\n  });\n\n});","define('fusor-ember-cli/components/subnet-drop-area', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    classNames: ['subnet-drop-zone', 'panel', 'panel-default']\n\n  });\n\n});","define('fusor-ember-cli/components/text-f', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n\n    typeInput: (function () {\n      return this.get('type') ? this.get('type') : 'text';\n    }).property('type'),\n\n    actions: {\n      showErrors: function showErrors() {\n        this.set('showError', true);\n      }\n    }\n\n  });\n\n});","define('fusor-ember-cli/components/textarea-f', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n\n    rowsPassed: (function () {\n      if (this.get('rows')) {\n        if (this.get('rows') > 0) {\n          return true;\n        }\n      }\n    }).property('rows'),\n\n    numRows: (function () {\n      return this.getWithDefault('rows', '');\n    }).property(),\n\n    numCols: (function () {\n      return this.getWithDefault('cols', '');\n    }).property() });\n\n});","define('fusor-ember-cli/components/tr-engine', ['exports', 'ember', 'fusor-ember-cli/mixins/save-hostname-mixin'], function (exports, Ember, SaveHostnameMixin) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend(SaveHostnameMixin['default'], {\n    tagName: 'tr',\n\n    actions: {\n      engineHostChanged: function engineHostChanged(host) {\n        var self = this.get('targetObject');\n        var controller = self.get('controllers.deployment');\n        return self.store.find('discovered-host', host.get('id')).then(function (result) {\n          return controller.set('discovered_host', result);\n        });\n      } }\n\n  });\n\n});","define('fusor-ember-cli/components/tr-hypervisor', ['exports', 'ember', 'fusor-ember-cli/mixins/save-hostname-mixin'], function (exports, Ember, SaveHostnameMixin) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend(SaveHostnameMixin['default'], {\n    tagName: 'tr' });\n\n});","define('fusor-ember-cli/components/tr-management-app', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n\n    tagName: 'tr',\n\n    isChecked: (function () {\n      return this.get('model.consumerUUID') === this.get('managementApp.uuid');\n    }).property('model.consumerUUID', 'managementApp.uuid'),\n\n    actions: {\n      changeManagementApp: function changeManagementApp(event) {\n        this.sendAction('action', this.get('managementApp'));\n      }\n    }\n\n  });\n\n});","define('fusor-ember-cli/components/tr-organization', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n\n    tagName: 'tr',\n\n    isChecked: (function () {\n      return this.get('selectedOrganization') == this.get('org');\n    }).property('selectedOrganization', 'org'),\n\n    actions: {\n      organizationChanged: function organizationChanged(event) {\n        this.sendAction('action', this.get('org'));\n      }\n    }\n\n  });\n\n});","define('fusor-ember-cli/components/tr-subscription', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n\n    tagName: 'tr',\n\n    classNameBindings: ['bgColor'],\n\n    systemType: (function () {\n      if (this.get('subscription.type') === 'NORMAL') {\n        return 'Physical';\n      } else {\n        return this.get('subscription.type');\n      }\n    }).property('subscription.type'),\n\n    isChecked: (function () {\n      return this.get('subscription.isSelectedSubscription');\n    }).property('subscription.isSelectedSubscription'),\n\n    bgColor: (function () {\n      if (this.get('isChecked')) {\n        return 'white-on-blue';\n      }\n    }).property('isChecked'),\n\n    envCssId: (function () {\n      return 'env_' + this.get('env.id');\n    }).property('env') });\n\n});","define('fusor-ember-cli/components/tr-task', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n\n    tagName: 'tr' });\n\n});","define('fusor-ember-cli/components/traffic-type', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    classNames: ['subnet-type-pull', 'existing ui-draggable']\n  });\n\n});","define('fusor-ember-cli/components/upstream-downstream', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    classNames: ['pull-left', 'toggle_updown'],\n\n    actions: {\n\n      showUpstream: function showUpstream() {\n        this.set('isUpstream', true);\n      },\n\n      showDownstream: function showDownstream() {\n        this.set('isUpstream', false);\n      } }\n  });\n\n});","define('fusor-ember-cli/components/vertical-tab', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    tagName: 'li'\n  });\n\n});","define('fusor-ember-cli/components/wizard-item', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    tagName: 'li',\n\n    classNameBindings: ['active', 'completed'],\n\n    active: (function () {\n      return this.get('childViews').isAny('active');\n    }).property('childViews.@each.active'),\n\n    completed: (function () {\n      return this.get('num') < this.get('currentStepNumber');\n    }).property('num', 'currentStepNumber') });\n\n  // isReviewTab: function() {\n  //   return (this.get('routeName') == 'review')\n  // }.property('routeName')\n\n});","define('fusor-ember-cli/controllers/application', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    needs: ['side-menu', 'deployment'],\n\n    deployAsPlugin: true,\n    isEmberCliMode: Ember['default'].computed.not('deployAsPlugin'),\n    isUpstream: false,\n\n    isContainer: Ember['default'].computed.alias('isUpstream'),\n\n    showMainMenu: Ember['default'].computed.and('isLoggedIn', 'isEmberCliMode'),\n    showSideMenu: Ember['default'].computed.alias('controllers.side-menu.showSideMenu'),\n\n    isLoggedIn: true, //Ember.computed.alias(\"session.isAuthenticated\"),\n\n    loginUsername: Ember['default'].computed.alias('session.currentUser.login'),\n\n    nameRHCI: Ember['default'].computed.alias('controllers.deployment.nameRHCI'),\n    nameRhev: Ember['default'].computed.alias('controllers.deployment.nameRhev'),\n    nameOpenStack: Ember['default'].computed.alias('controllers.deployment.nameOpenStack'),\n    nameCloudForms: Ember['default'].computed.alias('controllers.deployment.nameCloudForms'),\n    nameSatellite: Ember['default'].computed.alias('controllers.deployment.nameSatellite'),\n    logoPath: Ember['default'].computed.alias('controllers.deployment.logoPath'),\n\n    actions: {\n      invalidate: function invalidate(data) {\n        return this.transitionTo('login');\n      },\n\n      signOut: function signOut() {\n        return this.transitionTo('login');\n      } }\n  });\n\n});","define('fusor-ember-cli/controllers/assign-nodes', ['exports', 'ember', 'fusor-ember-cli/mixins/deployment-controller-mixin'], function (exports, Ember, DeploymentControllerMixin) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend(DeploymentControllerMixin['default'], {\n\n    needs: ['deployment', 'register-nodes'],\n    register: Ember['default'].computed.alias('controllers.register-nodes'),\n\n    availableRoles: (function () {\n      var roles = [];\n      if (!this.get('controllerAssigned')) {\n        roles.pushObject(Ember['default'].Object.create({\n          roleType: 'controller',\n          roleLabel: 'Controller'\n        }));\n      }\n      if (!this.get('computeAssigned')) {\n        roles.pushObject(Ember['default'].Object.create({\n          roleType: 'compute',\n          roleLabel: 'Compute'\n        }));\n      }\n      if (!this.get('blockAssigned')) {\n        roles.pushObject(Ember['default'].Object.create({\n          roleType: 'block',\n          roleLabel: 'Block Storage'\n        }));\n      }\n      if (!this.get('objectAssigned')) {\n        roles.pushObject(Ember['default'].Object.create({\n          roleType: 'object',\n          roleLabel: 'Object Storage'\n        }));\n      }\n      return roles;\n    }).property('controllerAssigned', 'computeAssigned', 'blockAssigned', 'objectAssigned'),\n\n    isDraggingRole: false,\n\n    droppableClass: (function () {\n      if (this.isDraggingRole) {\n        return 'deployment-roles-active';\n      } else {\n        return '';\n      }\n    }).property('isDraggingRole'),\n\n    controllerAssigned: (function () {\n      var profiles = this.get('nodeProfiles');\n      if (!profiles) {\n        return false;\n      }\n      var retVal = false;\n      profiles.forEach(function (item, index) {\n        if (item.get('isControl')) {\n          retVal = true;\n        }\n      });\n      return retVal;\n    }).property('nodeProfiles', 'nodeProfiles.@each.isControl'),\n\n    computeAssigned: (function () {\n      var profiles = this.get('nodeProfiles');\n      if (!profiles) {\n        return false;\n      }\n      var retVal = false;\n      profiles.forEach(function (item, index) {\n        if (item.get('isCompute')) {\n          retVal = true;\n        }\n      });\n      return retVal;\n    }).property('nodeProfiles.@each.isCompute'),\n\n    blockAssigned: (function () {\n      var profiles = this.get('nodeProfiles');\n      if (!profiles) {\n        return false;\n      }\n      var retVal = false;\n      profiles.forEach(function (item, index) {\n        if (item.get('isBlockStorage')) {\n          retVal = true;\n        }\n      });\n      return retVal;\n    }).property('nodeProfiles.@each.isBlockStorage'),\n\n    objectAssigned: (function () {\n      var profiles = this.get('nodeProfiles');\n      if (!profiles) {\n        return false;\n      }\n      var retVal = false;\n      profiles.forEach(function (item, index) {\n        if (item.get('isObjectStorage')) {\n          retVal = true;\n        }\n      });\n      return retVal;\n    }).property('nodeProfiles.@each.isObjectStorage'),\n\n    allAssigned: (function () {\n      return this.get('controllerAssigned') && this.get('computeAssigned') && this.get('blockAssigned') && this.get('objectAssigned');\n    }).property('controllerAssigned', 'computeAssigned', 'blockAssigned', 'objectAssigned'),\n\n    noneAssigned: (function () {\n      return !this.get('controllerAssigned') && !this.get('computeAssigned') && !this.get('blockAssigned') && !this.get('objectAssigned');\n    }).property('controllerAssigned', 'computeAssigned', 'blockAssigned', 'objectAssigned'),\n\n    nodeProfiles: (function () {\n      return this.get('register').get('model.nodeProfiles');\n    }).property('register.model.nodeProfiles', 'register.model.nodeProfiles.length'),\n\n    numProfiles: (function () {\n      var profiles = this.get('register.model.nodeProfiles');\n      return profiles.length;\n    }).property('model.nodeProfiles', 'model.nodeProfiles.length'),\n\n    removeRoleFromProfile: function removeRoleFromProfile(profile, roleType) {\n      if (roleType === 'controller') {\n        profile.set('controllerNodes', 0);\n      } else if (roleType === 'compute') {\n        profile.set('computeNodes', 0);\n      } else if (roleType === 'block') {\n        profile.set('blockNodes', 0);\n      } else if (roleType === 'object') {\n        profile.set('objectNodes', 0);\n      }\n    },\n\n    actions: {\n      editRole: function editRole(roleType) {},\n\n      assignRole: function assignRole(profile, roleType) {\n        if (roleType === 'controller') {\n          profile.set('controllerNodes', 1);\n        } else if (roleType === 'compute') {\n          profile.set('computeNodes', 1);\n        } else if (roleType === 'block') {\n          profile.set('blockNodes', 1);\n        } else if (roleType === 'object') {\n          profile.set('objectNodes', 1);\n        }\n      },\n\n      removeRole: function removeRole(profile, roleType) {\n        this.removeRoleFromProfile(profile, roleType);\n      },\n\n      unassignRole: function unassignRole(role) {\n        role.set('isDraggingObject', false);\n        this.removeRoleFromProfile(role.profile, role.roleType);\n      },\n\n      startDrag: function startDrag() {\n        this.set('isDraggingRole', true);\n      },\n\n      stopDrag: function stopDrag() {\n        this.set('isDraggingRole', false);\n      }\n    },\n\n    disableAssignNodesNext: (function () {\n      var freeNodeCount = 0;\n      var profiles = this.get('nodeProfiles');\n      if (profiles) {\n        for (var i = 0; i < profiles.length; i++) {\n          freeNodeCount += profiles[i].freeNodes;\n        }\n      }\n      return freeNodeCount < 4;\n    }).property('nodeProfiles'),\n\n    nextStepRouteName: (function () {\n      return '';\n    }).property('step2RoutName', 'step3RouteName')\n  });\n\n});","define('fusor-ember-cli/controllers/cloudforms-storage-domain', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    nfsShare: '/export/export_domain'\n  });\n\n});","define('fusor-ember-cli/controllers/cloudforms-vm', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller.extend({});\n\n});","define('fusor-ember-cli/controllers/cloudforms', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    needs: ['deployment'],\n    stepNumberCloudForms: Ember['default'].computed.alias('controllers.deployment.stepNumberCloudForms') });\n\n});","define('fusor-ember-cli/controllers/cloudforms/cfme-configuration', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n\n    needs: ['deployment'],\n\n    cfme_root_password: Ember['default'].computed.alias('controllers.deployment.cfme_root_password'),\n    isSubscriptions: Ember['default'].computed.alias('controllers.deployment.isSubscriptions'),\n\n    nextRouteNameAfterCFME: (function () {\n      if (this.get('isSubscriptions')) {\n        return 'subscriptions';\n      } else {\n        return 'review';\n      }\n    }).property('isSubscriptions')\n  });\n\n});","define('fusor-ember-cli/controllers/configure-environment', ['exports', 'ember', 'fusor-ember-cli/mixins/configure-environment-mixin'], function (exports, Ember, ConfigureEnvironmentMixin) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend(ConfigureEnvironmentMixin['default'], {\n\n    needs: ['deployment'],\n\n    satelliteTabRouteName: Ember['default'].computed.alias('controllers.deployment.satelliteTabRouteName'),\n    organizationTabRouteName: Ember['default'].computed.alias('controllers.deployment.organizationTabRouteName'),\n\n    selectedOrganization: Ember['default'].computed.alias('controllers.deployment.organization'),\n\n    step2RouteName: Ember['default'].computed.alias('controllers.deployment.step2RouteName'),\n\n    nullifyLifecycleEnvIfSelected: (function () {\n      if (this.get('useDefaultOrgViewForEnv')) {\n        this.set('selectedEnvironment', null);\n        return this.get('controllers.deployment').set('lifecycle_environment', null);\n      }\n    }).observes('useDefaultOrgViewForEnv'),\n\n    hasLifecycleEnvironment: Ember['default'].computed.alias('controllers.deployment.hasLifecycleEnvironment'),\n    hasNoLifecycleEnvironment: Ember['default'].computed.alias('controllers.deployment.hasNoLifecycleEnvironment'),\n    disableNextOnLifecycleEnvironment: Ember['default'].computed.alias('controllers.deployment.disableNextOnLifecycleEnvironment'),\n\n    actions: {\n      selectEnvironment: function selectEnvironment(environment) {\n        this.set('showAlertMessage', false);\n        this.set('selectedEnvironment', environment);\n        return this.get('controllers.deployment').set('lifecycle_environment', environment);\n      },\n\n      createEnvironment: function createEnvironment() {\n        var self = this;\n        var selectedOrganization = this.get('selectedOrganization');\n        this.set('fields_env.name', this.get('name'));\n        this.set('fields_env.label', this.get('label'));\n        this.set('fields_env.description', this.get('description'));\n        this.set('fields_env.organization', selectedOrganization);\n\n        var library = this.get('libraryEnv');\n        // assign library to prior db attribute\n        this.set('fields_env.prior', library.get('id'));\n        var environment = this.store.createRecord('lifecycle-environment', this.get('fields_env'));\n        environment.save().then(function (result) {\n          //success\n          self.get('lifecycleEnvironments').addObject(result);\n          self.set('selectedEnvironment', environment);\n          self.get('controllers.deployment').set('lifecycle_environment', environment);\n          return self.set('showAlertMessage', true);\n        }, function (response) {\n          alert('error saving environment');\n        });\n      } }\n\n  });\n\n});","define('fusor-ember-cli/controllers/configure-organization', ['exports', 'ember', 'fusor-ember-cli/mixins/configure-organization-mixin'], function (exports, Ember, ConfigureOrganizationMixin) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend(ConfigureOrganizationMixin['default'], {\n\n    needs: ['deployment'],\n\n    organization: Ember['default'].computed.alias('controllers.deployment.organization'),\n\n    disableNextOnConfigureOrganization: Ember['default'].computed.alias('controllers.deployment.disableNextOnConfigureOrganization'),\n    satelliteTabRouteName: Ember['default'].computed.alias('controllers.deployment.satelliteTabRouteName'),\n    lifecycleEnvironmentTabRouteName: Ember['default'].computed.alias('controllers.deployment.lifecycleEnvironmentTabRouteName'),\n    deploymentName: Ember['default'].computed.alias('controllers.deployment.name'),\n\n    actions: {\n      selectOrganization: function selectOrganization(organization) {\n        this.set('showAlertMessage', false);\n        this.set('selectedOrganization', organization);\n        return this.get('controllers.deployment').set('organization', organization);\n      } } });\n\n});","define('fusor-ember-cli/controllers/deployment-new', ['exports', 'ember', 'fusor-ember-cli/mixins/deployment-controller-mixin', 'fusor-ember-cli/mixins/disable-tab-mixin'], function (exports, Ember, DeploymentControllerMixin, DisableTabMixin) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].ObjectController.extend(DeploymentControllerMixin['default'], DisableTabMixin['default'], {\n\n    // these tabs will always be disabled within deployment-new\n    isDisabledRhev: true,\n    isDisabledOpenstack: true,\n    isDisabledCloudForms: true,\n    isDisabledSubscriptions: true,\n    isDisabledReview: true,\n\n    hasLifecycleEnvironment: (function () {\n      return !!this.get(\"lifecycle_environment\").get(\"id\") || this.get(\"useDefaultOrgViewForEnv\"); // without .get('id') returns promise that is true\n    }).property(\"lifecycle_environment\", \"useDefaultOrgViewForEnv\"),\n    hasNoLifecycleEnvironment: Ember['default'].computed.not(\"hasLifecycleEnvironment\") });\n\n});","define('fusor-ember-cli/controllers/deployment-new/satellite', ['exports', 'ember', 'fusor-ember-cli/mixins/satellite-controller-mixin'], function (exports, Ember, SatelliteControllerMixin) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend(SatelliteControllerMixin['default'], {\n\n    needs: ['deployment-new'],\n\n    satelliteTabRouteName: Ember['default'].computed.alias('controllers.deployment-new.satelliteTabRouteName'),\n    organizationTabRouteName: Ember['default'].computed.alias('controllers.deployment-new.organizationTabRouteName'),\n    lifecycleEnvironmentTabRouteName: Ember['default'].computed.alias('controllers.deployment-new.lifecycleEnvironmentTabRouteName'),\n\n    disableTabDeploymentName: Ember['default'].computed.alias('controllers.deployment-new.disableTabDeploymentName'),\n    disableTabConfigureOrganization: Ember['default'].computed.alias('controllers.deployment-new.disableTabConfigureOrganization'),\n    disableTabLifecycleEnvironment: Ember['default'].computed.alias('controllers.deployment-new.disableTabLifecycleEnvironment'),\n\n    backRouteNameOnSatIndex: 'deployment-new.start' });\n\n});","define('fusor-ember-cli/controllers/deployment-new/satellite/configure-environment', ['exports', 'ember', 'fusor-ember-cli/mixins/configure-environment-mixin'], function (exports, Ember, ConfigureEnvironmentMixin) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend(ConfigureEnvironmentMixin['default'], {\n\n    needs: ['deployment-new'],\n\n    organizationTabRouteName: Ember['default'].computed.alias('controllers.deployment-new.organizationTabRouteName'),\n\n    selectedOrganization: Ember['default'].computed.alias('controllers.deployment-new.organization'),\n\n    step2RouteName: Ember['default'].computed.alias('controllers.deployment-new.step2RouteName'),\n\n    nullifyLifecycleEnvIfSelected: (function () {\n      if (this.get('useDefaultOrgViewForEnv')) {\n        this.set('selectedEnvironment', null);\n        return this.get('controllers.deployment-new').set('lifecycle_environment', null);\n      }\n    }).observes('useDefaultOrgViewForEnv'),\n\n    hasLifecycleEnvironment: Ember['default'].computed.alias('controllers.deployment-new.hasLifecycleEnvironment'),\n    hasNoLifecycleEnvironment: Ember['default'].computed.alias('controllers.deployment-new.hasNoLifecycleEnvironment'),\n    disableNextOnLifecycleEnvironment: Ember['default'].computed.alias('controllers.deployment-new.disableNextOnLifecycleEnvironment'),\n\n    actions: {\n      selectEnvironment: function selectEnvironment(environment) {\n        this.set('showAlertMessage', false);\n        this.set('selectedEnvironment', environment);\n        return this.get('controllers.deployment-new').set('lifecycle_environment', environment);\n      },\n\n      createEnvironment: function createEnvironment() {\n        var self = this;\n        var selectedOrganization = this.get('selectedOrganization');\n        this.set('fields_env.name', this.get('name'));\n        this.set('fields_env.label', this.get('label'));\n        this.set('fields_env.description', this.get('description'));\n        this.set('fields_env.organization', selectedOrganization);\n\n        var library = this.get('libraryEnv');\n        // assign library to prior db attribute\n        this.set('fields_env.prior', library.get('id'));\n        var environment = this.store.createRecord('lifecycle-environment', this.get('fields_env'));\n        environment.save().then(function (result) {\n          //success\n          self.get('lifecycleEnvironments').addObject(result);\n          self.set('selectedEnvironment', environment);\n          self.get('controllers.deployment-new').set('lifecycle_environment', environment);\n          return self.set('showAlertMessage', true);\n        }, function (response) {\n          alert('error saving environment');\n        });\n      } }\n\n  });\n\n});","define('fusor-ember-cli/controllers/deployment-new/satellite/configure-organization', ['exports', 'ember', 'fusor-ember-cli/mixins/configure-organization-mixin'], function (exports, Ember, ConfigureOrganizationMixin) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend(ConfigureOrganizationMixin['default'], {\n\n    needs: ['deployment-new'],\n\n    organization: Ember['default'].computed.alias('controllers.deployment-new.organization'),\n\n    disableNextOnConfigureOrganization: Ember['default'].computed.alias('controllers.deployment-new.disableNextOnConfigureOrganization'),\n    satelliteTabRouteName: Ember['default'].computed.alias('controllers.deployment-new.satelliteTabRouteName'),\n    lifecycleEnvironmentTabRouteName: Ember['default'].computed.alias('controllers.deployment-new.lifecycleEnvironmentTabRouteName'),\n    deploymentName: Ember['default'].computed.alias('controllers.deployment-new.name'),\n\n    actions: {\n      selectOrganization: function selectOrganization(organization) {\n        this.set('showAlertMessage', false);\n        this.set('selectedOrganization', organization);\n        return this.get('controllers.deployment-new').set('organization', organization);\n      }\n    } });\n\n});","define('fusor-ember-cli/controllers/deployment-new/satellite/index', ['exports', 'ember', 'fusor-ember-cli/mixins/satellite-controller-mixin'], function (exports, Ember, SatelliteControllerMixin) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend(SatelliteControllerMixin['default'], {\n\n    needs: ['deployment-new', 'deployment-new/satellite'],\n\n    validations: {\n      name: {\n        presence: true } },\n\n    name: Ember['default'].computed.alias('controllers.deployment-new.name'),\n    description: Ember['default'].computed.alias('controllers.deployment-new.description'),\n\n    organizationTabRouteName: Ember['default'].computed.alias('controllers.deployment-new/satellite.organizationTabRouteName'),\n\n    disableNextOnDeploymentName: Ember['default'].computed.alias('controllers.deployment-new.disableNextOnDeploymentName'),\n\n    idSatName: 'deployment_new_sat_name',\n    idSatDesc: 'deployment_new_sat_desc',\n\n    backRouteNameOnSatIndex: 'deployment-new.start' });\n\n});","define('fusor-ember-cli/controllers/deployment-new/start', ['exports', 'ember', 'fusor-ember-cli/mixins/start-controller-mixin'], function (exports, Ember, StartControllerMixin) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].ObjectController.extend(StartControllerMixin['default'], {\n\n    needs: ['deployment-new'],\n\n    isRhev: Ember['default'].computed.alias('controllers.deployment-new.deploy_rhev'),\n    isOpenStack: Ember['default'].computed.alias('controllers.deployment-new.deploy_openstack'),\n    isCloudForms: Ember['default'].computed.alias('controllers.deployment-new.deploy_cfme'),\n    isSubscriptions: Ember['default'].computed.alias('controllers.deployment-new.isSubscriptions') });\n\n});","define('fusor-ember-cli/controllers/deployment', ['exports', 'ember', 'fusor-ember-cli/mixins/deployment-controller-mixin', 'fusor-ember-cli/mixins/disable-tab-mixin'], function (exports, Ember, DeploymentControllerMixin, DisableTabMixin) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].ObjectController.extend(DeploymentControllerMixin['default'], DisableTabMixin['default'], {\n\n    // disable Steps 2, 3, 4, etc on wizard\n    isDisabledRhev: Ember['default'].computed.alias(\"satelliteInvalid\"),\n    isDisabledOpenstack: Ember['default'].computed.alias(\"satelliteInvalid\"),\n    isDisabledCloudForms: Ember['default'].computed.alias(\"satelliteInvalid\"),\n    isDisabledSubscriptions: Ember['default'].computed.alias(\"satelliteInvalid\"),\n    isDisabledReview: Ember['default'].computed.alias(\"satelliteInvalid\"),\n\n    hasLifecycleEnvironment: (function () {\n      return !!this.get(\"lifecycle_environment\").get(\"id\") || this.get(\"useDefaultOrgViewForEnv\"); // without .get('id') returns promise that is true\n    }).property(\"lifecycle_environment\", \"useDefaultOrgViewForEnv\"),\n    hasNoLifecycleEnvironment: Ember['default'].computed.not(\"hasLifecycleEnvironment\"),\n\n    validations: {\n      name: {\n        presence: true,\n        length: { minimum: 2 }\n      } },\n\n    selectedRhevEngine: null,\n\n    satelliteInvalid: Ember['default'].computed.or(\"hasNoName\", \"hasNoOrganization\", \"hasNoLifecycleEnvironment\"),\n\n    skipContent: false,\n\n    isStarted: (function () {\n      return !!this.get(\"model.foreman_task_uuid\");\n    }).property(\"model.foreman_task_uuid\") });\n\n});","define('fusor-ember-cli/controllers/deployment/start', ['exports', 'ember', 'fusor-ember-cli/mixins/start-controller-mixin'], function (exports, Ember, StartControllerMixin) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].ObjectController.extend(StartControllerMixin['default'], {\n\n    needs: ['deployment'],\n\n    isRhev: Ember['default'].computed.alias('controllers.deployment.deploy_rhev'),\n    isOpenStack: Ember['default'].computed.alias('controllers.deployment.deploy_openstack'),\n    isCloudForms: Ember['default'].computed.alias('controllers.deployment.deploy_cfme'),\n    isSubscriptions: Ember['default'].computed.alias('controllers.deployment.isSubscriptions') });\n\n});","define('fusor-ember-cli/controllers/deployments', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].ArrayController.extend({\n\n    sortProperties: ['name'],\n    sortAscending: true,\n\n    sortedDeployments: Ember['default'].computed.sort('model', 'sortProperties'),\n\n    searchDeploymentString: '',\n\n    filteredDeployments: (function () {\n      var searchDeploymentString = this.get('searchDeploymentString');\n      var rx = new RegExp(searchDeploymentString, 'gi');\n      var model = this.get('sortedDeployments');\n\n      if (model.get('length') > 0) {\n        return model.filter(function (record) {\n          return record.get('name').match(rx);\n        });\n      } else {\n        return model;\n      }\n    }).property('sortedDeployments', 'searchDeploymentString') });\n\n});","define('fusor-ember-cli/controllers/discovered-host', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].ObjectController.extend({\n\n    needs: ['deployment', 'hypervisor/discovered-host', 'engine/discovered-host'],\n\n    cssHostHostId: (function () {\n      return 'host_' + this.get('id');\n    }).property('id'),\n\n    cssIdHostId: (function () {\n      return 'id_' + this.get('id');\n    }).property('id'),\n\n    allDiscoveredHosts: Ember['default'].computed.alias('controllers.hypervisor/discovered-host.allDiscoveredHosts'),\n    // same as controllers.deployment.discovered_hosts\n    selectedRhevHypervisorHosts: Ember['default'].computed.alias('controllers.hypervisor/discovered-host.model'),\n    // same as controllers.deployment.discovered_host\n    selectedRhevEngineHost: Ember['default'].computed.alias('controllers.engine/discovered-host.model'),\n\n    isAllChecked: Ember['default'].computed.alias('controllers.hypervisor/discovered-host.isAllChecked'),\n    allChecked: Ember['default'].computed.alias('controllers.hypervisor/discovered-host.allChecked'),\n\n    addOrRemoveHypervisor: (function (row) {\n      if (row.get('isSelectedAsHypervisor')) {\n        this.get('controllers.hypervisor/discovered-host.model').addObject(row.get('model'));\n      } else {\n        this.get('controllers.hypervisor/discovered-host.model').removeObject(row.get('model'));\n      }\n    }).observes('isSelectedAsHypervisor'),\n\n    isSelectedAsHypervisor: (function () {\n      if (this.get('selectedRhevHypervisorHosts')) {\n        var selectedIds = this.get('selectedRhevHypervisorHosts').getEach('id');\n        return selectedIds.contains(this.get('id'));\n      } else {\n        return false;\n      }\n    }).property('selectedRhevHypervisorHosts.[]'),\n\n    isSelectedAsEngine: (function () {\n      return this.get('selectedRhevEngineHost.id') === this.get('id');\n    }).property('selectedRhevEngineHost'),\n\n    hostType: (function () {\n      if (this.get('is_virtual')) {\n        return 'Virtual';\n      } else {\n        return 'Bare Metal';\n      }\n    }).property('is_virtual'),\n\n    actions: {\n      engineHostChanged: function engineHostChanged(host) {\n        var engine_hostname = host.get('name');\n        var controller = this.get('controllers.deployment');\n        return this.store.find('discovered-host', host.get('id')).then(function (result) {\n          return controller.set('discovered_host', result);\n          //TODO save hostname on discovered host on save deploy\n        });\n      }\n    }\n\n  });\n\n});","define('fusor-ember-cli/controllers/engine', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    needs: ['rhev'],\n    engineTabName: Ember['default'].computed.alias('controllers.rhev.engineTabName'),\n    engineTabNameLowercase: (function () {\n      return this.get('engineTabName').toLowerCase();\n    }).property('engineTabName')\n  });\n\n});","define('fusor-ember-cli/controllers/engine/discovered-host', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n\n    needs: ['deployment', 'hypervisor/discovered-host'],\n\n    selectedRhevEngineHost: Ember['default'].computed.alias('model'),\n    hypervisorModelIds: Ember['default'].computed.alias('controllers.hypervisor/discovered-host.hypervisorModelIds'),\n    rhev_is_self_hosted: Ember['default'].computed.alias('controllers.deployment.rhev_is_self_hosted'),\n\n    // Set by route's setupController. Needed since hypervisorModelIds is\n    // only available after route hypervisor/discovered hosts is activated\n    selectedHypervisors: [],\n    allDiscoveredHosts: [],\n\n    engineNextRouteName: (function () {\n      if (this.get('rhev_is_self_hosted')) {\n        return 'rhev-options';\n      } else {\n        return 'hypervisor.discovered-host';\n      }\n    }).property('rhev_is_self_hosted'),\n\n    // Filter out hosts selected as Hypervisor\n    availableHosts: Ember['default'].computed.filter('allDiscoveredHosts', function (item, index, array) {\n      var hypervisorsIds = this.get('selectedHypervisors').getEach('id');\n      console.log(hypervisorsIds);\n      return !hypervisorsIds.contains(item.get('id'));\n    }).property('selectedHypervisors', 'allDiscoveredHosts') });\n\n});","define('fusor-ember-cli/controllers/host', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].ObjectController.extend({});\n\n});","define('fusor-ember-cli/controllers/hostgroup', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].ObjectController.extend({});\n\n});","define('fusor-ember-cli/controllers/hypervisor', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    needs: ['rhev'] });\n\n});","define('fusor-ember-cli/controllers/hypervisor/discovered-host', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].ArrayController.extend({\n    needs: ['deployment'],\n\n    itemController: ['discovered-host'],\n\n    selectedRhevEngine: Ember['default'].computed.alias('controllers.deployment.discovered_host'),\n    rhev_is_self_hosted: Ember['default'].computed.alias('controllers.deployment.rhev_is_self_hosted'),\n\n    // Filter out hosts selected as Hypervisor\n    availableHosts: Ember['default'].computed.filter('allDiscoveredHosts', function (host, index, array) {\n      return host.get('id') != this.get('selectedRhevEngine.id');\n    }).property('allDiscoveredHosts', 'selectedRhevEngine'),\n\n    hypervisorModelIds: (function () {\n      if (this.get('model')) {\n        var allIds = this.get('model').getEach('id');\n        return allIds.removeObject(this.get('selectedRhevEngine').get('id'));\n      } else {\n        return [];\n      }\n    }).property('model.[]', 'selectedRhevEngine'),\n\n    cntSelectedHypervisorHosts: Ember['default'].computed.alias('hypervisorModelIds.length'),\n\n    hostInflection: (function () {\n      return this.get('cntSelectedHypervisorHosts') === 1 ? 'host' : 'hosts';\n    }).property('cntSelectedHypervisorHosts'),\n\n    isAllChecked: (function (key, value) {\n      if (this.get('cntSelectedHypervisorHosts') === this.get('availableHosts.length')) {\n        return this.set('allChecked', true);\n      } else {\n        return this.set('allChecked', false);\n      }\n    }).property('availableHosts.@each.isSelectedAsHypervisor', 'cntSelectedHypervisorHosts'),\n\n    allChecked: (function (key, value) {\n      // get\n      if (arguments.length === 1) {\n        var availableHosts = this.get('availableHosts');\n        var isAllChecked = this.get('model.length') === this.get('availableHosts.length');\n        return availableHosts && isAllChecked;\n        // setter\n      } else {}\n    }).property('model.@each.isSelectedAsHypervisor', 'model.[]', 'availableHosts'),\n\n    checkAll: (function (row) {\n      // TODO\n      if (this.get('allChecked')) {\n        // var hosts = this.get('model');\n        // hosts.clear();\n        // hosts.addObjects(this.get('availableHosts'));\n        // return true;\n        console.log('all checked true');\n      } else {\n        // var hosts = this.get('model');\n        // return hosts.clear();\n        // return false;\n        console.log('all checked FALSE');\n      }\n    }).observes('allChecked'),\n\n    idsChecked: (function (key) {\n      var model = this.get('model');\n      if (model && model.isAny('isSelectedAsHypervisor')) {\n        return this.get('model').getEach('id');\n      } else {\n        return '';\n      }\n    }).property('model.@each.isSelectedAsHypervisor'),\n\n    hypervisorBackRouteName: (function () {\n      if (this.get('rhev_is_self_hosted')) {\n        return 'rhev-setup';\n      } else {\n        return 'engine.discovered-host';\n      }\n    }).property('rhev_is_self_hosted') });\n\n  // TODO - this is running when each host is individually checked as well????\n  // Problem because isSelectedAsHypervisor is on the itemController and not model ???\n  // console.log('setter only');\n\n});","define('fusor-ember-cli/controllers/lifecycle-environment', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].ObjectController.extend({});\n\n});","define('fusor-ember-cli/controllers/lifecycle-environments', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].ArrayController.extend({});\n\n});","define('fusor-ember-cli/controllers/login', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].ObjectController.extend({\n    needs: ['application'],\n\n    identification: null,\n    password: null,\n    errorMessage: null });\n\n});","define('fusor-ember-cli/controllers/logout-model', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    actions: {\n      logout: function logout() {\n        alert('logout');\n      }\n    }\n  });\n\n});","define('fusor-ember-cli/controllers/networking', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    dnsName: null\n  });\n\n});","define('fusor-ember-cli/controllers/new-environment', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller.extend({});\n\n});","define('fusor-ember-cli/controllers/new-organization', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller.extend({});\n\n});","define('fusor-ember-cli/controllers/openstack', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    needs: ['deployment'],\n    stepNumberOpenstack: Ember['default'].computed.alias('controllers.deployment.stepNumberOpenstack') });\n\n});","define('fusor-ember-cli/controllers/organization', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].ObjectController.extend({});\n\n});","define('fusor-ember-cli/controllers/organizations', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].ArrayController.extend({});\n\n});","define('fusor-ember-cli/controllers/products', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].ArrayController.extend({\n\n    syncingInProgress: false,\n    showSuccessMessage: false,\n    disableSyncButton: false,\n\n    prog: 20,\n    incrementBy: 20,\n\n    actions: {\n      syncProducts: function syncProducts() {\n        this.set('syncingInProgress', true);\n        this.set('disableSyncButton', true);\n        this.send('incrementProgressBar');\n      },\n\n      incrementProgressBar: function incrementProgressBar() {\n        var self = this;\n        Ember['default'].run.later(function () {\n          return self.incrementProperty('prog', self.incrementBy);\n        }, 1000);\n        Ember['default'].run.later(function () {\n          return self.incrementProperty('prog', self.incrementBy);\n        }, 2000);\n        Ember['default'].run.later(function () {\n          return self.incrementProperty('prog', self.incrementBy);\n        }, 3000);\n        Ember['default'].run.later(function () {\n          return self.incrementProperty('prog', self.incrementBy);\n        }, 4000);\n        Ember['default'].run.later(function () {\n          self.set('syncingInProgress', false);\n          self.set('showSuccessMessage', true);\n        }, 4500);\n      }\n\n    } });\n\n});","define('fusor-ember-cli/controllers/register-nodes', ['exports', 'ember', 'fusor-ember-cli/mixins/deployment-controller-mixin'], function (exports, Ember, DeploymentControllerMixin) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend(DeploymentControllerMixin['default'], {\n\n    needs: ['deployment'],\n\n    init: function init() {\n      this.Profile = Ember['default'].Object.extend({\n        name: null,\n        driver: null,\n        ipAddress: null,\n        ipmiUsername: '',\n        ipmiPassword: '',\n        nicMacAddress: '',\n        architecture: null,\n        cpu: null,\n        ram: null,\n        disk: null,\n        totalNodes: 0,\n\n        controllerNodes: 0,\n        computeNodes: 0,\n        blockNodes: 0,\n        objectNodes: 0,\n\n        freeNodes: (function () {\n          return this.get('totalNodes') - this.get('controllerNodes') - this.get('computeNodes') - this.get('blockNodes') - this.get('objectNodes');\n        }).property('totalNodes', 'controllerNodes', 'computeNodes', 'blockNodes', 'objectNodes'),\n\n        isControl: (function () {\n          return this.get('controllerNodes') > 0;\n        }).property('controllerNodes'),\n\n        isCompute: (function () {\n          return this.get('computeNodes') > 0;\n        }).property('computeNodes'),\n\n        isBlockStorage: (function () {\n          return this.get('blockNodes') > 0;\n        }).property('blockNodes'),\n\n        isObjectStorage: (function () {\n          return this.get('objectNodes') > 0;\n        }).property('objectNodes'),\n\n        isActiveClass: 'inactive',\n        isError: false,\n        errorMessage: ''\n      });\n    },\n\n    newProfiles: [],\n    errorProfiles: [],\n    edittedProfiles: [],\n\n    drivers: ['IPMI Driver', 'PXE + SSH'],\n    architectures: ['amd64', 'x86', 'x86_64'],\n    selectedProfile: null,\n\n    registrationInProgress: false,\n    registerNodesModalOpened: false,\n    registerNodesModalClosed: true,\n    modalOpen: false,\n\n    registrationError: (function () {\n      return this.get('errorProfiles').length > 0;\n    }).property('errorProfiles', 'errorProfiles.length'),\n\n    registrationErrorMessage: (function () {\n      var count = this.get('errorProfiles').length;\n      if (count === 1) {\n        return '1 node not registered';\n      } else if (count > 1) {\n        return count + ' nodes not registered';\n      } else {\n        return '';\n      }\n    }).property('errorProfiles.length'),\n\n    registrationErrorTip: (function () {\n      var tip = '';\n      var errorProfiles = this.get('errorProfiles');\n\n      errorProfiles.forEach(function (item, index) {\n        if (index > 0) {\n          tip += '\\n';\n        }\n        tip += item.errorMessage;\n      });\n      return tip;\n    }).property('errorProfiles', 'errorProfiles.length'),\n\n    preRegistered: 0,\n    nodeRegComplete: (function () {\n      return this.get('model.nodeProfiles').length + this.get('errorProfiles').length - this.get('preRegistered');\n    }).property('model.nodeProfiles.length', 'errorProfiles.length', 'preRegistered'),\n\n    nodeRegTotal: (function () {\n      var total = this.get('nodeRegComplete') + this.get('newProfiles').length;\n      if (this.get('registrationInProgress') && !this.get('registrationPaused')) {\n        total++;\n      }\n      return total;\n    }).property('nodeRegComplete', 'newProfiles.length', 'registrationInProgress', 'registrationPaused'),\n\n    nodeRegPercentComplete: (function () {\n      var nodeRegComplete = this.get('nodeRegComplete');\n      var nodeRegTotal = this.get('nodeRegTotal');\n      return Math.round(nodeRegComplete / nodeRegTotal * 100);\n    }).property('nodeRegComplete', 'nodeRegTotal'),\n\n    noRegisteredNodes: (function () {\n      return this.get('model.nodeProfiles').length < 1;\n    }).property('model.nodeProfiles', 'model.nodeProfiles.length'),\n\n    hasSelectedProfile: (function () {\n      return this.get('selectedProfile') != null;\n    }).property('selectedProfile'),\n\n    nodeFormStyle: (function () {\n      if (this.get('edittedProfiles').length > 0 && this.get('hasSelectedProfile') === true) {\n        return 'visibility:visible;';\n      } else {\n        return 'visibility:hidden;';\n      }\n    }).property('edittedProfiles.length', 'hasSelectedProfile'),\n\n    updateProfileSelection: function updateProfileSelection(profile) {\n      var oldSelection = this.get('selectedProfile');\n      if (oldSelection) {\n        oldSelection.set('isActiveClass', 'inactive');\n      }\n\n      if (profile) {\n        profile.set('isActiveClass', 'active');\n      }\n      this.set('selectedProfile', profile);\n    },\n\n    openRegDialog: function openRegDialog() {\n      this.set('registerNodesModalOpened', true);\n      this.set('registerNodesModalClosed', false);\n      this.set('modalOpen', true);\n    },\n\n    closeRegDialog: function closeRegDialog() {\n      this.set('registerNodesModalOpened', false);\n      this.set('registerNodesModalClosed', true);\n      this.set('modalOpen', false);\n    },\n\n    actions: {\n      showNodeRegistrationModal: function showNodeRegistrationModal() {\n        var newProfiles = this.get('newProfiles');\n        var errorProfiles = this.get('errorProfiles');\n        var edittedProfiles = this.get('edittedProfiles');\n\n        edittedProfiles.setObjects(errorProfiles);\n        newProfiles.forEach(function (item, index) {\n          edittedProfiles.pushObject(item);\n        });\n        this.set('edittedProfiles', edittedProfiles);\n        this.updateProfileSelection(edittedProfiles[0]);\n        this.openRegDialog();\n      },\n\n      registerNodes: function registerNodes() {\n        this.closeRegDialog();\n        var edittedProfiles = this.get('edittedProfiles');\n        var errorProfiles = this.get('errorProfiles');\n        var newProfiles = this.get('newProfiles');\n        edittedProfiles.forEach(function (item, index) {\n          item.isError = false;\n          item.errorMessage = '';\n          errorProfiles.removeObject(item);\n        });\n        newProfiles.setObjects(edittedProfiles);\n        this.set('edittedProfiles', []);\n        this.set('newProfiles', newProfiles);\n        this.registerNewNodes();\n      },\n\n      cancelRegisterNodes: function cancelRegisterNodes() {\n        this.closeRegDialog();\n        this.set('edittedProfiles', []);\n        // Unpause if necessary\n        if (this.get('registrationPaused')) {\n          this.doNextNodeRegistration();\n        }\n      },\n\n      selectProfile: function selectProfile(profile) {\n        this.updateProfileSelection(profile);\n      },\n\n      addProfile: function addProfile() {\n        var edittedProfiles = this.get('edittedProfiles');\n        var nodeCount = edittedProfiles.length + this.get('model.nodeProfiles').length + this.get('errorProfiles').length;\n        if (this.get('registrationInProgress') && !this.get('registrationPaused')) {\n          nodeCount++;\n        }\n        var newProfile = this.Profile.create({\n          name: 'Node ' + (nodeCount + 1),\n          totalNodes: 5\n        });\n        edittedProfiles.insertAt(0, newProfile);\n        this.updateProfileSelection(newProfile);\n      },\n\n      removeProfile: function removeProfile(profile) {\n        var profiles = this.get('edittedProfiles');\n        profiles.removeObject(profile);\n        this.set('edittedProfiles', profiles);\n\n        if (this.get('selectedProfile') == profile) {\n          this.updateProfileSelection(profiles[0]);\n        }\n      }\n    },\n\n    disableRegisterNodesNext: (function () {\n      var freeNodeCount = 0;\n      var profiles = this.get('model.nodeProfiles');\n      for (var i = 0; i < profiles.length; i++) {\n        freeNodeCount += profiles[i].freeNodes;\n      }\n      return freeNodeCount < 4;\n    }).property('model.nodeProfiles', 'model.nodeProfiles.length'),\n\n    registerNewNodes: function registerNewNodes() {\n      var newProfiles = this.get('newProfiles');\n      if (newProfiles && newProfiles.length > 0) {\n        if (!this.get('registrationInProgress')) {\n          this.set('preRegistered', this.get('model.nodeProfiles.length'));\n          this.doNextNodeRegistration();\n        } else if (this.get('registrationPaused')) {\n          this.doNextNodeRegistration();\n        }\n      }\n    },\n\n    doNextNodeRegistration: function doNextNodeRegistration() {\n      if (this.get('modalOpen') === true) {\n        ;this.set('registrationPaused', true);\n      } else {\n        this.set('registrationPaused', false);\n\n        var remaining = this.get('newProfiles');\n        if (remaining && remaining.length > 0) {\n          this.set('registrationInProgress', true);\n          var lastIndex = remaining.length - 1;\n          var nextNode = remaining[lastIndex];\n          this.set('newProfiles', remaining.slice(0, lastIndex));\n          this.registerNode(nextNode);\n        } else {\n          this.set('registrationInProgress', false);\n        }\n      }\n    },\n\n    registerNode: function registerNode(node) {\n      var me = this;\n      var iterationCount = 0;\n\n      var promiseFunction = function promiseFunction(resolve) {\n        var checkForDone = function checkForDone() {\n          if (iterationCount == 1) {\n            resolve(true);\n          } else {\n            resolve(false);\n          }\n        };\n\n        Ember['default'].run.later(checkForDone, 3000);\n      };\n\n      var fulfill = function fulfill(isDone) {\n        if (isDone) {\n          var randomPercent = Math.round(Math.random() * 100);\n          if (randomPercent <= 5) {\n            node.isError = true;\n            node.errorMessage = node.name + ' was not registered: node username/password is invalid.';\n          } else if (randomPercent <= 10) {\n            node.isError = true;\n            node.errorMessage = node.name + ' was not registered: node IP address is invalid.';\n          }\n\n          if (node.isError) {\n            var errorProfiles = me.get('errorProfiles');\n            errorProfiles.pushObject(node);\n            me.set('errorProfiles', errorProfiles);\n          } else {\n            var nodeProfiles = me.get('model.nodeProfiles');\n            nodeProfiles.pushObject(node);\n            me.set('model.nodeProfiles', nodeProfiles);\n          }\n          me.doNextNodeRegistration();\n        } else {\n          iterationCount++;\n          var promise = new Ember['default'].RSVP.Promise(promiseFunction);\n          promise.then(fulfill);\n        }\n      };\n\n      var promise = new Ember['default'].RSVP.Promise(promiseFunction);\n      promise.then(fulfill);\n    }\n  });\n\n});","define('fusor-ember-cli/controllers/review', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n\n    needs: ['subscriptions', 'rhci', 'application', 'deployment'],\n\n    isUpstream: Ember['default'].computed.alias('controllers.application.isUpstream'),\n    disableNext: Ember['default'].computed.alias('controllers.subscriptions.disableNext'),\n\n    disableTabProgress: (function () {\n      return !this.get('controllers.deployment.isStarted');\n    }).property('controllers.deployment.isStarted'),\n\n    disableTabInstallation: (function () {\n      return this.get('disableNext') && !this.get('isUpstream');\n    }).property('disableNext', 'isUpstream'),\n\n    nameSelectSubscriptions: Ember['default'].computed.alias('controllers.rhci.nameSelectSubscriptions'),\n\n    stepNumberReview: Ember['default'].computed.alias('controllers.deployment.stepNumberReview') });\n\n});","define('fusor-ember-cli/controllers/review/installation', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    needs: ['application', 'rhci', 'deployment', 'satellite', 'configure-organization', 'configure-environment', 'rhev-setup', 'hypervisor', 'hypervisor/discovered-host', 'engine/discovered-host', 'storage', 'networking', 'rhev-options', 'where-install', 'cloudforms-storage-domain', 'cloudforms-vm', 'review'],\n\n    // TODO - DRY and update while deployment is finished and button should say \"Deployed\"\n    buttonDeployTitle: (function () {\n      if (this.get('controllers.deployment.isStarted')) {\n        return 'Deploying ...';\n      } else {\n        return 'Deploy';\n      }\n    }).property('controllers.deployment.isStarted'),\n\n    rhevValidated: (function () {\n      if (this.get('isRhev')) {\n        return Ember['default'].isPresent(this.get('controllers.deployment.rhev_engine_admin_password')) && Ember['default'].isPresent(this.get('selectedRhevEngine')) && Ember['default'].isPresent(this.get('selectedHypervisorHosts')) && Ember['default'].isPresent(this.get('controllers.deployment.rhev_storage_type'));\n      } else {\n        return true;\n      }\n    }).property('controllers.deployment.rhev_engine_admin_password', 'controllers.deployment.rhev_storage_type', 'selectedRhevEngine', 'selectedHypervisorHosts'),\n\n    cfmeValidated: (function () {\n      if (this.get('isCloudForms')) {\n        return Ember['default'].isPresent(this.get('controllers.deployment.cfme_install_loc'));\n      } else {\n        return true;\n      }\n    }).property('controllers.deployment.cfme_install_loc'),\n\n    buttonDeployDisabled: (function () {\n      return this.get('controllers.deployment.isStarted') || !this.get('rhevValidated') || !this.get('cfmeValidated');\n    }).property('controllers.deployment.isStarted', 'rhevValidated', 'cfmeValidated'),\n\n    showErrorMessage: false,\n    errorMsg: null,\n    foremanTasksURL: null,\n    skipContent: Ember['default'].computed.alias('controllers.deployment.skipContent'),\n\n    isRhevOpen: true,\n    isOpenStackOpen: false,\n    isCloudFormsOpen: false,\n    isSubscriptionsOpen: false,\n\n    engineHostAddressDefault: 'ovirt-hypervisor.rhci.redhat.com',\n    hostAddress: Ember['default'].computed.alias('controllers.rhev-options.hostAddress'),\n    engineHostName: Ember['default'].computed.alias('controllers.rhev-options.engineHostName'),\n\n    nameDeployment: Ember['default'].computed.alias('controllers.deployment.name'),\n    selectedOrganization: Ember['default'].computed.alias('controllers.deployment.selectedOrganzation'),\n    selectedEnvironment: Ember['default'].computed.alias('controllers.deployment.selectedEnvironment'),\n    rhevSetup: Ember['default'].computed.alias('controllers.deployment.rhevSetup'),\n\n    isRhev: Ember['default'].computed.alias('controllers.deployment.isRhev'),\n    isOpenStack: Ember['default'].computed.alias('controllers.deployment.isOpenStack'),\n    isCloudForms: Ember['default'].computed.alias('controllers.deployment.isCloudForms'),\n    isSubscriptions: Ember['default'].computed.alias('controllers.deployment.isSubscriptions'),\n\n    isSelfHosted: Ember['default'].computed.alias('controllers.deployment.rhev_is_self_hosted'),\n    selectedHypervisorHosts: Ember['default'].computed.alias('controllers.deployment.discovered_hosts'),\n\n    rhev_engine_host: Ember['default'].computed.alias('controllers.deployment.discovered_host'),\n    selectedRhevEngine: Ember['default'].computed.alias('controllers.deployment.discovered_host'),\n\n    nameRHCI: Ember['default'].computed.alias('controllers.rhci.nameRHCI'),\n    nameRhev: Ember['default'].computed.alias('controllers.rhci.nameRhev'),\n    nameOpenStack: Ember['default'].computed.alias('controllers.rhci.nameOpenStack'),\n    nameCloudForms: Ember['default'].computed.alias('controllers.rhci.nameCloudForms'),\n    nameSatellite: Ember['default'].computed.alias('controllers.rhci.nameSatellite') });\n\n});","define('fusor-ember-cli/controllers/review/progress', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n\n    needs: ['deployment'],\n\n    isRhevOpen: true,\n    isOpenStackOpen: false,\n    isCloudFormsOpen: false,\n    isSubscriptionsOpen: false,\n    foremanTasksURL: null,\n\n    // TODO - DRY and update while deployment is finished and button should say \"Deployed\"\n    buttonDeployTitle: (function () {\n      if (this.get('controllers.deployment.isStarted')) {\n        return 'Deploying ...';\n      } else {\n        return 'Deploy';\n      }\n    }).property('controllers.deployment.isStarted'),\n\n    buttonDeployDisabled: (function () {\n      return this.get('controllers.deployment.isStarted');\n    }).property('controllers.deployment.isStarted'),\n\n    showErrorMessage: false,\n    errorMsg: null, // this should be overwritten by API response\n    installationInProgress: true,\n\n    prog: 1,\n\n    incrementBy: 20 });\n\n});","define('fusor-ember-cli/controllers/review/progress/details/task', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller.extend({});\n\n});","define('fusor-ember-cli/controllers/review/progress/details/task/index', ['exports', 'ember', 'fusor-ember-cli/mixins/progress-bar-mixin'], function (exports, Ember, ProgressBarMixin) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller.extend(ProgressBarMixin['default'], {});\n\n});","define('fusor-ember-cli/controllers/review/progress/overview', ['exports', 'ember', 'fusor-ember-cli/mixins/progress-bar-mixin'], function (exports, Ember, ProgressBarMixin) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller.extend(ProgressBarMixin['default'], {});\n\n});","define('fusor-ember-cli/controllers/rhci', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].ObjectController.extend({});\n\n});","define('fusor-ember-cli/controllers/rhev-options', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n\n    needs: ['deployment'],\n\n    rhev_root_password: Ember['default'].computed.alias('controllers.deployment.rhev_root_password'),\n    rhev_engine_admin_password: Ember['default'].computed.alias('controllers.deployment.rhev_engine_admin_password'),\n    rhev_database_name: Ember['default'].computed.alias('controllers.deployment.rhev_database_name'),\n    rhev_cluster_name: Ember['default'].computed.alias('controllers.deployment.rhev_cluster_name'),\n    rhev_storage_name: Ember['default'].computed.alias('controllers.deployment.rhev_storage_name'),\n    rhev_cpu_type: Ember['default'].computed.alias('controllers.deployment.rhev_cpu_type'),\n    rhev_is_self_hosted: Ember['default'].computed.alias('controllers.deployment.rhev_is_self_hosted'),\n\n    optionsBackRouteName: (function () {\n      if (this.get('rhev_is_self_hosted')) {\n        return 'engine.discovered-host';\n      } else {\n        return 'hypervisor.discovered-host';\n      }\n    }).property('rhev_is_self_hosted'),\n\n    applicationModes: ['Both', 'Virt', 'Gluster'],\n    engineLocation: ['Local', 'Remote'],\n    dbSetup: ['Automatic', 'Manual'],\n    yesNo: ['Yes', 'No'],\n    applicationModes2: [{\n      id: 1,\n      name: 'Both' }, {\n      id: 2,\n      name: 'Virt' }, {\n      id: 3,\n      name: 'Gluster' }] });\n\n});","define('fusor-ember-cli/controllers/rhev-setup', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n\n    needs: ['deployment'],\n\n    rhev_is_self_hosted: Ember['default'].computed.alias('controllers.deployment.rhev_is_self_hosted'),\n\n    rhevSetup: (function () {\n      return this.get('rhev_is_self_hosted') ? 'selfhost' : 'rhevhost';\n    }).property('rhev_is_self_hosted'),\n\n    rhevSetupTitle: (function () {\n      return this.get('rhev_is_self_hosted') ? 'Self Hosted' : 'Host + Engine';\n    }).property('rhev_is_self_hosted'),\n\n    isSelfHosted: (function () {\n      return this.get('rhevSetup') === 'selfhost';\n    }).property('rhevSetup'),\n\n    actions: {\n      rhevSetupChanged: function rhevSetupChanged(value) {\n        return this.get('controllers.deployment').set('rhev_is_self_hosted', this.get('isSelfHosted'));\n      }\n    }\n\n  });\n\n});","define('fusor-ember-cli/controllers/rhev', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    needs: ['application', 'rhev-setup', 'side-menu'],\n\n    rhevSetup: Ember['default'].computed.alias('controllers.rhev-setup.rhevSetup'),\n\n    isSelfHost: (function () {\n      return this.get('rhevSetup') === 'selfhost';\n    }).property('rhevSetup'),\n\n    engineTabName: (function () {\n      if (this.get('isSelfHost')) {\n        return 'Engine/Hypervisor';\n      } else {\n        return 'Engine';\n      }\n    }).property('isSelfHost') });\n\n});","define('fusor-ember-cli/controllers/satellite', ['exports', 'ember', 'fusor-ember-cli/mixins/satellite-controller-mixin'], function (exports, Ember, SatelliteControllerMixin) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend(SatelliteControllerMixin['default'], {\n\n    needs: ['deployment'],\n\n    satelliteTabRouteName: Ember['default'].computed.alias('controllers.deployment.satelliteTabRouteName'),\n    organizationTabRouteName: Ember['default'].computed.alias('controllers.deployment.organizationTabRouteName'),\n    lifecycleEnvironmentTabRouteName: Ember['default'].computed.alias('controllers.deployment.lifecycleEnvironmentTabRouteName'),\n\n    disableTabDeploymentName: Ember['default'].computed.alias('controllers.deployment.disableTabDeploymentName'),\n    disableTabConfigureOrganization: Ember['default'].computed.alias('controllers.deployment.disableTabConfigureOrganization'),\n    disableTabLifecycleEnvironment: Ember['default'].computed.alias('controllers.deployment.disableTabLifecycleEnvironment') });\n\n});","define('fusor-ember-cli/controllers/satellite/index', ['exports', 'ember', 'fusor-ember-cli/mixins/satellite-controller-mixin'], function (exports, Ember, SatelliteControllerMixin) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend(SatelliteControllerMixin['default'], {\n\n    needs: ['satellite', 'deployment'],\n\n    validations: {\n      name: {\n        presence: true } },\n\n    name: Ember['default'].computed.alias('controllers.deployment.name'),\n    description: Ember['default'].computed.alias('controllers.deployment.description'),\n\n    organizationTabRouteName: Ember['default'].computed.alias('controllers.deployment.organizationTabRouteName'),\n\n    disableNextOnDeploymentName: Ember['default'].computed.alias('controllers.deployment.disableNextOnDeploymentName'),\n\n    idSatName: 'deployment_sat_name',\n    idSatDesc: 'deployment_sat_desc',\n\n    backRouteNameOnSatIndex: 'deployment.start' });\n\n});","define('fusor-ember-cli/controllers/satellite/subscription', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].ObjectController.extend({\n    isChecked: false,\n\n    registerOnParent: (function () {\n      this.send('registerToggle', this);\n    }).on('init') });\n\n});","define('fusor-ember-cli/controllers/side-menu', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    showSideMenu: false,\n\n    uxDefaultNote: 'Note: Please write notes on [etherpad](http://rhci.pad.engineering.redhat.com/wireframe-mtg-10-30-2014), since this pad is ready-only and will note save anything.\\n\\n',\n    uxHeaderNote: '\\n\\n\\n**UX Notes / Specs** for this route\\n\\n',\n    uxHeaderTodo: '\\n\\n\\n\\n\\n\\n\\n**UX Todos / Questions** for this route\\n\\n',\n    uxNotes: 'none', //this should be overwritten by controller\n    uxTodos: 'none', //this should be overwritten by controller\n    uxNotesDisplay: (function () {\n      return this.get('uxDefaultNote') + this.get('uxHeaderNote') + this.get('uxNotes') + this.get('uxHeaderTodo') + this.get('uxTodos');\n    }).property('uxNotes'),\n\n    etherpadBaseUrl: 'http://rhci.pad.engineering.redhat.com/',\n    etherpadName: '',\n    etherpadUrl: (function () {\n      return this.get('etherpadBaseUrl') + this.get('etherpadName');\n    }).property('etherpadName'),\n\n    actions: {\n      toggleSideMenu: function toggleSideMenu() {\n        this.set('showSideMenu', this.toggleProperty('showSideMenu'));\n      }\n    }\n  });\n\n});","define('fusor-ember-cli/controllers/storage', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n\n    needs: ['deployment'],\n\n    rhev_storage_type: Ember['default'].computed.alias('controllers.deployment.rhev_storage_type'),\n    rhev_storage_address: Ember['default'].computed.alias('controllers.deployment.rhev_storage_address'),\n    rhev_share_path: Ember['default'].computed.alias('controllers.deployment.rhev_share_path'),\n    step3RouteName: Ember['default'].computed.alias('controllers.deployment.step3RouteName'),\n    isCloudForms: Ember['default'].computed.alias('controllers.deployment.isCloudForms'),\n\n    isNFS: (function () {\n      return this.get('rhev_storage_type') === 'NFS';\n    }).property('rhev_storage_type'),\n\n    isLocal: (function () {\n      return this.get('rhev_storage_type') === 'Local';\n    }).property('rhev_storage_type'),\n\n    isGluster: (function () {\n      return this.get('rhev_storage_type') === 'Gluster';\n    }).property('rhev_storage_type') });\n\n});","define('fusor-ember-cli/controllers/subscription', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\t// NOTE THIS IS SUBSCRIPTION (singular), NOT SUBSCRIPTIONS (plural)\n\n\texports['default'] = Ember['default'].ObjectController.extend({});\n\n});","define('fusor-ember-cli/controllers/subscriptions', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    needs: ['deployment', 'subscriptions/credentials'],\n\n    stepNumberSubscriptions: Ember['default'].computed.alias('controllers.deployment.stepNumberSubscriptions'),\n\n    disableTabManagementApplication: Ember['default'].computed.not('model.isAuthenticated'),\n    disableTabSelectSubsciptions: Ember['default'].computed.not('model.isAuthenticated') });\n\n});","define('fusor-ember-cli/controllers/subscriptions/credentials', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n\n    needs: ['deployment'],\n\n    upstream_consumer_uuid: Ember['default'].computed.alias('controllers.deployment.upstream_consumer_uuid'),\n    upstream_consumer_name: Ember['default'].computed.alias('controllers.deployment.upstream_consumer_name'),\n\n    isRhev: Ember['default'].computed.alias('controllers.deployment.deploy_rhev'),\n    isOpenStack: Ember['default'].computed.alias('controllers.deployment.deploy_openstack'),\n    isCloudForms: Ember['default'].computed.alias('controllers.deployment.deploy_cfme'),\n\n    //overwritten by setupController\n    organizationUpstreamConsumerUUID: null,\n    organizationUpstreamConsumerName: null,\n\n    disableCredentialsNext: (function () {\n      return !(Ember['default'].isPresent(this.get('identification')) && Ember['default'].isPresent(this.get('password')) || Ember['default'].isPresent(this.get('model.isAuthenticated')));\n    }).property('username', 'password', 'model.isAuthenticated'),\n\n    hasUpstreamConsumerUuid: (function () {\n      return Ember['default'].isPresent(this.get('upstream_consumer_uuid'));\n    }).property('upstream_consumer_uuid'),\n\n    hasOrganizationUpstreamConsumerUUID: (function () {\n      return Ember['default'].isPresent(this.get('organizationUpstreamConsumerUUID'));\n    }).property('organizationUpstreamConsumerUUID'),\n\n    backRouteNameonCredentials: (function () {\n      if (this.get('isCloudForms')) {\n        return 'cloudforms.cfme-configuration';\n      } else if (this.get('isOpenStack')) {\n        return 'assign-nodes';\n      } else if (this.get('isRhev')) {\n        return 'storage';\n      } else {\n        return 'configure-environment';\n      }\n    }).property('isRhev', 'isOpenStack', 'isCloudForms'),\n\n    nextButtonTitle: 'Next',\n\n    actionCredentialsNext: (function () {\n      if (this.get('model.isAuthenticated')) {\n        return 'redirectToManagementApplication';\n      } else {\n        return 'loginPortal';\n      }\n    }).property('model.isAuthenticated') });\n\n});","define('fusor-ember-cli/controllers/subscriptions/management-application', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n\n    needs: ['subscriptions', 'deployment'],\n\n    sessionPortal: Ember['default'].computed.alias('controllers.subscriptions.model'),\n    upstream_consumer_uuid: Ember['default'].computed.alias('controllers.deployment.upstream_consumer_uuid'),\n    upstream_consumer_name: Ember['default'].computed.alias('controllers.deployment.upstream_consumer_name'),\n\n    showAlertMessage: false,\n\n    disableNextOnManagementApp: (function () {\n      return Ember['default'].isBlank(this.get('sessionPortal.consumerUUID'));\n    }).property('sessionPortal.consumerUUID'),\n\n    actions: {\n      selectManagementApp: function selectManagementApp(managementApp) {\n        this.set('showAlertMessage', false);\n        this.get('sessionPortal').set('consumerUUID', managementApp.uuid);\n        this.get('sessionPortal').save();\n        this.set('upstream_consumer_uuid', managementApp.uuid);\n        this.set('upstream_consumer_name', managementApp.name);\n      },\n\n      createSatellite: function createSatellite(params) {\n        var token = $('meta[name=\"csrf-token\"]').attr('content');\n        var newSatelliteName = this.get('newSatelliteName');\n        var ownerKey = this.get('sessionPortal').get('ownerKey');\n        var self = this;\n\n        //POST /customer_portal/consumers?owner=#{OWNER['key']}, {\"name\":\"#{RHCI_DISTRIBUTOR_NAME}\",\"type\":\"satellite\",\"facts\":{\"distributor_version\":\"sat-6.0\",\"system.certificate_version\":\"3.2\"}}\n        var url = '/customer_portal/consumers?=' + ownerKey;\n\n        return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n          Ember['default'].$.ajax({\n            url: url,\n            type: 'POST',\n            data: JSON.stringify({ name: newSatelliteName,\n              type: 'satellite',\n              facts: { 'distributor_version': 'sat-6.0', 'system.certificate_version': '3.2' } }),\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'X-CSRF-Token': token },\n            success: function success(response) {\n              self.get('model').pushObject(response);\n              self.get('sessionPortal').set('consumerUUID', response.uuid);\n              self.get('sessionPortal').save();\n              self.set('showAlertMessage', true);\n              console.log(response);\n              resolve(response);\n            },\n            error: function error(response) {\n              console.log('error on createSatellite');\n              return self.send('error');\n            }\n          });\n        });\n      }\n\n    } });\n\n});","define('fusor-ember-cli/controllers/subscriptions/select-subscriptions', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].ArrayController.extend({\n    needs: ['application', 'deployment'],\n\n    itemController: 'subscription',\n\n    isUpstream: Ember['default'].computed.alias('controllers.application.isUpstream'),\n    stepNumberSubscriptions: Ember['default'].computed.alias('controllers.deployment.stepNumberSubscriptions'),\n\n    isOnlyShowSubscriptions: true,\n    enableAnalytics: false, // TODO should be set by setupController using API call\n\n    buttonAttachTitle: (function () {\n      if (this.get('attachingInProgress')) {\n        return 'Attaching ...';\n      } else {\n        return 'Attach Selected';\n      }\n    }).property('attachingInProgress'),\n\n    analyticsColor: (function () {\n      if (this.get('enableAnalytics')) {\n        return '';\n      } else {\n        return 'disabled-color';\n      }\n    }).property('enableAnalytics'),\n\n    totalCountSubscriptions: Ember['default'].computed.alias('model.length'),\n\n    attachingInProgress: false,\n    showAttachedSuccessMessage: false,\n\n    disableSubscriptionsNext: (function () {\n      return this.get('model.length') === 0 || this.get('attachingInProgress');\n    }).property('model', 'attachingInProgress'),\n\n    totalSelectedCount: (function () {\n      return this.get('model').filterBy('isSelectedSubscription', true).get('length');\n    }).property('model.@each.isSelectedSubscription'),\n\n    selectedSubscriptions: (function () {\n      return this.get('model').filterBy('isSelectedSubscription', true);\n    }).property('model.@each.isSelectedSubscription'),\n\n    disableAttachButton: (function () {\n      return !this.get('model').isAny('isSelectedSubscription') || this.get('attachingInProgress');\n    }).property('model.@each.isSelectedSubscription', 'attachingInProgress') });\n\n});","define('fusor-ember-cli/controllers/where-install', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].ObjectController.extend({\n\n    needs: ['deployment'],\n\n    cfme_install_loc: Ember['default'].computed.alias('controllers.deployment.cfme_install_loc'),\n    isRhev: Ember['default'].computed.alias('controllers.deployment.isRhev'),\n    isOpenStack: Ember['default'].computed.alias('controllers.deployment.isOpenStack'),\n    satelliteTabRouteName: Ember['default'].computed.alias('controllers.deployment.satelliteTabRouteName'),\n    organizationTabRouteName: Ember['default'].computed.alias('controllers.deployment.organizationTabRouteName'),\n    lifecycleEnvironmentTabRouteName: Ember['default'].computed.alias('controllers.deployment.lifecycleEnvironmentTabRouteName'),\n\n    disableRHEV: false,\n    disableOpenStack: false,\n\n    backRouteName: (function () {\n      if (this.get('isOpenStack')) {\n        return 'assign-nodes';\n      } else if (this.get('isRhev')) {\n        return 'storage';\n      } else {\n        return 'satellite.configure-environment';\n      }\n    }).property('isOpenStack', 'isRhev'),\n\n    actions: {\n      cfmeLocationChanged: function cfmeLocationChanged() {}\n    }\n\n  });\n\n});","define('fusor-ember-cli/helpers/fa-icon', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var FA_PREFIX = /^fa\\-.+/;\n\n  var warn = Ember['default'].Logger.warn;\n\n  /**\n   * Handlebars helper for generating HTML that renders a FontAwesome icon.\n   *\n   * @param  {String} name    The icon name. Note that the `fa-` prefix is optional.\n   *                          For example, you can pass in either `fa-camera` or just `camera`.\n   * @param  {Object} options Options passed to helper.\n   * @return {Ember.Handlebars.SafeString} The HTML markup.\n   */\n  var faIcon = function faIcon(name, options) {\n    if (Ember['default'].typeOf(name) !== 'string') {\n      var message = 'fa-icon: no icon specified';\n      warn(message);\n      return Ember['default'].String.htmlSafe(message);\n    }\n\n    var params = options.hash,\n        classNames = [],\n        html = '';\n\n    classNames.push('fa');\n    if (!name.match(FA_PREFIX)) {\n      name = 'fa-' + name;\n    }\n    classNames.push(name);\n    if (params.spin) {\n      classNames.push('fa-spin');\n    }\n    if (params.flip) {\n      classNames.push('fa-flip-' + params.flip);\n    }\n    if (params.rotate) {\n      classNames.push('fa-rotate-' + params.rotate);\n    }\n    if (params.lg) {\n      warn('fa-icon: the \\'lg\\' parameter is deprecated. Use \\'size\\' instead. I.e. {{fa-icon size=\"lg\"}}');\n      classNames.push('fa-lg');\n    }\n    if (params.x) {\n      warn('fa-icon: the \\'x\\' parameter is deprecated. Use \\'size\\' instead. I.e. {{fa-icon size=\"' + params.x + '\"}}');\n      classNames.push('fa-' + params.x + 'x');\n    }\n    if (params.size) {\n      if (Ember['default'].typeOf(params.size) === 'string' && params.size.match(/\\d+/)) {\n        params.size = Number(params.size);\n      }\n      if (Ember['default'].typeOf(params.size) === 'number') {\n        classNames.push('fa-' + params.size + 'x');\n      } else {\n        classNames.push('fa-' + params.size);\n      }\n    }\n    if (params.fixedWidth) {\n      classNames.push('fa-fw');\n    }\n    if (params.listItem) {\n      classNames.push('fa-li');\n    }\n    if (params.pull) {\n      classNames.push('pull-' + params.pull);\n    }\n    if (params.border) {\n      classNames.push('fa-border');\n    }\n    if (params.classNames && !Ember['default'].isArray(params.classNames)) {\n      params.classNames = [params.classNames];\n    }\n    if (!Ember['default'].isEmpty(params.classNames)) {\n      Array.prototype.push.apply(classNames, params.classNames);\n    }\n\n    html += '<';\n    var tagName = params.tagName || 'i';\n    html += tagName;\n    html += ' class=\\'' + classNames.join(' ') + '\\'';\n    if (params.title) {\n      html += ' title=\\'' + params.title + '\\'';\n    }\n    if (params.ariaHidden === undefined || params.ariaHidden) {\n      html += ' aria-hidden=\"true\"';\n    }\n    html += '></' + tagName + '>';\n    return Ember['default'].String.htmlSafe(html);\n  };\n\n  exports['default'] = Ember['default'].Handlebars.makeBoundHelper(faIcon);\n\n  exports.faIcon = faIcon;\n\n});","define('fusor-ember-cli/helpers/log', ['exports'], function (exports) {\n\n\t'use strict';\n\n\texports['default'] = function () {};\n\n\t//console.debug(str);\n\n});","define('fusor-ember-cli/helpers/raw-text', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports.rawText = rawText;\n\n  function rawText(input) {\n    return new Handlebars.SafeString(input);\n  }\n\n  exports['default'] = Ember['default'].Handlebars.makeBoundHelper(rawText);\n\n});","define('fusor-ember-cli/initialize', ['exports', 'ember', 'ember-idx-utils/config'], function (exports, Em, IdxConfig) {\n\n  'use strict';\n\n  exports['default'] = {\n    name: 'ember-idx-utils',\n    initialize: function initialize() {\n      if (!Em['default'].IdxConfig) {\n        Em['default'].IdxConfig = IdxConfig['default'].create();\n      }\n    }\n  };\n\n});","define('fusor-ember-cli/initializers/app-version', ['exports', 'fusor-ember-cli/config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n  var registered = false;\n\n  exports['default'] = {\n    name: 'App Version',\n    initialize: function initialize(container, application) {\n      if (!registered) {\n        var appName = classify(application.toString());\n        Ember['default'].libraries.register(appName, config['default'].APP.version);\n        registered = true;\n      }\n    }\n  };\n\n});","define('fusor-ember-cli/initializers/coordinator-setup', ['exports', 'fusor-ember-cli/models/coordinator'], function (exports, Coordinator) {\n\n  'use strict';\n\n  exports['default'] = {\n    name: \"setup coordinator\",\n\n    initialize: function initialize(container, app) {\n      app.register(\"drag:coordinator\", Coordinator['default']);\n      app.inject(\"component\", \"coordinator\", \"drag:coordinator\");\n    }\n  };\n\n});","define('fusor-ember-cli/initializers/ember-idx-modal', ['exports', 'ember', 'ember-idx-utils/config'], function (exports, Em, IdxConfig) {\n\n    'use strict';\n\n    exports['default'] = {\n        name: 'ember-idx-modal',\n        initialize: function initialize() {\n            var Config = Em['default'].IdxConfig = Em['default'].IdxConfig ? Em['default'].IdxConfig : IdxConfig['default'].create();\n\n            var defaultConfig = Config.getConfig('bs');\n            if (!defaultConfig) {\n                Config.addConfig('bs');\n                defaultConfig = Config.getConfig('bs');\n            }\n\n            defaultConfig['modal'] = {\n                classes: ['em-modal', 'modal', 'fade'],\n                bodyClasses: ['modal-body'],\n                titleClasses: ['modal-header'],\n                footerClasses: ['modal-footer']\n            };\n        }\n    };\n\n});","define('fusor-ember-cli/initializers/export-application-global', ['exports', 'ember', 'fusor-ember-cli/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal && !window[classifiedName]) {\n      window[classifiedName] = application;\n    }\n  }\n\n  ;\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n\n});","define('fusor-ember-cli/mixins/configure-environment-mixin', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Mixin.create({\n\n    selectedEnvironment: Ember['default'].computed.alias('model'),\n\n    useDefaultOrgViewForEnv: (function () {\n      return Ember['default'].isBlank(this.get('selectedEnvironment'));\n    }).property('selectedEnvironment'),\n\n    nonLibraryEnvironments: Ember['default'].computed.filterBy('lifecycleEnvironments', 'library', false),\n    libraryEnvironments: Ember['default'].computed.filterBy('lifecycleEnvironments', 'library', true),\n    libraryEnv: (function () {\n      return this.get('libraryEnvironments').get('firstObject');\n    }).property('libraryEnvironments'),\n\n    priorLibraryEnvironments: Ember['default'].computed.filter('lifecycleEnvironments', function (item, index, array) {\n      return item.get('prior_id') === 1;\n    }).property('lifecycleEnvironments.@each.[]', 'libraryEnv'),\n\n    fields_env: {},\n\n    showAlertMessage: false,\n\n    envLabelName: (function () {\n      if (this.get('name')) {\n        return this.get('name').underscore();\n      }\n    }).property('name'),\n    label: Ember['default'].computed.alias('envLabelName'),\n\n    hasNoEnvironments: (function () {\n      return Ember['default'].isEmpty(this.get('lifecycleEnvironments'));\n    }).property('lifecycleEnvironments.@each.[]'),\n\n    hasOnlyLibraryEnvironment: (function () {\n      return this.get('lifecycleEnvironments.length') === 1;\n    }).property('lifecycleEnvironments.@each.[]')\n\n  });\n\n});","define('fusor-ember-cli/mixins/configure-organization-mixin', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Mixin.create({\n\n    needs: ['application'],\n\n    selectedOrganization: Ember['default'].computed.alias('model'),\n\n    fields_org: {},\n\n    showAlertMessage: false,\n\n    // default Organization name for New Organizations\n    defaultOrgName: (function () {\n      return this.getWithDefault('defaultOrg', this.get('deploymentName'));\n    }).property(),\n\n    orgLabelName: (function () {\n      if (this.get('fields_org.name')) {\n        return this.get('defaultOrgName').underscore();\n      }\n    }).property('defaultOrgName'),\n\n    actions: {\n      createOrganization: function createOrganization() {\n        //if (this.get('fields_org.isDirty')) {\n        var self = this;\n        this.set('fields_org.name', this.get('defaultOrgName'));\n        var organization = this.store.createRecord('organization', this.get('fields_org'));\n        self.set('fields_org', {});\n        self.set('defaultOrgName', null);\n        self.set('selectedOrganization', organization);\n        organization.save().then(function (org) {\n          //success\n          self.set('organization', org);\n          return self.set('showAlertMessage', true);\n        }, function (error) {\n          alert('There was an error trying to save: ' + error);\n          //organization.destroyRecord();\n          //organization.rollback()\n          //organization.reload();\n          //organization.unloadRecord();\n        });\n        //}\n      } }\n\n  });\n\n});","define('fusor-ember-cli/mixins/deployment-controller-mixin', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Mixin.create({\n\n    needs: ['application', 'subscriptions', 'configure-organization', 'configure-environment', 'subscriptions/select-subscriptions'],\n\n    isRhev: Ember['default'].computed.alias('deploy_rhev'),\n    isOpenStack: Ember['default'].computed.alias('deploy_openstack'),\n    isCloudForms: Ember['default'].computed.alias('deploy_cfme'),\n\n    // default is downstream\n    isUpstream: false,\n    hideSubscriptions: false,\n    isSubscriptions: (function () {\n      return !(this.get('hideSubscriptions') && !this.get('isUpstream'));\n    }).property('isUpstream', 'hideSubscriptions'),\n\n    // will be overwritten be routes\n    isHideWizard: null,\n\n    // declared in controllers, and not in mixin\n    // isRhev\n    // isOpenStack\n    // isCloudForms\n\n    // route names will be overwrriten by active hook in routes/deployment.js\n    // and routes/deployment-new.js and routes/start.js and routes/deployment-new/start.js\n    satelliteTabRouteName: null,\n    organizationTabRouteName: null,\n    lifecycleEnvironmentTabRouteName: null,\n\n    // nameSelectSubscriptions: function() {\n    //   if (this.get('isUpstream')) { return \"Select Content Source\"; } else { return \"Select Subscriptions\"; }\n    // }.property('isUpstream'),\n\n    disableNextOnStart: (function () {\n      return !(this.get('isRhev') || this.get('isOpenStack') || this.get('isCloudForms'));\n    }).property('isRhev', 'isOpenStack', 'isCloudForms'),\n\n    // names\n    nameRHCI: (function () {\n      if (this.get('isUpstream')) {\n        return 'Fusor';\n      } else {\n        return 'RHCI';\n      }\n    }).property('isUpstream'),\n\n    nameRedHat: (function () {\n      if (this.get('isUpstream')) {\n        return '';\n      } else {\n        return 'Red Hat';\n      }\n    }).property('isUpstream'),\n\n    nameSatellite: (function () {\n      if (this.get('isUpstream')) {\n        return 'Foreman';\n      } else {\n        return 'Satellite';\n      }\n    }).property('isUpstream'),\n\n    nameRhev: (function () {\n      if (this.get('isUpstream')) {\n        return 'oVirt';\n      } else {\n        return 'RHEV';\n      }\n    }).property('isUpstream'),\n\n    nameOpenStack: (function () {\n      if (this.get('isUpstream')) {\n        return 'RDO';\n      } else {\n        return 'RHELOSP';\n      }\n    }).property('isUpstream'),\n\n    nameCloudForms: (function () {\n      if (this.get('isUpstream')) {\n        return 'ManageIQ';\n      } else {\n        return 'CloudForms';\n      }\n    }).property('isUpstream'),\n\n    // logo\n    logoPath: (function () {\n      if (this.get('isUpstream')) {\n        return 'assets/foreman.png';\n      } else {\n        return 'assets/Header-logotype.png';\n      }\n    }).property('isUpstream'),\n\n    currentStepNumber: null, //set by setupController,\n\n    // steps\n    stepNumberRhev: 2,\n\n    stepNumberOpenstack: (function () {\n      if (this.get('isRhev')) {\n        return 3;\n      } else {\n        return 2;\n      }\n    }).property('isRhev'),\n\n    stepNumberCloudForms: (function () {\n      if (this.get('isRhev') && this.get('isOpenStack')) {\n        return 4;\n      } else if (this.get('isRhev') || this.get('isOpenStack')) {\n        return 3;\n      } else {\n        return 2;\n      }\n    }).property('isRhev', 'isOpenStack'),\n\n    stepNumberSubscriptions: (function () {\n      if (this.get('isRhev') && this.get('isOpenStack') && this.get('isCloudForms')) {\n        return 5;\n      } else if (this.get('isRhev') && this.get('isOpenStack') || this.get('isRhev') && this.get('isCloudForms') || this.get('isOpenStack') && this.get('isCloudForms')) {\n        return 4;\n      } else if (this.get('isRhev') || this.get('isOpenStack') || this.get('isCloudForms')) {\n        return 3;\n      } else {\n        return 2;\n      }\n    }).property('isRhev', 'isOpenStack', 'isCloudForms'),\n\n    // calculate temporary without isSubscriptions\n    stepNumberReviewTemp: (function () {\n      if (this.get('isRhev') && this.get('isOpenStack') && this.get('isCloudForms')) {\n        return 6;\n      } else if (this.get('isRhev') && this.get('isOpenStack') || this.get('isRhev') && this.get('isCloudForms') || this.get('isOpenStack') && this.get('isCloudForms')) {\n        return 5;\n      } else if (this.get('isRhev') || this.get('isOpenStack') || this.get('isCloudForms')) {\n        return 4;\n      } else {\n        return 3;\n      }\n    }).property('isRhev', 'isOpenStack', 'isCloudForms'),\n\n    stepNumberReview: (function () {\n      if (this.get('isSubscriptions')) {\n        return this.get('stepNumberReviewTemp');\n      } else {\n        return this.get('stepNumberReviewTemp') - 1;\n      }\n    }).property('stepNumberReviewTemp', 'isSubscriptions'),\n\n    step2RouteName: (function () {\n      if (this.get('isRhev')) {\n        return 'rhev';\n      } else if (this.get('isOpenStack')) {\n        return 'openstack';\n      } else if (this.get('isCloudForms')) {\n        return 'cloudforms';\n      }\n    }).property('isRhev', 'isOpenStack', 'isCloudForms'),\n\n    step3RouteName: (function () {\n      if (this.get('step2RouteName') === 'rhev') {\n        if (this.get('isOpenStack')) {\n          return 'openstack';\n        } else if (this.get('isCloudForms')) {\n          return 'cloudforms';\n        } else if (this.get('isSubscriptions')) {\n          return 'subscriptions';\n        } else {\n          return 'review';\n        }\n      } else if (this.get('step2RouteName') === 'openstack') {\n        if (this.get('isCloudForms')) {\n          return 'cloudforms';\n        } else if (this.get('isSubscriptions')) {\n          return 'subscriptions';\n        } else {\n          return 'review';\n        }\n      } else if (this.get('step2RouteName') === 'cloudforms') {\n        if (this.get('isSubscriptions')) {\n          return 'subscriptions';\n        } else {\n          return 'review';\n        }\n      }\n    }).property('step2RouteName', 'isOpenStack', 'isCloudForms', 'isSubscriptions') });\n\n});","define('fusor-ember-cli/mixins/deployment-new-controller-mixin', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Mixin.create({\n\n    beforeModel: function beforeModel() {\n      if (this.controllerFor('deployment-new').get('disableNextOnStart')) {\n        return this.transitionTo('deployment-new.start');\n      }\n    } });\n\n});","define('fusor-ember-cli/mixins/deployment-new-satellite-route-mixin', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Mixin.create({\n\n    beforeModel: function beforeModel() {\n      if (this.controllerFor('deployment-new').get('disableNextOnStart')) {\n        return this.transitionTo('deployment-new.start');\n      }\n    } });\n\n});","define('fusor-ember-cli/mixins/deployment-route-mixin', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Mixin.create({\n\n    actions: {\n      saveDeployment: function saveDeployment(routeNameForTransition) {\n        var deployment = this.get('controller.model');\n        var self = this;\n        deployment.save().then(function (result) {\n          if (routeNameForTransition) {\n            if (routeNameForTransition === 'deployments') {\n              return self.transitionTo('deployments');\n            } else {\n              return self.transitionTo(routeNameForTransition, result);\n            }\n          }\n        }, function (error) {\n          alert('There was an error trying to save: ' + error);\n        });\n      } }\n\n  });\n\n});","define('fusor-ember-cli/mixins/disable-tab-mixin', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Mixin.create({\n\n    needs: ['deployment', 'configure-organization', 'configure-environment'],\n\n    hasName: (function () {\n      return this.get('name.length') > 0;\n    }).property('name'),\n    hasNoName: Ember['default'].computed.not('hasName'),\n\n    hasOrganization: (function () {\n      return !!this.get('organization').get('id'); // without .get('id') returns promise that is true\n    }).property('organization'),\n    hasNoOrganization: Ember['default'].computed.not('hasOrganization'),\n\n    // disable All if there is no deployment name\n    disableAll: Ember['default'].computed.alias('hasNoName'),\n\n    // disable Next on Deployment Name if there is no deployment name\n    disableNextOnDeploymentName: Ember['default'].computed.alias('hasNoName'),\n\n    // disable Next on Configure Organization if no organization is selected\n    disableNextOnConfigureOrganization: Ember['default'].computed.or('hasNoOrganization', 'disableAll'),\n\n    // disable Next on Lifecycle Environment if no lifecycle environment is selected\n    // note: hasNoLifecycleEnvironment and hasNoLifecycleEnvironment is defined in /app/controllers/deployment.js\n    //       and app/controllers/deployment-new.js rather than in this mixin\n    disableNextOnLifecycleEnvironment: Ember['default'].computed.or('hasNoLifecycleEnvironment', 'disableAll'),\n\n    // Satellite Tabs Only\n    disableTabDeploymentName: false, // always enable tab for entering deployment name\n    disableTabConfigureOrganization: Ember['default'].computed.alias('disableNextOnDeploymentName'),\n    disableTabLifecycleEnvironment: Ember['default'].computed.alias('disableNextOnConfigureOrganization') });\n\n});","define('fusor-ember-cli/mixins/meta', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Mixin.create({\n    meta: (function () {\n      return this.store.metadataFor(this.get('model').type);\n    }).property('')\n  });\n\n});","define('fusor-ember-cli/mixins/progress-bar-mixin', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Mixin.create({\n\n    // START REFRESH\n    intervalPolling: (function () {\n      return 5000; // Time between refreshing (in ms)\n    }).property().readOnly(),\n\n    scheduleNextRefresh: function scheduleNextRefresh(f) {\n      return Ember['default'].run.later(this, function () {\n        f.apply(this);\n        this.set('timer', this.scheduleNextRefresh(f));\n      }, this.get('intervalPolling'));\n    },\n\n    // executes `refreshModel` for every intervalPolling.\n    startPolling: function startPolling() {\n      this.get('model').reload(); // run immediately\n      this.set('timer', this.scheduleNextRefresh(this.get('refreshModel'))); //and then repeats\n    },\n\n    stopPolling: function stopPolling() {\n      Ember['default'].run.cancel(this.get('timer'));\n    },\n\n    refreshModel: function refreshModel() {\n      return this.get('model').reload();\n    },\n    // END REFRESH\n\n    percentProgress: (function () {\n      return (this.get('model.progress') * 100).toFixed(1);\n    }).property('model.progress'),\n\n    percentProgressInt: (function () {\n      return (this.get('model.progress') * 100).toFixed(0);\n    }).property('model.progress'),\n\n    styleWidth: (function () {\n      return 'width: ' + (this.get('model.progress') * 100).toFixed(1) + '%;';\n    }).property('model.progress'),\n\n    progressBarClass: (function () {\n      var result = this.get('model.result');\n      if (result === 'success') {\n        return 'progress-bar progress-bar-success';\n      } else if (result === 'error') {\n        return 'progress-bar progress-bar-danger';\n      } else if (result === 'warning') {\n        return 'progress-bar progress-bar-warning';\n      } else {\n        return 'progress-bar';\n      }\n    }).property('model.result'),\n\n    deploymentStatus: (function () {\n      var progress = this.get('model.progress');\n      if (progress) {\n        if (progress === 1) {\n          return 'Finished';\n        } else {\n          return 'In Process';\n        }\n      } else {\n        return 'Not Started';\n      }\n    }).property('model.progress'),\n\n    isSpin: (function () {\n      return this.get('deploymentStatus') === 'In Process' && this.get('model.result') === 'pending';\n    }).property('deploymentStatus', 'model.result'),\n\n    progressBarMsg: (function () {\n      if (this.get('deploymentStatus') === 'In Process' && this.get('model.result') === 'pending') {\n        return 'Downloading';\n      } else if (this.get('deploymentStatus') === 'Finished') {\n        return 'Deployment successful';\n      } else if (this.get('model.result') === 'error') {\n        return 'Error';\n      } else if (this.get('model.result') === 'warning') {\n        return 'Warning';\n      }\n    }).property('deploymentStatus', 'model.result'),\n\n    progressBarSubMsg: (function () {\n      if (this.get('deploymentStatus') === 'In Process' && this.get('model.result') === 'pending') {\n        return 'Installing components';\n      }\n    }).property('deploymentStatus', 'model.result') });\n\n});","define('fusor-ember-cli/mixins/satellite-controller-mixin', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Mixin.create({\n\n    needs: ['configure-organization', 'configure-environment'],\n\n    rhciModalButtons: [Ember['default'].Object.create({ title: 'No', clicked: 'cancel', dismiss: 'modal' }), Ember['default'].Object.create({ title: 'Yes', clicked: 'redirectToDeployments', type: 'primary' })],\n\n    actions: {\n      redirectToDeployments: function redirectToDeployments() {\n        this.transitionTo('deployments');\n      }\n    }\n\n  });\n\n});","define('fusor-ember-cli/mixins/save-hostname-mixin', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Mixin.create({\n\n    actions: {\n      saveHostname: function saveHostname() {\n        var host = this.get('host');\n        console.log(host);\n        var self = this;\n        var token = $('meta[name=\"csrf-token\"]').attr('content');\n\n        return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n          Ember['default'].$.ajax({\n            url: '/api/v21/discovered_hosts/' + host.get('id') + '/rename',\n            type: 'PUT',\n            data: JSON.stringify({ 'discovered_host': { 'name': host.get('name') } }),\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'X-CSRF-Token': token,\n              'Authorization': 'Basic ' + self.get('session.basicAuthToken')\n            },\n            success: function success(response) {\n              resolve(response);\n            },\n\n            error: function error(response) {\n              reject(response);\n            }\n          });\n        });\n      }\n    }\n\n  });\n\n});","define('fusor-ember-cli/mixins/start-controller-mixin', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Mixin.create({\n\n    isUpstream: false,\n\n    // declared in controllers, and not in mixin\n    // isRhev\n    // isOpenStack\n    // isCloudForms\n\n    // route of Next button. It will be overwrriten by active hook in routes/start.js and routes/deployment-new/start.js\n    satelliteTabRouteName: null,\n\n    // disable Next button if none selected\n    disableNextOnStart: (function () {\n      return !(this.get('isRhev') || this.get('isOpenStack') || this.get('isCloudForms'));\n    }).property('isRhev', 'isOpenStack', 'isCloudForms'),\n\n    // names\n    nameRHCI: (function () {\n      if (this.get('isUpstream')) {\n        return 'Fusor';\n      } else {\n        return 'RHCI';\n      }\n    }).property('isUpstream'),\n\n    nameRedHat: (function () {\n      if (this.get('isUpstream')) {\n        return '';\n      } else {\n        return 'Red Hat';\n      }\n    }).property('isUpstream'),\n\n    nameSatellite: (function () {\n      if (this.get('isUpstream')) {\n        return 'Foreman';\n      } else {\n        return 'Satellite';\n      }\n    }).property('isUpstream'),\n\n    nameRhev: (function () {\n      if (this.get('isUpstream')) {\n        return 'oVirt';\n      } else {\n        return 'RHEV';\n      }\n    }).property('isUpstream'),\n\n    nameOpenStack: (function () {\n      if (this.get('isUpstream')) {\n        return 'RDO';\n      } else {\n        return 'RHELOSP';\n      }\n    }).property('isUpstream'),\n\n    nameCloudForms: (function () {\n      if (this.get('isUpstream')) {\n        return 'ManageIQ';\n      } else {\n        return 'CloudForms';\n      }\n    }).property('isUpstream'),\n\n    // images\n    imgRhev: (function () {\n      if (this.get('isUpstream')) {\n        return '/assets/r/ovirt-640-210.png';\n      } else {\n        return '/assets/r/rhci-rhev-640-210.png';\n      }\n    }).property('isUpstream'),\n\n    imgOpenStack: (function () {\n      if (this.get('isUpstream')) {\n        return '/assets/r/rdo-640-210.png';\n      } else {\n        return '/assets/r/rhci-openstack-640-210.png';\n      }\n    }).property('isUpstream'),\n\n    imgCloudForms: (function () {\n      if (this.get('isUpstream')) {\n        return '/assets/r/manageiq-640-210.png';\n      } else {\n        return '/assets/r/rhci-cloudforms-640-210.png';\n      }\n    }).property('isUpstream') });\n\n});","define('fusor-ember-cli/models/coordinator', ['exports', 'ember', 'fusor-ember-cli/models/obj-hash'], function (exports, Ember, ObjHash) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Object.extend(Ember['default'].Evented, {\n    objectMap: (function () {\n      return ObjHash['default'].create();\n    }).property(),\n\n    getObject: function getObject(id, ops) {\n      ops = ops || {};\n      var payload = this.get('objectMap').getObj(id);\n\n      if (payload.ops.source) {\n        payload.ops.source.sendAction('action', payload.obj);\n      }\n\n      if (payload.ops.target) {\n        payload.ops.target.sendAction('action', payload.obj);\n      }\n\n      this.trigger('objectMoved', { obj: payload.obj, source: payload.ops.source, target: ops.target });\n\n      return payload.obj;\n    },\n\n    setObject: function setObject(obj, ops) {\n      ops = ops || {};\n      return this.get('objectMap').add({ obj: obj, ops: ops });\n    }\n  });\n\n});","define('fusor-ember-cli/models/deployment', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    name: DS['default'].attr('string'),\n    description: DS['default'].attr('string'),\n    organization: DS['default'].belongsTo('organization', { async: true }),\n    lifecycle_environment: DS['default'].belongsTo('lifecycle-environment', { async: true }),\n\n    deploy_rhev: DS['default'].attr('boolean'),\n    deploy_cfme: DS['default'].attr('boolean'),\n    deploy_openstack: DS['default'].attr('boolean'),\n\n    rhev_is_self_hosted: DS['default'].attr('boolean'),\n\n    rhev_engine_admin_password: DS['default'].attr('string'),\n    rhev_database_name: DS['default'].attr('string'),\n    rhev_cluster_name: DS['default'].attr('string'),\n    rhev_storage_name: DS['default'].attr('string'),\n    rhev_storage_type: DS['default'].attr('string'),\n    rhev_storage_address: DS['default'].attr('string'),\n    rhev_cpu_type: DS['default'].attr('string'),\n    rhev_share_path: DS['default'].attr('string'),\n\n    cfme_install_loc: DS['default'].attr('string'),\n\n    rhev_root_password: DS['default'].attr('string'),\n    cfme_root_password: DS['default'].attr('string'),\n\n    foreman_task_uuid: DS['default'].attr('string'),\n    upstream_consumer_uuid: DS['default'].attr('string'),\n    upstream_consumer_name: DS['default'].attr('string'),\n\n    rhev_export_domain_name: DS['default'].attr('string'),\n    rhev_export_domain_address: DS['default'].attr('string'),\n    rhev_export_domain_path: DS['default'].attr('string'),\n\n    rhev_local_storage_path: DS['default'].attr('string'),\n    rhev_gluster_node_name: DS['default'].attr('string'),\n    rhev_gluster_node_address: DS['default'].attr('string'),\n    rhev_gluster_ssh_port: DS['default'].attr('string'),\n    rhev_gluster_root_password: DS['default'].attr('string'),\n\n    created_at: DS['default'].attr('date'),\n    updated_at: DS['default'].attr('date'),\n\n    // has one Engine\n    discovered_host: DS['default'].belongsTo('discovered-host', { inverse: 'deployment', async: true }),\n\n    // has many Hypervisors\n    discovered_hosts: DS['default'].hasMany('discovered-host', { inverse: 'deployments', async: true }) });\n\n});","define('fusor-ember-cli/models/discovered-host', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    name: DS['default'].attr('string'),\n    mac: DS['default'].attr('string'),\n    subnet_id: DS['default'].attr('string'),\n    subnet_name: DS['default'].attr('string'),\n    organization_id: DS['default'].attr('string'),\n    organization_name: DS['default'].attr('string'),\n    location_id: DS['default'].attr('string'),\n    location_name: DS['default'].attr('string'),\n    memory: DS['default'].attr('number'),\n    disk_count: DS['default'].attr('number'),\n    disks_size: DS['default'].attr('number'),\n    cpus: DS['default'].attr('number'),\n    memory_human_size: DS['default'].attr('string'),\n    disks_human_size: DS['default'].attr('string'),\n    subnet_to_s: DS['default'].attr('string'),\n    is_virtual: DS['default'].attr('boolean'),\n\n    // relationship to Engine\n    deployment: DS['default'].belongsTo('deployment', { inverse: 'discovered_host', async: true }),\n\n    // relationship to Hypervisors\n    deployments: DS['default'].hasMany('deployment', { inverse: 'discovered_hosts', async: true }),\n\n    created_at: DS['default'].attr('date'),\n    updated_at: DS['default'].attr('date') });\n\n});","define('fusor-ember-cli/models/environment', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    name: DS['default'].attr('string')\n    //  organization: DS.belongsTo('organization')\n  });\n\n});","define('fusor-ember-cli/models/foreman-task', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    type: DS['default'].attr('string'),\n    label: DS['default'].attr('string'),\n    pending: DS['default'].attr('boolean'),\n    humanized_name: DS['default'].attr('string'),\n    username: DS['default'].attr('string'),\n    started_at: DS['default'].attr('string'),\n    ended_at: DS['default'].attr('string'),\n    state: DS['default'].attr('string'),\n    result: DS['default'].attr('string'),\n    external_id: DS['default'].attr('string'),\n    progress: DS['default'].attr('string'),\n    parent_task_id: DS['default'].attr('string'),\n    humanized_errors: DS['default'].attr('string'),\n    humanized_output: DS['default'].attr('string'),\n    humanized_input: DS['default'].attr('string'),\n    taskUrl: (function () {\n      return '/foreman_tasks/tasks/' + this.get('id');\n    }).property('id')\n  });\n\n});","define('fusor-ember-cli/models/host', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    name: DS['default'].attr('string'),\n    hostgroup: DS['default'].attr('string'),\n    mac: DS['default'].attr('string'),\n    domain: DS['default'].attr('string'),\n    subnet: DS['default'].attr('string'),\n    operatingsystem: DS['default'].attr('string'),\n    environment: DS['default'].attr('string'),\n    model: DS['default'].attr('string'),\n    location: DS['default'].attr('string'),\n    organization: DS['default'].attr('string'),\n    cpu: DS['default'].attr('string'),\n    memory: DS['default'].attr('string'),\n    vendor: DS['default'].attr('string') });\n\n});","define('fusor-ember-cli/models/hostgroup', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    name: DS['default'].attr('string') });\n\n  // hostgroup: DS.attr('string'),\n  // mac: DS.attr('string'),\n  // domain: DS.attr('string'),\n  // subnet: DS.attr('string'),\n  // operatingsystem: DS.attr('string'),\n  // environment: DS.attr('string'),\n  // model: DS.attr('string'),\n  // location: DS.attr('string'),\n  // organization: DS.attr('string')\n\n});","define('fusor-ember-cli/models/lifecycle-environment', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    name: DS['default'].attr('string'),\n    label: DS['default'].attr('string'),\n    description: DS['default'].attr('string'),\n    library: DS['default'].attr('boolean'),\n    prior: DS['default'].attr('number'),\n    prior_id: DS['default'].attr('number'),\n    created_at: DS['default'].attr('date'),\n    updated_at: DS['default'].attr('date'),\n    organization: DS['default'].belongsTo('organization', { async: true })\n  });\n\n});","define('fusor-ember-cli/models/location', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    name: DS['default'].attr('string'),\n    title: DS['default'].attr('string')\n  });\n\n});","define('fusor-ember-cli/models/management-application', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    name: DS['default'].attr('string'),\n    type: DS['default'].attr('string'),\n    entitlementCount: DS['default'].attr('number'),\n    uuid: DS['default'].attr('string')\n  });\n\n});","define('fusor-ember-cli/models/obj-hash', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Object.extend({\n    content: {},\n    contentLength: 0,\n\n    add: function add(obj) {\n      var id = this.generateId();\n      this.get('content')[id] = obj;\n      this.incrementProperty('contentLength');\n      return id;\n    },\n\n    getObj: function getObj(key) {\n      var res = this.get('content')[key];\n      if (!res) {\n        throw 'no obj for key ' + key;\n      }\n      return res;\n    },\n\n    generateId: function generateId() {\n      var num = Math.random() * 1000000000000;\n      num = parseInt(num);\n      num = '' + num;\n      return num;\n    },\n\n    keys: function keys() {\n      var res = [];\n      for (var key in this.get('content')) {\n        res.push(key);\n      }\n      return Ember['default'].A(res);\n    },\n\n    lengthBinding: 'contentLength'\n  });\n\n});","define('fusor-ember-cli/models/organization', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    name: DS['default'].attr('string'),\n    title: DS['default'].attr('string'),\n    label: DS['default'].attr('string'),\n    description: DS['default'].attr('string'),\n    lifecycle_environments: DS['default'].hasMany('lifecycle-environment', { async: true }) });\n\n  //  subnets: DS.hasMany('subnet', { async: true })\n\n});","define('fusor-ember-cli/models/product', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    name: DS['default'].attr('string'),\n    state_time: DS['default'].attr('string'),\n    duration: DS['default'].attr('string'),\n    size: DS['default'].attr('string'),\n    result: DS['default'].attr('string') });\n\n});","define('fusor-ember-cli/models/session-portal', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    identification: DS['default'].attr('string'),\n    ownerKey: DS['default'].attr('string'),\n    consumerUUID: DS['default'].attr('string'),\n    isAuthenticated: DS['default'].attr('boolean')\n  });\n\n});","define('fusor-ember-cli/models/subnet', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    network: DS['default'].attr('string'),\n    mask: DS['default'].attr('string'),\n    priority: DS['default'].attr('number'),\n    name: DS['default'].attr('string'),\n    vlanid: DS['default'].attr('string'),\n    created_at: DS['default'].attr('date'),\n    updated_at: DS['default'].attr('date'),\n    dhcp_id: DS['default'].attr('number'),\n    tftp_id: DS['default'].attr('number'),\n    from: DS['default'].attr('string'),\n    to: DS['default'].attr('string'),\n    gateway: DS['default'].attr('string'),\n    dns_primary: DS['default'].attr('string'),\n    dns_secondary: DS['default'].attr('string'),\n    dns_id: DS['default'].attr('number'),\n    sort_network_id: DS['default'].attr('number'),\n    boot_mode: DS['default'].attr('string'),\n    ipam: DS['default'].attr('string'),\n    trafficTypes: DS['default'].hasMany('trafficType', { async: true }),\n    organization: DS['default'].belongsTo('organization')\n  });\n\n});","define('fusor-ember-cli/models/subscription', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    productName: DS['default'].attr('string'),\n    contractNumber: DS['default'].attr('string'),\n    type: DS['default'].attr('string'),\n    startDate: DS['default'].attr('date'),\n    endDate: DS['default'].attr('date'),\n    quantity: DS['default'].attr('number') });\n\n});","define('fusor-ember-cli/models/traffic-type', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    name: DS['default'].attr('string'),\n    subnets: DS['default'].hasMany('subnet', { async: true })\n  });\n\n});","define('fusor-ember-cli/models/user', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    login: DS['default'].attr('string'),\n    mail: DS['default'].attr('string'),\n    firstname: DS['default'].attr('string'),\n    lastname: DS['default'].attr('string'),\n    admin: DS['default'].attr('boolean'),\n    auth_source_id: DS['default'].attr('number'),\n    lastLoginOn: DS['default'].attr('date'),\n    fullName: (function () {\n      return this.get('firstname') + ' ' + this.get('lastname');\n    }).property('firstname', 'lastname')\n  });\n\n});","define('fusor-ember-cli/router', ['exports', 'ember', 'fusor-ember-cli/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType,\n    // log when Ember generates a controller or a route from a generic class\n    LOG_ACTIVE_GENERATION: true,\n    // log when Ember looks up a template or a view\n    LOG_VIEW_LOOKUPS: true\n  });\n\n  exports['default'] = Router.map(function () {\n    this.route('login');\n    this.route('loggedin');\n\n    this.resource('rhci', { path: '/old-deployments/new-old' }, function () {\n      this.route('satellite', function () {\n        this.route('configure-organization');\n        this.route('configure-environment');\n      });\n    });\n\n    this.resource('deployments');\n\n    this.resource('deployment-new', { path: '/deployments/new' }, function () {\n      this.route('start');\n      this.route('satellite', function () {\n        this.route('configure-environment');\n        this.route('configure-organization');\n      });\n    });\n\n    this.resource('deployment', { path: '/deployments/:deployment_id' }, function () {\n\n      this.route('start');\n\n      this.resource('satellite', function () {\n        this.resource('configure-organization');\n        this.resource('configure-environment');\n      });\n\n      this.resource('rhev', function () {\n        this.resource('rhev-setup', { path: 'setup' });\n        this.resource('engine', function () {\n          this.route('discovered-host');\n        });\n        this.resource('hypervisor', function () {\n          this.route('discovered-host');\n        });\n        this.resource('rhev-options', { path: 'configuration' });\n        this.resource('storage');\n      });\n\n      this.resource('openstack', function () {\n        this.resource('register-nodes');\n        this.resource('assign-nodes');\n      });\n      this.resource('cloudforms', function () {\n        this.resource('where-install');\n        this.route('cfme-configuration', { path: 'configuration' });\n        this.resource('cloudforms-storage-domain', { path: 'storage-domain' });\n        this.resource('cloudforms-vm', { path: 'vm' });\n      });\n      this.resource('subscriptions', function () {\n        this.route('credentials');\n        this.route('management-application');\n        this.route('select-subscriptions', { path: 'select' });\n      });\n      this.resource('products');\n      this.resource('review', function () {\n        this.route('installation');\n        this.route('progress', function () {\n          this.route('overview');\n          this.route('details', function () {\n            this.route('task', { path: '/:task_id' }, function () {\n              this.route('running_steps');\n              this.route('task_errors');\n              this.route('task_locks');\n              this.route('task_raw');\n            });\n          });\n        });\n      });\n    });\n\n    this.resource('hostgroups', function () {\n      this.resource('hostgroup', { path: '/:hostgroup_id' }, function () {\n        this.route('edit');\n      });\n    });\n\n    this.route('hostgroup/edit');\n    this.resource('discovered-hosts', function () {\n      this.resource('discovered-host', { path: '/:discovered_hosts_id' });\n    });\n  });\n\n});","define('fusor-ember-cli/routes/application', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  // app/routes/application.js\n  exports['default'] = Ember['default'].Route.extend({\n\n    actions: {\n      invalidateSession: function invalidateSession() {\n        return this.transitionTo('login');\n      },\n\n      notImplemented: function notImplemented() {\n        alert('This link is not implemented in the fusor-ember-cli prototype');\n      },\n      willImplement: function willImplement() {\n        alert('Check back soon. This will be implemented soon.');\n      } }\n  });\n\n});","define('fusor-ember-cli/routes/assign-nodes', ['exports', 'ember', 'fusor-ember-cli/mixins/deployment-route-mixin'], function (exports, Ember, DeploymentRouteMixin) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend(DeploymentRouteMixin['default'], {});\n\n});","define('fusor-ember-cli/routes/cloudforms-storage-domain', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('fusor-ember-cli/routes/cloudforms-vm', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('fusor-ember-cli/routes/cloudforms', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    setupController: function setupController(controller, model) {\n      controller.set('model', model);\n      var stepNumberCloudForms = this.controllerFor('deployment').get('stepNumberCloudForms');\n      return this.controllerFor('deployment').set('currentStepNumber', stepNumberCloudForms);\n    } });\n\n});","define('fusor-ember-cli/routes/cloudforms/cfme-configuration', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    deactivate: function deactivate() {\n      return this.send('saveDeployment', null);\n    } });\n\n});","define('fusor-ember-cli/routes/cloudforms/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    beforeModel: function beforeModel() {\n      this.transitionTo('where-install');\n    }\n  });\n\n});","define('fusor-ember-cli/routes/configure-environment', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    model: function model() {\n      return this.modelFor('deployment').get('lifecycle_environment');\n    },\n\n    setupController: function setupController(controller, model) {\n      controller.set('model', model);\n      var organization = this.modelFor('deployment').get('organization');\n      var lifecycleEnvironments = this.store.find('lifecycle-environment', { organization_id: organization.get('id') });\n      lifecycleEnvironments.then(function (results) {\n        controller.set('lifecycleEnvironments', results);\n        // nullify environment if organization has no environments\n        if (results.get('length') === 0) {\n          return controller.set('selectedEnvironment', null);\n          // default to Library if it is only env that exists\n        } else if (results.get('length') === 1) {\n          return controller.set('selectedEnvironment', results.get('firstObject'));\n        }\n      });\n    },\n\n    deactivate: function deactivate() {\n      return this.send('saveDeployment', null);\n    }\n\n  });\n\n});","define('fusor-ember-cli/routes/configure-organization', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    model: function model() {\n      return this.modelFor('deployment').get('organization');\n    },\n\n    setupController: function setupController(controller, model) {\n      controller.set('model', model);\n      controller.set('showAlertMessage', false);\n      var organizations = this.store.find('organization');\n      controller.set('organizations', organizations);\n    },\n\n    deactivate: function deactivate() {\n      return this.send('saveDeployment', null);\n    }\n\n  });\n\n});","define('fusor-ember-cli/routes/deployment-new', ['exports', 'ember', 'fusor-ember-cli/mixins/deployment-route-mixin'], function (exports, Ember, DeploymentRouteMixin) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend(DeploymentRouteMixin['default'], {\n\n    model: function model() {\n      return this.store.createRecord('deployment');\n    },\n\n    setupController: function setupController(controller, model) {\n      controller.set('model', model);\n      controller.set('satelliteTabRouteName', 'deployment-new.satellite.index');\n      controller.set('organizationTabRouteName', 'deployment-new.satellite.configure-organization');\n      controller.set('lifecycleEnvironmentTabRouteName', 'deployment-new.satellite.configure-environment');\n    },\n\n    // rollback if new deployment not saved\n    // TODO modal confirm/cancel\n    deactivate: function deactivate() {\n      var deployment = this.modelFor('deployment-new');\n      if (deployment.get('isNew')) {\n        return deployment.rollback();\n      }\n    }\n\n  });\n\n});","define('fusor-ember-cli/routes/deployment-new/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    // if user manually hits this route (deployments/news), then redirecto to deployments/news/start\n    beforeModel: function beforeModel() {\n      return this.transitionTo('deployment-new.start');\n    } });\n\n});","define('fusor-ember-cli/routes/deployment-new/satellite', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('fusor-ember-cli/routes/deployment-new/satellite/configure-environment', ['exports', 'ember', 'fusor-ember-cli/mixins/deployment-new-satellite-route-mixin'], function (exports, Ember, DeploymentNewSatelliteRouteMixin) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend(DeploymentNewSatelliteRouteMixin['default'], {\n\n    model: function model() {\n      return this.modelFor('deployment-new').get('lifecycle_environment');\n    },\n\n    setupController: function setupController(controller, model) {\n      controller.set('model', model);\n      var organization = this.modelFor('deployment-new').get('organization');\n      var lifecycleEnvironments = this.store.find('lifecycle-environment', { organization_id: organization.get('id') });\n      lifecycleEnvironments.then(function (results) {\n        controller.set('lifecycleEnvironments', results);\n        // nullify environment if organization has no environments\n        if (results.get('length') === 0) {\n          return controller.set('selectedEnvironment', null);\n          // default to Library if it is only env that exists\n        } else if (results.get('length') === 1) {\n          return controller.set('selectedEnvironment', results.get('firstObject'));\n        }\n      });\n    } });\n\n});","define('fusor-ember-cli/routes/deployment-new/satellite/configure-organization', ['exports', 'ember', 'fusor-ember-cli/mixins/deployment-new-satellite-route-mixin'], function (exports, Ember, DeploymentNewSatelliteRouteMixin) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend(DeploymentNewSatelliteRouteMixin['default'], {\n\n    model: function model() {\n      return this.modelFor('deployment-new').get('organization');\n    },\n\n    setupController: function setupController(controller, model) {\n      controller.set('model', model);\n      controller.set('showAlertMessage', false);\n      this.store.find('organization').then(function (results) {\n        controller.set('organizations', results);\n        if (results.get('length') === 1) {\n          var defaultOrg = results.get('firstObject');\n          controller.set('organization', defaultOrg);\n          controller.set('selectedOrganization', defaultOrg);\n        }\n      });\n    } });\n\n});","define('fusor-ember-cli/routes/deployment-new/satellite/index', ['exports', 'ember', 'fusor-ember-cli/mixins/deployment-new-satellite-route-mixin'], function (exports, Ember, DeploymentNewSatelliteRouteMixin) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend(DeploymentNewSatelliteRouteMixin['default'], {});\n\n});","define('fusor-ember-cli/routes/deployment-new/start', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    setupController: function setupController(controller, model) {\n      controller.set('model', model);\n      controller.set('satelliteTabRouteName', 'deployment-new.satellite.index');\n      controller.set('deploy_rhev', true);\n    },\n\n    activate: function activate() {\n      this.controllerFor('deployment-new').set('isHideWizard', true);\n    },\n\n    deactivate: function deactivate() {\n      this.controllerFor('deployment-new').set('isHideWizard', false);\n    } });\n\n});","define('fusor-ember-cli/routes/deployment', ['exports', 'ember', 'fusor-ember-cli/mixins/deployment-route-mixin'], function (exports, Ember, DeploymentRouteMixin) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend(DeploymentRouteMixin['default'], {\n\n    model: function model(params) {\n      return this.store.find('deployment', params.deployment_id);\n    },\n\n    setupController: function setupController(controller, model) {\n      controller.set('model', model);\n      controller.set('satelliteTabRouteName', 'satellite.index');\n      controller.set('organizationTabRouteName', 'configure-organization');\n      controller.set('lifecycleEnvironmentTabRouteName', 'configure-environment');\n      if (Ember['default'].isBlank(model.get('lifecycle_environment_id'))) {\n        controller.set('useDefaultOrgViewForEnv', true);\n      }\n    },\n\n    actions: {\n      installDeployment: function installDeployment(options) {\n        var self = this;\n        var deployment = this.controllerFor('deployment');\n        var token = $('meta[name=\"csrf-token\"]').attr('content');\n\n        // change button text to \"Deploying ...\" and disable it\n        this.controllerFor('review.installation').set('buttonDeployTitle', 'Deploying ...');\n        this.controllerFor('review.installation').set('buttonDeployDisabled', true);\n\n        return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n          Ember['default'].$.ajax({\n            url: '/fusor/api/v21/deployments/' + deployment.get('id') + '/deploy',\n            type: 'PUT',\n            data: JSON.stringify({ 'skip_content': deployment.get('skipContent') }),\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'X-CSRF-Token': token,\n              'Authorization': 'Basic ' + self.get('session.basicAuthToken')\n            },\n            success: function success(response) {\n              resolve(response);\n              var uuid = response.id;\n              var deployment = self.modelFor('deployment');\n              deployment.set('foreman_task_uuid', uuid);\n              deployment.save().then(function () {\n                return self.transitionTo('review.progress.overview');\n              }, function () {\n                self.controllerFor('review.installation').set('errorMsg', 'Error is saving UUID of deployment task.');\n                self.controllerFor('review.installation').set('showErrorMessage', true);\n                self.controllerFor('review.installation').set('buttonDeployTitle', 'Deploy');\n                self.controllerFor('review.installation').set('buttonDeployDisabled', false);\n              });\n            },\n\n            error: function error(response) {\n              console.log(response);\n              var errorMsg = response.responseJSON.displayMessage;\n              self.controllerFor('review.installation').set('errorMsg', errorMsg);\n              self.controllerFor('review.installation').set('showErrorMessage', true);\n              self.controllerFor('review.installation').set('buttonDeployTitle', 'Deploy');\n              self.controllerFor('review.installation').set('buttonDeployDisabled', false);\n              reject(response);\n            }\n          });\n        });\n      },\n\n      saveAndCancelDeployment: function saveAndCancelDeployment() {\n        return this.send('saveDeployment', 'deployments');\n      },\n\n      cancelAndDeleteDeployment: function cancelAndDeleteDeployment() {\n        var deployment = this.get('controller.model');\n        var self = this;\n        deployment.destroyRecord().then(function () {\n          return self.transitionTo('deployments');\n        });\n      },\n\n      loginCredentials: function loginCredentials(options) {\n        var self = this;\n        var deployment = this.controllerFor('deployment');\n        var token = $('meta[name=\"csrf-token\"]').attr('content');\n\n        // change button text to \"Deploying ...\" and disable it\n        this.controllerFor('subscriptions.credentials').set('buttonLoginTitle', 'Logging in ...');\n        this.controllerFor('subscriptions.credentials').set('disableCredentialsNext', true);\n\n        return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n          Ember['default'].$.ajax({\n            url: '/fusor/api/v21/deployments/' + deployment.get('id'),\n            type: 'GET',\n            //data: JSON.stringify({'skip_content': deployment.get('skipContent') }),\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'X-CSRF-Token': token,\n              'Authorization': 'Basic ' + self.get('session.basicAuthToken')\n            },\n            success: function success(response) {\n              resolve(response);\n              //var uuid = response.id;\n              var deployment = self.modelFor('deployment');\n              // deployment.set('foreman_task_uuid', uuid);\n              // deployment.save().then(function () {\n              //   return self.transitionTo('review.progress.overview');\n              // }, function () {\n              self.controllerFor('subscriptions.credentials').set('showErrorMessage', false);\n              self.controllerFor('subscriptions.credentials').set('buttonLoginTitle', 'Logged In');\n              self.controllerFor('subscriptions.credentials').set('buttonDeployDisabled', true);\n              self.transitionTo('subscriptions.management-application');\n              //})\n            },\n\n            error: function error(response) {\n              console.log(response);\n              var errorMsg = response.responseJSON.displayMessage;\n              self.controllerFor('subscriptions.credentials').set('errorMsg', errorMsg);\n              self.controllerFor('subscriptions.credentials').set('showErrorMessage', true);\n              self.controllerFor('subscriptions.credentials').set('buttonDeployTitle', 'Deploy');\n              self.controllerFor('subscriptions.credentials').set('buttonDeployDisabled', false);\n              reject(response);\n            }\n          });\n        });\n      } }\n\n  });\n\n});","define('fusor-ember-cli/routes/deployment/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    afterModel: function afterModel() {\n      this.transitionTo('satellite');\n    }\n  });\n\n});","define('fusor-ember-cli/routes/deployment/start', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    setupController: function setupController(controller, model) {\n      controller.set('model', model);\n      controller.set('satelliteTabRouteName', 'satellite.index');\n    },\n\n    activate: function activate() {\n      this.controllerFor('deployment').set('isHideWizard', true);\n    },\n\n    deactivate: function deactivate() {\n      this.controllerFor('deployment').set('isHideWizard', false);\n    }\n\n  });\n\n});","define('fusor-ember-cli/routes/deployments', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model() {\n      return this.store.find('deployment');\n    }\n  });\n\n});","define('fusor-ember-cli/routes/discovered-host', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('fusor-ember-cli/routes/discovered-hosts', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('fusor-ember-cli/routes/engine', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    beforeModel: function beforeModel() {\n      this.transitionTo('engine.discovered-host');\n    }\n  });\n\n});","define('fusor-ember-cli/routes/engine/discovered-host', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model() {\n      return this.modelFor('deployment').get('discovered_host');\n    },\n\n    setupController: function setupController(controller, model) {\n      controller.set('model', model);\n      controller.set('allDiscoveredHosts', this.store.find('discovered-host'));\n      controller.set('selectedHypervisors', this.modelFor('deployment').get('discovered_hosts'));\n    },\n\n    deactivate: function deactivate() {\n      return this.send('saveDeployment', null);\n    } });\n\n});","define('fusor-ember-cli/routes/engine/existing-host', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model() {\n      return this.store.find('host', { type: 'Host::Managed' });\n    }\n  });\n\n});","define('fusor-ember-cli/routes/engine/hypervisor', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('fusor-ember-cli/routes/engine/new-host', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    setupController: function setupController(controller, model) {\n      controller.set('model', model);\n      controller.set('organizations', this.store.find('organization'));\n      controller.set('locations', this.store.find('location'));\n      controller.set('environments', this.store.find('environment'));\n      controller.set('hostgroups', this.store.find('hostgroup'));\n    },\n\n    activate: function activate() {\n      this.controllerFor('side-menu').set('etherpadName', '48'); //route-engine-new-host\n    },\n\n    deactivate: function deactivate() {\n      this.controllerFor('side-menu').set('etherpadName', '');\n    }\n  });\n\n});","define('fusor-ember-cli/routes/hostgroup', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model(params) {\n      return this.store.find('hostgroup', params.hostgroup_id);\n    },\n    activate: function activate() {\n      console.log('entered hostgroup route');\n      this.controllerFor('hostgroups').set('onShowPage', true);\n    },\n\n    deactivate: function deactivate() {\n      console.log('left hostgroup route');\n      this.controllerFor('hostgroups').set('onShowPage', false);\n    },\n\n    setupController: function setupController(controller, model) {\n      controller.set('model', model);\n      // TODO - how to make parent_id dynamic\n      controller.set('parent_hostgroup', this.store.find('hostgroup', 1));\n    } });\n\n});","define('fusor-ember-cli/routes/hostgroup/edit', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('fusor-ember-cli/routes/hostgroups', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model() {\n      return this.store.find('hostgroup');\n    }\n  });\n\n});","define('fusor-ember-cli/routes/hypervisor', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    beforeModel: function beforeModel() {\n      this.transitionTo('hypervisor.discovered-host');\n    }\n  });\n\n});","define('fusor-ember-cli/routes/hypervisor/discovered-host', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model() {\n      return this.modelFor('deployment').get('discovered_hosts');\n    },\n\n    setupController: function setupController(controller, model) {\n      controller.set('model', model);\n      controller.set('allDiscoveredHosts', this.store.find('discovered-host'));\n    },\n\n    deactivate: function deactivate() {\n      var model = this.modelFor('deployment');\n      return this.send('saveHyperVisors', null);\n    },\n\n    actions: {\n      saveHyperVisors: function saveHyperVisors(redirectPath) {\n        var self = this;\n        var deployment = this.modelFor('deployment');\n        var hypervisorModelIds = this.controllerFor('hypervisor/discovered-host').get('hypervisorModelIds');\n        var token = $('meta[name=\"csrf-token\"]').attr('content');\n\n        return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n          Ember['default'].$.ajax({\n            url: '/fusor/api/v21/deployments/' + deployment.get('id'),\n            type: 'PUT',\n            data: JSON.stringify({ 'deployment': { 'discovered_host_ids': hypervisorModelIds } }),\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'X-CSRF-Token': token,\n              'Authorization': 'Basic ' + self.get('session.basicAuthToken')\n            },\n            success: function success(response) {\n              resolve(response);\n              if (redirectPath) {\n                self.transitionTo('rhev-options');\n              }\n            },\n\n            error: function error(response) {\n              reject(response);\n            }\n          });\n        });\n      }\n    }\n\n  });\n\n});","define('fusor-ember-cli/routes/hypervisor/existing-host', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model() {\n      return this.store.find('host', { type: 'Host::Managed' });\n    }\n  });\n\n});","define('fusor-ember-cli/routes/hypervisor/new-host', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    setupController: function setupController(controller, model) {\n      controller.set('model', model);\n      controller.set('organizations', this.store.find('organization'));\n      controller.set('locations', this.store.find('location'));\n      controller.set('environments', this.store.find('environment'));\n      controller.set('hostgroups', this.store.find('hostgroup'));\n    }\n  });\n\n});","define('fusor-ember-cli/routes/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    beforeModel: function beforeModel() {\n      return this.transitionTo('deployment-new');\n    }\n\n  });\n\n});","define('fusor-ember-cli/routes/loggedin', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('fusor-ember-cli/routes/login', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    beforeModel: function beforeModel(transition) {\n      if (this.controllerFor('application').get('deployAsPlugin') || this.get('session.isAuthenticated')) {\n        return this.transitionTo('deployment-new.start');\n      };\n    },\n\n    setupController: function setupController(controller, model) {\n      controller.set('model', model);\n      controller.set('errorMessage', null);\n    }\n\n  });\n\n});","define('fusor-ember-cli/routes/networking', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    activate: function activate() {\n      this.controllerFor('side-menu').set('etherpadName', '51'); //route-rhev-networking\n    },\n\n    deactivate: function deactivate() {\n      this.controllerFor('side-menu').set('etherpadName', '');\n    }\n  });\n\n});","define('fusor-ember-cli/routes/new-environment', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('fusor-ember-cli/routes/new-node-registration', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    setupController: function setupController(controller, model) {\n      controller.set('model', model);\n      controller.set('fields', {});\n    }\n  });\n\n});","define('fusor-ember-cli/routes/new-organization', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    setupController: function setupController(controller, model) {\n      controller.set('model', model);\n      controller.set('fields', {});\n    }\n  });\n\n});","define('fusor-ember-cli/routes/openstack', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    setupController: function setupController(controller, model) {\n      controller.set('model', model);\n      var stepNumberOpenstack = this.controllerFor('deployment').get('stepNumberOpenstack');\n      return this.controllerFor('deployment').set('currentStepNumber', stepNumberOpenstack);\n    } });\n\n});","define('fusor-ember-cli/routes/openstack/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    beforeModel: function beforeModel() {\n      this.transitionTo('register-nodes');\n    }\n  });\n\n});","define('fusor-ember-cli/routes/products', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model() {\n      return this.store.find('product');\n    }\n\n  });\n\n});","define('fusor-ember-cli/routes/register-nodes', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    myModel: {\n      nodeProfiles: []\n    },\n\n    model: function model() {\n      return this.myModel;\n    },\n\n    setupController: function setupController(controller, model) {\n      controller.set('model', model);\n      controller.set('showAlertMessage', false);\n    },\n\n    deactivate: function deactivate() {\n      return this.send('saveDeployment', null);\n    }\n\n  });\n\n});","define('fusor-ember-cli/routes/review', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    setupController: function setupController(controller, model) {\n      controller.set('model', model);\n      var stepNumberReview = this.controllerFor('deployment').get('stepNumberReview');\n      return this.controllerFor('deployment').set('currentStepNumber', stepNumberReview);\n    } });\n\n});","define('fusor-ember-cli/routes/review/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    beforeModel: function beforeModel() {\n      this.transitionTo('review.installation');\n    }\n  });\n\n});","define('fusor-ember-cli/routes/review/installation', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model() {\n      return this.modelFor('deployment');\n    }\n\n  });\n\n});","define('fusor-ember-cli/routes/review/progress', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('fusor-ember-cli/routes/review/progress/details', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model(params) {\n      //return Ember.$.getJSON('/api/v21/foreman_tasks');\n      //var uud = this.modelFor()\n      // return this.store.find('foreman-task', {uuid: 'db25a76f-e344-48ba-ac77-f29303586dbe'});\n      var foreman_task_uuid = this.modelFor('deployment').get('foreman_task_uuid');\n      return this.store.find('foreman-task', foreman_task_uuid);\n    }\n  });\n\n});","define('fusor-ember-cli/routes/review/progress/details/task', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model(params) {\n      return this.store.find('foreman-task', params.task_id);\n    }\n  });\n\n});","define('fusor-ember-cli/routes/review/progress/details/task/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    setupController: function setupController(controller, model) {\n      controller.startPolling();\n    },\n\n    deactivate: function deactivate() {\n      this.get('controller').stopPolling();\n    }\n\n  });\n\n});","define('fusor-ember-cli/routes/review/progress/details/task/running-steps', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('fusor-ember-cli/routes/review/progress/details/task/task-errors', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('fusor-ember-cli/routes/review/progress/details/task/task-locks', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('fusor-ember-cli/routes/review/progress/details/task/task-raw', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('fusor-ember-cli/routes/review/progress/overview', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model() {\n      var deployment = this.modelFor('deployment');\n      return this.store.find('foreman-task', deployment.get('foreman_task_uuid'));\n    },\n\n    setupController: function setupController(controller, model) {\n      controller.set('model', model);\n      controller.startPolling();\n    },\n\n    deactivate: function deactivate() {\n      this.get('controller').stopPolling();\n    }\n\n  });\n\n});","define('fusor-ember-cli/routes/rhci', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('fusor-ember-cli/routes/rhev-options', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    deactivate: function deactivate() {\n      return this.send('saveDeployment', null);\n    } });\n\n});","define('fusor-ember-cli/routes/rhev-setup', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    deactivate: function deactivate() {\n      return this.send('saveDeployment', null);\n    }\n  });\n\n});","define('fusor-ember-cli/routes/rhev', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    setupController: function setupController(controller, model) {\n      controller.set('model', model);\n      return this.controllerFor('deployment').set('currentStepNumber', 2);\n    } });\n\n});","define('fusor-ember-cli/routes/rhev/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    beforeModel: function beforeModel() {\n      this.transitionTo('rhev-setup');\n    }\n  });\n\n});","define('fusor-ember-cli/routes/satellite', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    setupController: function setupController(controller, model) {\n      controller.set('model', model);\n      return this.controllerFor('deployment').set('currentStepNumber', 1);\n    },\n\n    deactivate: function deactivate() {\n      var deployment = this.modelFor('deployment');\n      deployment.save().then(function () {\n        return console.log('saved deployment successfully');\n      });\n    } });\n\n});","define('fusor-ember-cli/routes/satellite/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    deactivate: function deactivate() {\n      return this.send('saveDeployment', null);\n    }\n\n  });\n\n});","define('fusor-ember-cli/routes/setpassword', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    beforeModel: function beforeModel() {\n      if (this.controllerFor('application').get('isPasswordSet')) {\n        this.transitionTo('deployment-new.start');\n      }\n    },\n    actions: {\n      updatePassword: function updatePassword() {\n        this.controllerFor('application').set('isPasswordSet', true);\n        this.transitionTo('deployment-new.start');\n      }\n    }\n\n  });\n\n});","define('fusor-ember-cli/routes/single-deployment', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model(params) {\n      return this.store.find('deployment', params.deployment_id);\n    }\n  });\n\n});","define('fusor-ember-cli/routes/storage', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    deactivate: function deactivate() {\n      return this.send('saveDeployment', null);\n    },\n\n    setupController: function setupController(controller, model) {\n      controller.set('model', model);\n      controller.set('rhev_storage_type', 'NFS');\n      controller.set('rhev_gluster_ssh_port', 22);\n    } });\n\n});","define('fusor-ember-cli/routes/subscriptions', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    model: function model() {\n      var self = this;\n      return this.store.find('session-portal').then(function (results) {\n        if (Ember['default'].isBlank(results)) {\n          return self.store.createRecord('session-portal');\n        } else {\n          return results.get('firstObject');\n        }\n      });\n    },\n\n    setupController: function setupController(controller, model) {\n      controller.set('model', model);\n      var stepNumberSubscriptions = this.controllerFor('deployment').get('stepNumberSubscriptions');\n      return this.controllerFor('deployment').set('currentStepNumber', stepNumberSubscriptions);\n    },\n\n    actions: {\n      error: function error(reason, transition) {\n        console.log(reason);\n        alert(reason.statusText);\n      }\n    }\n  });\n\n});","define('fusor-ember-cli/routes/subscriptions/credentials', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    setupController: function setupController(controller, model) {\n      controller.set('model', model);\n\n      var sessionPortal = this.modelFor('subscriptions');\n      var upstream_consumer_uuid = this.modelFor('deployment').get('upstream_consumer_uuid');\n      // check if org has upstream UUID using Katello V2 API\n      var orgID = this.modelFor('deployment').get('organization.id');\n      var url = '/katello/api/v2/organizations/' + orgID;\n      $.getJSON(url).then(function (results) {\n        if (Ember['default'].isPresent(results.owner_details.upstreamConsumer)) {\n          controller.set('organizationUpstreamConsumerUUID', results.owner_details.upstreamConsumer.uuid);\n          controller.set('organizationUpstreamConsumerName', results.owner_details.upstreamConsumer.name);\n        } else {\n          controller.set('organizationUpstreamConsumerUUID', null);\n          controller.set('organizationUpstreamConsumerName', null);\n        }\n      });\n    },\n\n    actions: {\n      error: function error(reason, transition) {\n        // bubble up this error event:\n        return true;\n      },\n\n      loginPortal: function loginPortal() {\n        var self = this;\n        var controller = this.controllerFor('subscriptions/credentials');\n        var identification = controller.get('identification');\n        var password = controller.get('password');\n        var token = $('meta[name=\"csrf-token\"]').attr('content');\n        controller.set('nextButtonTitle', 'Logging in ...');\n        controller.set('disableCredentialsNext', true);\n        return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n          Ember['default'].$.ajax({\n            url: '/customer_portal/login/',\n            type: 'POST',\n            data: JSON.stringify({ username: identification, password: password }),\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'X-CSRF-Token': token },\n            success: function success(response) {\n              //show always be {} empty successful 200 response\n              self.send('saveCredentials');\n            },\n            error: function error(response) {\n              console.log('error on loginPortal');\n              controller.set('nextButtonTitle', 'Next');\n              controller.set('disableCredentialsNext', false);\n              return self.send('error');\n            }\n          });\n        });\n      },\n\n      logoutPortal: function logoutPortal() {\n        var self = this;\n        var controller = this.controllerFor('subscriptions/credentials');\n        var token = $('meta[name=\"csrf-token\"]').attr('content');\n\n        return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n          Ember['default'].$.ajax({\n            url: '/customer_portal/logout/',\n            type: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'X-CSRF-Token': token },\n            success: function success(response) {\n              //show always be {} empty successful 200 response\n              self.modelFor('subscriptions').setProperties({ 'isAuthenticated': false,\n                'identification': null,\n                'ownerKey': null,\n                'consumerUUID': null });\n              self.modelFor('subscriptions').save();\n            },\n            error: function error(response) {\n              console.log('error on loginPortal');\n              return self.send('error');\n            }\n          });\n        });\n      },\n      saveCredentials: function saveCredentials() {\n        var self = this;\n        var controller = this.controllerFor('subscriptions/credentials');\n        var identification = controller.get('identification');\n        var sessionPortal = this.modelFor('subscriptions');\n        if (sessionPortal) {\n          sessionPortal.set('identification', identification);\n        } else {\n          var sessionPortal = self.store.createRecord('session-portal', { identification: identification });\n        }\n        sessionPortal.save().then(function (result) {\n          console.log('saved session-portal');\n          controller.set('showErrorMessage', false);\n          return self.send('authenticatePortal');\n        }, function (response) {\n          console.log('error saving session-portal');\n          controller.set('nextButtonTitle', 'Next');\n          controller.set('disableCredentialsNext', false);\n          return self.send('error');\n        });\n      },\n\n      authenticatePortal: function authenticatePortal() {\n\n        var controller = this.controllerFor('subscriptions/credentials');\n        var identification = controller.get('identification');\n        var password = controller.get('password');\n        var token = $('meta[name=\"csrf-token\"]').attr('content');\n        var self = this;\n        var url = '/customer_portal/users/' + identification + '/owners';\n\n        return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n          Ember['default'].$.ajax({\n            url: url,\n            type: 'GET',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'X-CSRF-Token': token },\n\n            success: function success(response) {\n              var ownerKey = response[0]['key'];\n              console.log('owner key is ' + ownerKey);\n              var sessionPortal = self.modelFor('subscriptions');\n              sessionPortal.set('ownerKey', ownerKey);\n              sessionPortal.set('isAuthenticated', true);\n              sessionPortal.save().then(function (result) {\n                console.log('saved ownerKey in session-portal');\n                controller.set('nextButtonTitle', 'Next');\n                controller.set('disableCredentialsNext', false);\n                return self.transitionTo('subscriptions.management-application');\n              }, function (response) {\n                controller.set('nextButtonTitle', 'Next');\n                controller.set('disableCredentialsNext', false);\n                console.log('error saving ownerKey session-portal');\n              });\n            },\n\n            error: function error(response) {\n              console.log('error on authenticatePortal');\n              controller.set('nextButtonTitle', 'Next');\n              controller.set('disableCredentialsNext', false);\n              controller.setProperties({ 'showErrorMessage': true,\n                'errorMsg': 'Your username or password is incorrect. Please try again.'\n              });\n            }\n          });\n        });\n      },\n\n      redirectToManagementApplication: function redirectToManagementApplication() {\n        return this.transitionTo('subscriptions.management-application');\n      }\n\n    }\n\n  });\n\n});","define('fusor-ember-cli/routes/subscriptions/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    beforeModel: function beforeModel() {\n      this.transitionTo('subscriptions.credentials');\n    }\n  });\n\n});","define('fusor-ember-cli/routes/subscriptions/management-application', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    model: function model() {\n      var self = this;\n      var sessionPortal = this.modelFor('subscriptions');\n      var ownerKey = sessionPortal.get('ownerKey');\n      // Use owner key to get consumers (subscription application manangers)\n      // GET /customer_portal/owners/#{OWNER['key']}/consumers?type=satellite\n      var url = '/customer_portal/owners/' + ownerKey + '/consumers?type=satellite';\n\n      return $.getJSON(url).then(function (results) {\n        sessionPortal.set('isAuthenticated', true); // in case go to this route from URL\n        sessionPortal.save();\n        return results;\n      }, function () {\n        sessionPortal.set('isAuthenticated', false);\n        sessionPortal.save().then(function () {\n          self.controllerFor('subscriptions.credentials').setProperties({\n            'showErrorMessage': true,\n            'errorMsg': 'You are not currently logged in. Please log in below.'\n          });\n          return self.transitionTo('subscriptions.credentials');\n        });\n      });\n    },\n\n    setupController: function setupController(controller, model) {\n      controller.set('model', model);\n\n      var sessionPortal = this.modelFor('subscriptions');\n      var upstream_consumer_uuid = this.modelFor('deployment').get('upstream_consumer_uuid');\n      if (upstream_consumer_uuid) {\n        sessionPortal.set('consumerUUID', upstream_consumer_uuid);\n        controller.set('sessionPortal', sessionPortal);\n      } else {\n        // check if org has upstream UUID using Katello V2 API\n        var orgID = this.modelFor('deployment').get('organization.id');\n        var url = '/katello/api/v2/organizations/' + orgID;\n        $.getJSON(url).then(function (results) {\n          sessionPortal.set('consumerUUID', results.owner_details.upstreamConsumer.uuid);\n          sessionPortal.save();\n          controller.set('sessionPortal', sessionPortal);\n          controller.set('upstream_consumer_uuid', results.owner_details.upstreamConsumer.uuid);\n          controller.set('upstream_consumer_name', results.owner_details.upstreamConsumer.name);\n        });\n      }\n    },\n\n    deactivate: function deactivate() {\n      return this.send('saveDeployment', null);\n    },\n\n    actions: {\n      error: function error(reason, transition) {\n        // bubble up this error event:\n        return true;\n      }\n    }\n\n  });\n\n});","define('fusor-ember-cli/routes/subscriptions/select-subscriptions', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    model: function model() {\n      // Use UUID from consumer (management application) to get subscriptions\n      // GET /customer_portal/consumers/#{CONSUMER['uuid']}/entitlements\n      var self = this;\n      var consumerUUID = this.modelFor('subscriptions').get('consumerUUID');\n      var urlEntitlements = '/customer_portal/consumers/' + consumerUUID + '/entitlements';\n      var urlAllPools = '/customer_portal/pools?consumer=' + consumerUUID + '&listall=false';\n      var entitlementsResults = $.getJSON(urlEntitlements);\n      var allPoolsResults = $.getJSON(urlAllPools);\n\n      return Ember['default'].RSVP.Promise.all([entitlementsResults, allPoolsResults]).then(function (results) {\n        console.log(results[0]);\n        console.log(results[1]);\n        self.modelFor('subscriptions').set('isAuthenticated', true); // in case go to this route from URL\n        results[1].forEach(function (item) {\n          // default to 0 of\n          item['qtyAvailable'] = '0 of ' + item.quantity;\n          item['qtyAttached'] = 0;\n          item['qtyToAttach'] = 1; //default TODO calculate this based on deployment\n\n          // overwrite availableQty if row exists in model\n          results[0].forEach(function (entitlementItem) {\n            if (entitlementItem.pool.id === item.id) {\n              item['qtyAttached'] = item['qtyAttached'] + entitlementItem.quantity;\n              item['qtyAvailable'] = item['qtyAttached'] + ' of ' + item.quantity;\n            }\n          });\n        });\n        return Ember['default'].A(results[1]);\n      }, function () {\n        self.modelFor('subscriptions').set('isAuthenticated');\n        self.modelFor('subscriptions').save().then(function () {\n          self.controllerFor('subscriptions.credentials').setProperties({\n            'showErrorMessage': true,\n            'errorMsg': 'You are not currently logged in. Please log in below.'\n          });\n          return self.transitionTo('subscriptions.credentials');\n        });\n      });\n    },\n\n    actions: {\n\n      attachSubscriptions: function attachSubscriptions() {\n        var token = $('meta[name=\"csrf-token\"]').attr('content');\n        var sessionPortal = this.modelFor('subscriptions');\n        var ownerKey = sessionPortal.get('ownerKey');\n        var consumerUUID = sessionPortal.get('consumerUUID');\n        var self = this;\n        var controller = this.controllerFor('subscriptions/select-subscriptions');\n        var subscriptions = this.controllerFor('subscriptions/select-subscriptions').get('model');\n\n        subscriptions.forEach(function (item) {\n          // default to 0 of\n          controller.set('attachingInProgress', true);\n          controller.set('showAttachedSuccessMessage', false);\n\n          console.log(item);\n          console.log('qtyToAttach is');\n          console.log(item.qtyToAttach);\n          console.log('pool ID is');\n          console.log(item.id);\n          console.log('isSelectedSubscription is');\n          console.log(item.isSelectedSubscription);\n\n          if (item.isSelectedSubscription) {\n\n            // POST /customer_portal/consumers/#{CONSUMER['uuid']}/entitlements?pool=#{POOL['id']}&quantity=#{QUANTITY}\n            var url = '/customer_portal/consumers/' + consumerUUID + '/entitlements?pool=' + item.id + '&quantity=' + item.qtyToAttach;\n\n            return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n              Ember['default'].$.ajax({\n                url: url,\n                type: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json',\n                  'X-CSRF-Token': token },\n\n                success: function success(response) {\n                  controller.set('attachingInProgress', false);\n                  controller.set('showAttachedSuccessMessage', true);\n                  console.log('successfully attached ' + item.qtyToAttach + ' subscription for pool ' + item.id);\n                },\n\n                error: function error(response) {\n                  console.log('error on attachSubscriptions');\n                  return self.send('error');\n                }\n              });\n            });\n          }\n        });\n      },\n\n      error: function error(reason, transition) {\n        console.log(reason);\n        //alert(reason.statusText);\n      } }\n\n  });\n\n});","define('fusor-ember-cli/routes/where-install', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n\n    setupController: function setupController(controller, model) {\n      controller.set('model', model);\n\n      var isRhev = this.controllerFor('deployment').get('isRhev');\n      var isOpenStack = this.controllerFor('deployment').get('isOpenStack');\n      if (isRhev && !isOpenStack) {\n        this.controllerFor('where-install').set('disableRHEV', false);\n        this.controllerFor('where-install').set('disableOpenStack', true);\n        return this.controllerFor('deployment').set('cfme_install_loc', 'RHEV');\n      } else if (!isRhev && isOpenStack) {\n        this.controllerFor('where-install').set('disableRHEV', true);\n        this.controllerFor('where-install').set('disableOpenStack', false);\n        return this.controllerFor('deployment').set('cfme_install_loc', 'OpenStack');\n      } else {\n        this.controllerFor('where-install').set('disableRHEV', false);\n        this.controllerFor('where-install').set('disableOpenStack', false);\n      }\n    },\n\n    deactivate: function deactivate() {\n      return this.send('saveDeployment', null);\n    } });\n\n});","define('fusor-ember-cli/serializers/foreman-task', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].RESTSerializer.extend({\n    attrs: {\n      humanized: { embedded: 'always' }\n    }\n  });\n\n});","define('fusor-ember-cli/serializers/puppetclass', ['exports', 'ember-data'], function (exports, DS) {\n\n   'use strict';\n\n   exports['default'] = DS['default'].RESTSerializer.extend({\n      extractArray: function extractArray(store, type, payload) {\n         // 'foreman-experimental-ui@model:setting:'\n         var wrapped_payload = {};\n         var model_name = type.toString().split(':')[1];\n         wrapped_payload[model_name] = $.map(payload['results'], function (v) {\n            return v;\n         });\n         return this._super(store, type, wrapped_payload);\n      } });\n\n});","define('fusor-ember-cli/services/validations', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var set = Ember['default'].set;\n\n  exports['default'] = Ember['default'].Object.extend({\n    init: function init() {\n      set(this, 'cache', {});\n    }\n  });\n\n});","define('fusor-ember-cli/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"partial\", [\"mainmenu\"], {});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, element = hooks.element, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [2]);\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(element0,1,1);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"isEmberCliMode\")], {}, child0, null);\n        element(env, element0, context, \"bind-attr\", [], {\"class\": \"isContainer:container:container-fluid\"});\n        content(env, morph1, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/application/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/assign-nodes', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"                  \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n              inline(env, morph0, context, \"deployment-role\", [], {\"role-type\": get(env, context, \"role.roleType\"), \"role-label\": get(env, context, \"role.roleLabel\"), \"role-assigned\": false, \"edit\": \"editRole\"});\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            block(env, morph0, context, \"draggable-object\", [], {\"content\": get(env, context, \"role\")}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"                  \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, inline = hooks.inline;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n              inline(env, morph0, context, \"deployment-role\", [], {\"role-type\": \"hidden\", \"role-assigned\": false});\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            block(env, morph0, context, \"draggable-object\", [], {\"content\": get(env, context, \"role\")}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"ul\");\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"            \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, concat = hooks.concat, attribute = hooks.attribute, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(element0,1,1);\n          var morph1 = dom.createMorphAt(element0,2,2);\n          var attrMorph0 = dom.createAttrMorph(element0, 'class');\n          attribute(env, attrMorph0, element0, \"class\", concat(env, [\"deployment-roles deployment-roles-unassigned deployment-roles-assignable \", get(env, context, \"droppableClass\")]));\n          block(env, morph0, context, \"each\", [get(env, context, \"availableRoles\")], {\"keyword\": \"role\"}, child0, null);\n          block(env, morph1, context, \"unless\", [get(env, context, \"noneAssigned\")], {}, child1, null);\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"row\");\n          var el2 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"col-md-7\");\n          var el3 = dom.createTextNode(\"\\n                  \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1]),1,1);\n          inline(env, morph0, context, \"node-profile\", [], {\"profile\": get(env, context, \"profile\"), \"nodeProfiles\": get(env, context, \"nodeProfiles\"), \"doAssign\": true, \"assignRole\": \"assignRole\", \"startDrag\": \"startDrag\", \"stopDrag\": \"stopDrag\", \"edit\": \"editRole\", \"removeRole\": \"removeRole\"});\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"              Back\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-12\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h2\");\n        var el4 = dom.createTextNode(\"Available Deployment Roles\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\" /col \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\" /row \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-12\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h2\");\n        var el4 = dom.createTextNode(\"Node Profiles\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-sm-6 col-md-5\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\" a network topology is planned for this space \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-9\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"pull-right\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"button\");\n        dom.setAttribute(el4,\"class\",\"btn btn-primary\");\n        var el5 = dom.createTextNode(\"\\n                Next\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, block = hooks.block, get = hooks.get, element = hooks.element;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element1 = dom.childAt(fragment, [7, 1, 1]);\n        var element2 = dom.childAt(element1, [3]);\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0, 1]),3,3);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [3, 1]),3,3);\n        var morph2 = dom.createMorphAt(element1,1,1);\n        block(env, morph0, context, \"draggable-object-target\", [], {\"action\": \"unassignRole\"}, child0, null);\n        block(env, morph1, context, \"each\", [get(env, context, \"nodeProfiles\")], {\"keyword\": \"profile\"}, child1, null);\n        block(env, morph2, context, \"link-to\", [\"register-nodes\"], {\"class\": \"btn btn-default\"}, child2, null);\n        element(env, element2, context, \"action\", [\"saveDeployment\", get(env, context, \"nextStepRouteName\")], {});\n        element(env, element2, context, \"bind-attr\", [], {\"disabled\": get(env, context, \"disableAssignNodesNext\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/cancel-deployment-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"            \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"span\");\n              dom.setAttribute(el1,\"aria-hidden\",\"true\");\n              var el2 = dom.createTextNode(\"×\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"span\");\n              dom.setAttribute(el1,\"class\",\"sr-only\");\n              var el2 = dom.createTextNode(\"Close\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"h4\");\n            dom.setAttribute(el1,\"class\",\"modal-title\");\n            var el2 = dom.createTextNode(\"Cancel RHCI Deployment - \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\" \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, block = hooks.block, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            var morph1 = dom.createMorphAt(dom.childAt(fragment, [2]),1,1);\n            dom.insertBoundary(fragment, 0);\n            block(env, morph0, context, \"em-modal-toggler\", [], {\"class\": \"close\"}, child0, null);\n            content(env, morph1, context, \"parentController.name\");\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        Are you sure that you want to cancel this deployment?\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      var child2 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"          No, Continue Working on This Deployment\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"button\");\n            dom.setAttribute(el1,\"type\",\"submit\");\n            dom.setAttribute(el1,\"class\",\"btn btn-default\");\n            var el2 = dom.createTextNode(\"\\n          Yes, Exit and Delete Deployment\\n        \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"button\");\n            dom.setAttribute(el1,\"type\",\"submit\");\n            dom.setAttribute(el1,\"class\",\"btn btn-default\");\n            var el2 = dom.createTextNode(\"\\n          Yes, Save Deployment and Exit\\n        \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, element = hooks.element, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [1]);\n            var element1 = dom.childAt(fragment, [3]);\n            var morph0 = dom.createMorphAt(fragment,5,5,contextualElement);\n            dom.insertBoundary(fragment, null);\n            element(env, element0, context, \"action\", [\"cancelAndDeleteDeployment\"], {});\n            element(env, element1, context, \"action\", [\"saveAndCancelDeployment\"], {});\n            block(env, morph0, context, \"em-modal-toggler\", [], {\"class\": \"btn btn-primary\"}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, block = hooks.block, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n          var morph2 = dom.createMorphAt(fragment,4,4,contextualElement);\n          var morph3 = dom.createMorphAt(fragment,6,6,contextualElement);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"em-modal-title\", [], {}, child0, null);\n          block(env, morph1, context, \"em-modal-body\", [], {}, child1, null);\n          block(env, morph2, context, \"em-modal-footer\", [], {}, child2, null);\n          content(env, morph3, context, \"isNew\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"em-modal\", [], {\"configName\": \"bs\", \"id\": \"cancelDeploymentModal\", \"close-if\": get(env, context, \"closeModal\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/cloudforms-storage-domain', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-12\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"br\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"form\");\n        dom.setAttribute(el3,\"class\",\"form form-horizontal\");\n        var el4 = dom.createTextNode(\"\\n\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0, 1, 3]),1,1);\n        inline(env, morph0, context, \"text-f\", [], {\"label\": \"NFS Share\", \"value\": get(env, context, \"nfsShare\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/cloudforms-vm', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-12\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"br\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"form\");\n        dom.setAttribute(el3,\"class\",\"form form-horizontal\");\n        var el4 = dom.createTextNode(\"\\n\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0, 1, 3]),1,1);\n        inline(env, morph0, context, \"text-f\", [], {\"label\": \"VM Name\", \"value\": get(env, context, \"vmName\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/cloudforms', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"A. Installation Location\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n          content(env, morph0, context, \"stepNumberCloudForms\");\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"B. Configuration\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n          content(env, morph0, context, \"stepNumberCloudForms\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"col-sm-8 col-md-9 col-lg-10 col-sm-push-4 col-md-push-3 col-lg-push-2\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"col-sm-4 col-md-3 col-lg-2 col-sm-pull-8 col-md-pull-9 col-lg-pull-10 sidebar-pf sidebar-pf-left\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"ul\");\n        dom.setAttribute(el2,\"class\",\"nav nav-pills nav-stacked\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [2, 1]);\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);\n        var morph1 = dom.createMorphAt(element0,1,1);\n        var morph2 = dom.createMorphAt(element0,2,2);\n        content(env, morph0, context, \"outlet\");\n        block(env, morph1, context, \"link-to\", [\"where-install\"], {\"tagName\": \"li\"}, child0, null);\n        block(env, morph2, context, \"link-to\", [\"cloudforms.cfme-configuration\"], {\"tagName\": \"li\"}, child1, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/cloudforms/cfme-configuration', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        inline(env, morph0, context, \"text-f\", [], {\"label\": \"CFME Root password\", \"type\": \"password\", \"value\": get(env, context, \"cfme_root_password\"), \"cssId\": \"cfme_root_password\", \"isRequired\": true});\n        inline(env, morph1, context, \"cancel-back-next\", [], {\"backRouteName\": \"where-install\", \"disableBack\": false, \"nextRouteName\": get(env, context, \"nextRouteNameAfterCFME\"), \"disableNext\": false});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/cloudforms/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/accordion-item', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          content(env, morph0, context, \"yield\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-12\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"i\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-md-offset-1\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, element = hooks.element, content = hooks.content, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0, 1]);\n        var element1 = dom.childAt(element0, [1]);\n        var element2 = dom.childAt(element1, [1]);\n        var morph0 = dom.createMorphAt(element1,3,3);\n        var morph1 = dom.createMorphAt(dom.childAt(element0, [3]),1,1);\n        element(env, element1, context, \"action\", [\"openItem\"], {});\n        element(env, element2, context, \"bind-attr\", [], {\"class\": \":fa :fa-play isOpen:fa-rotate-90\"});\n        content(env, morph0, context, \"name\");\n        block(env, morph1, context, \"if\", [get(env, context, \"isOpen\")], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/base-f', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"          \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"span\");\n          dom.setAttribute(el1,\"class\",\"errorForValidation\");\n          var el2 = dom.createTextNode(\"*\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"         \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          var el2 = dom.createTextNode(\"\\n           \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n         \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(element0,1,1);\n          element(env, element0, context, \"bind-attr\", [], {\"class\": \"unitsClassSize\"});\n          content(env, morph0, context, \"unitsLabel\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"clearfix\");\n        var el2 = dom.createTextNode(\"\\n   \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"form-group\");\n        var el3 = dom.createTextNode(\"\\n\\n      \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"label\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"        \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n      \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"span\");\n        dom.setAttribute(el3,\"class\",\"help-block\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n   \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, element = hooks.element, get = hooks.get, block = hooks.block, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element1 = dom.childAt(fragment, [0, 1]);\n        var element2 = dom.childAt(element1, [1]);\n        var element3 = dom.childAt(element1, [3]);\n        var morph0 = dom.createMorphAt(element2,1,1);\n        var morph1 = dom.createMorphAt(element2,3,3);\n        var morph2 = dom.createMorphAt(element3,1,1);\n        var morph3 = dom.createMorphAt(element1,5,5);\n        var morph4 = dom.createMorphAt(dom.childAt(element1, [7]),1,1);\n        element(env, element2, context, \"bind-attr\", [], {\"class\": \":control-label labelClassSize class\"});\n        block(env, morph0, context, \"if\", [get(env, context, \"isRequired\")], {}, child0, null);\n        content(env, morph1, context, \"label\");\n        element(env, element3, context, \"bind-attr\", [], {\"class\": \"inputClassSize\"});\n        content(env, morph2, context, \"yield\");\n        block(env, morph3, context, \"if\", [get(env, context, \"showUnits\")], {}, child1, null);\n        content(env, morph4, context, \"help-inline\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/button-f', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"title\");\n        content(env, morph1, context, \"yield\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/cancel-back-next', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      Cancel\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"i\");\n          dom.setAttribute(el1,\"class\",\"fa fa-angle-left\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" Back\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"          Next \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"i\");\n            dom.setAttribute(el1,\"class\",\"fa fa-angle-right\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"link-to\", [get(env, context, \"nextRouteName\")], {\"disabled\": get(env, context, \"disableNext\"), \"role\": \"button\", \"class\": \"btn btn-primary\"}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child3 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          content(env, morph0, context, \"yield\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"col-md-12 rhci-steps-buttons\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, block = hooks.block, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var morph0 = dom.createMorphAt(element0,1,1);\n        var morph1 = dom.createMorphAt(element0,2,2);\n        var morph2 = dom.createMorphAt(element0,3,3);\n        var morph3 = dom.createMorphAt(fragment,2,2,contextualElement);\n        block(env, morph0, context, \"em-modal-toggler\", [], {\"modal-id\": \"cancelDeploymentModal\", \"class\": \"btn btn-default\"}, child0, null);\n        block(env, morph1, context, \"link-to\", [get(env, context, \"backRouteName\")], {\"disabled\": get(env, context, \"disableBack\"), \"role\": \"button\", \"class\": \"btn btn-default\"}, child1, null);\n        block(env, morph2, context, \"if\", [get(env, context, \"nextRouteName\")], {}, child2, child3);\n        inline(env, morph3, context, \"partial\", [\"cancel-deployment-modal\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/deployment-role', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"                    \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"option\");\n              dom.setAttribute(el1,\"selected\",\"\");\n              var el2 = dom.createComment(\"\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, content = hooks.content;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n              content(env, morph0, context, \"option.label\");\n              return fragment;\n            }\n          };\n        }());\n        var child1 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"                    \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"option\");\n              var el2 = dom.createComment(\"\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, content = hooks.content;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n              content(env, morph0, context, \"option.label\");\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            block(env, morph0, context, \"if\", [get(env, context, \"option.selected\")], {}, child0, child1);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"select\");\n          dom.setAttribute(el1,\"class\",\"selectpicker\");\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, element = hooks.element, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(element0,1,1);\n          element(env, element0, context, \"action\", [\"assignNodes\", get(env, context, \"this\")], {\"on\": \"change\"});\n          block(env, morph0, context, \"each\", [get(env, context, \"availableOptions\")], {\"keyword\": \"option\"}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"li\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"deployment-role-label\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"a\");\n        dom.setAttribute(el2,\"class\",\"role-option delete\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"i\");\n        dom.setAttribute(el3,\"class\",\"fa fa-times\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"a\");\n        dom.setAttribute(el2,\"class\",\"role-option edit\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"i\");\n        dom.setAttribute(el3,\"class\",\"fa fa-pencil\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, concat = hooks.concat, attribute = hooks.attribute, content = hooks.content, block = hooks.block, element = hooks.element;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element1 = dom.childAt(fragment, [0]);\n        var element2 = dom.childAt(element1, [5, 1]);\n        var element3 = dom.childAt(element1, [7, 1]);\n        var attrMorph0 = dom.createAttrMorph(element1, 'class');\n        var morph0 = dom.createMorphAt(dom.childAt(element1, [1]),1,1);\n        var morph1 = dom.createMorphAt(element1,3,3);\n        attribute(env, attrMorph0, element1, \"class\", concat(env, [\"role role-\", get(env, context, \"role-type\"), \" \", get(env, context, \"assignedClass\")]));\n        content(env, morph0, context, \"roleLabel\");\n        block(env, morph1, context, \"if\", [get(env, context, \"role-assigned\")], {}, child0, null);\n        element(env, element2, context, \"action\", [\"removeRole\", get(env, context, \"role-type\")], {});\n        element(env, element3, context, \"action\", [\"editRole\", get(env, context, \"role-type\")], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/draggable-object-target', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          dom.setAttribute(el1,\"href\",\"#\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(element0,1,1);\n          element(env, element0, context, \"action\", [\"acceptForDrop\"], {});\n          content(env, morph0, context, \"yield\");\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          content(env, morph0, context, \"yield\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"enableClicking\")], {}, child0, child1);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/draggable-object', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          dom.setAttribute(el1,\"href\",\"#\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(element0,1,1);\n          element(env, element0, context, \"action\", [\"selectForDrag\"], {});\n          content(env, morph0, context, \"yield\");\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          content(env, morph0, context, \"yield\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"enableClicking\")], {}, child0, child1);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/em-button', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"i\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          element(env, element0, context, \"bind-attr\", [], {\"class\": \"icon-classes\"});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(fragment,1,1,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"icon-classes\")], {}, child0, null);\n        content(env, morph1, context, \"label\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/em-form-control-help', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"helpText\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/em-form-group', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, element = hooks.element, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(element0,1,1);\n          element(env, element0, context, \"bind-attr\", [], {\"class\": get(env, context, \"wrapperClass\")});\n          inline(env, morph0, context, \"partial\", [\"components/formgroup/form-group\"], {});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"partial\", [\"components/formgroup/form-group\"], {});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"wrapperClass\")], {}, child0, child1);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/em-form-label', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"yield\");\n        content(env, morph1, context, \"text\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/em-form-submit', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"button\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, element = hooks.element, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element1 = dom.childAt(fragment, [1]);\n          var element2 = dom.childAt(element1, [1]);\n          var morph0 = dom.createMorphAt(element2,0,0);\n          element(env, element1, context, \"bind-attr\", [], {\"class\": get(env, context, \"horiClass\")});\n          element(env, element2, context, \"bind-attr\", [], {\"class\": get(env, context, \"classes\")});\n          element(env, element2, context, \"bind-attr\", [], {\"disabled\": get(env, context, \"disabled\")});\n          content(env, morph0, context, \"text\");\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"button\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, element = hooks.element, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(element0,0,0);\n          element(env, element0, context, \"bind-attr\", [], {\"class\": get(env, context, \"classes\")});\n          element(env, element0, context, \"bind-attr\", [], {\"disabled\": get(env, context, \"disabled\")});\n          content(env, morph0, context, \"text\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"form.isHorizontal\")], {}, child0, child1);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/em-form', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          content(env, morph0, context, \"em-form-submit\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"yield\");\n        block(env, morph1, context, \"if\", [get(env, context, \"submit_button\")], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/em-modal-confirm', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createElement(\"span\");\n              dom.setAttribute(el1,\"aria-hidden\",\"true\");\n              var el2 = dom.createTextNode(\"×\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"span\");\n              dom.setAttribute(el1,\"class\",\"sr-only\");\n              var el2 = dom.createTextNode(\"Close\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"h4\");\n            dom.setAttribute(el1,\"class\",\"modal-title\");\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, block = hooks.block, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            var morph1 = dom.createMorphAt(dom.childAt(fragment, [3]),0,0);\n            block(env, morph0, context, \"em-modal-toggler\", [], {\"class\": \"close\"}, child0, null);\n            content(env, morph1, context, \"title\");\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"        \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n              inline(env, morph0, context, \"view\", [get(env, context, \"Ember.Select\")], {\"valueBinding\": \"message\", \"contentBinding\": \"messages\", \"optionValuePath\": \"id\", \"optionLabelPath\": \"content.msg\"});\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"Confirmation with a reason\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n            var morph2 = dom.createMorphAt(fragment,7,7,contextualElement);\n            dom.insertBoundary(fragment, null);\n            content(env, morph0, context, \"message\");\n            content(env, morph1, context, \"yield\");\n            block(env, morph2, context, \"if\", [get(env, context, \"reasonModal\")], {}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      var child2 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"            \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"i\");\n              dom.setAttribute(el1,\"class\",\"fa fa-thumbs-o-down\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n            \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, content = hooks.content;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,3,3,contextualElement);\n              content(env, morph0, context, \"cancel-button-title\");\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n            dom.insertBoundary(fragment, null);\n            inline(env, morph0, context, \"em-button\", [], {\"class\": get(env, context, \"cancel-button-classes\"), \"on-click\": \"confirmPressed\", \"default\": get(env, context, \"submit-button-title\"), \"icon-default\": get(env, context, \"submit-button-default-icons\"), \"icon-executing\": get(env, context, \"submit-button-execute-icons\"), \"executing\": get(env, context, \"submit-button-submitting-title\")});\n            block(env, morph1, context, \"em-modal-toggler\", [], {\"class\": get(env, context, \"submit-button-classes\")}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph2 = dom.createMorphAt(fragment,2,2,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"em-modal-title\", [], {\"classes\": get(env, context, \"modal-title-classes\")}, child0, null);\n          block(env, morph1, context, \"em-modal-body\", [], {}, child1, null);\n          block(env, morph2, context, \"em-modal-footer\", [], {}, child2, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"em-modal\", [], {\"id\": get(env, context, \"confirm-id\"), \"configName\": get(env, context, \"configName\"), \"model-id\": get(env, context, \"model-id\"), \"open-if\": get(env, context, \"open-if\"), \"close-if\": get(env, context, \"close-if\"), \"on-hide\": get(env, context, \"on-hide\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/em-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"modal-dialog\");\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"modal-content\");\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1]),1,1);\n          content(env, morph0, context, \"yield\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"is-open\")], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/env-path-list-item', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"label\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"span\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, element = hooks.element, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(element0, [1]);\n        var morph0 = dom.createMorphAt(element1,1,1);\n        element(env, element0, context, \"bind-attr\", [], {\"class\": \"bgColor\"});\n        element(env, element1, context, \"bind-attr\", [], {\"id\": \"envCssId\"});\n        content(env, morph0, context, \"env.name\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/formgroup/control-within-label', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"partial\", [\"components/formgroup/form-group-control\"], {});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"em-form-label\", [], {\"text\": get(env, context, \"label\"), \"horiClass\": \"\", \"inlineClass\": \"\", \"viewName\": get(env, context, \"labelViewName\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/formgroup/form-group-control', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, element = hooks.element, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(element0,1,1);\n          element(env, element0, context, \"bind-attr\", [], {\"class\": get(env, context, \"controlWrapper\")});\n          inline(env, morph0, context, \"view\", [get(env, context, \"controlView\")], {\"viewName\": get(env, context, \"controlViewName\"), \"property\": get(env, context, \"propertyName\"), \"id\": get(env, context, \"cid\")});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"view\", [get(env, context, \"controlView\")], {\"viewName\": get(env, context, \"controlViewName\"), \"property\": get(env, context, \"propertyName\"), \"id\": get(env, context, \"cid\")});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"controlWrapper\")], {}, child0, child1);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/formgroup/form-group', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          var child0 = (function() {\n            return {\n              isHTMLBars: true,\n              revision: \"Ember@1.11.1\",\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"                \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createElement(\"div\");\n                var el2 = dom.createTextNode(\"\\n                    \");\n                dom.appendChild(el1, el2);\n                var el2 = dom.createComment(\"\");\n                dom.appendChild(el1, el2);\n                var el2 = dom.createTextNode(\"\\n                \");\n                dom.appendChild(el1, el2);\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, get = hooks.get, element = hooks.element, inline = hooks.inline;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var element2 = dom.childAt(fragment, [1]);\n                var morph0 = dom.createMorphAt(element2,1,1);\n                element(env, element2, context, \"bind-attr\", [], {\"class\": get(env, context, \"labelWrapperClass\")});\n                inline(env, morph0, context, \"partial\", [\"components/formgroup/control-within-label\"], {});\n                return fragment;\n              }\n            };\n          }());\n          var child1 = (function() {\n            return {\n              isHTMLBars: true,\n              revision: \"Ember@1.11.1\",\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"                \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createComment(\"\");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, inline = hooks.inline;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n                inline(env, morph0, context, \"partial\", [\"components/formgroup/control-within-label\"], {});\n                return fragment;\n              }\n            };\n          }());\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, block = hooks.block;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n              dom.insertBoundary(fragment, null);\n              dom.insertBoundary(fragment, 0);\n              block(env, morph0, context, \"if\", [get(env, context, \"labelWrapperClass\")], {}, child0, child1);\n              return fragment;\n            }\n          };\n        }());\n        var child1 = (function() {\n          var child0 = (function() {\n            return {\n              isHTMLBars: true,\n              revision: \"Ember@1.11.1\",\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"                \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createElement(\"div\");\n                var el2 = dom.createTextNode(\"\\n                    \");\n                dom.appendChild(el1, el2);\n                var el2 = dom.createComment(\"\");\n                dom.appendChild(el1, el2);\n                var el2 = dom.createTextNode(\"\\n                    \");\n                dom.appendChild(el1, el2);\n                var el2 = dom.createComment(\"\");\n                dom.appendChild(el1, el2);\n                var el2 = dom.createTextNode(\"\\n                \");\n                dom.appendChild(el1, el2);\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, get = hooks.get, element = hooks.element, inline = hooks.inline;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var element1 = dom.childAt(fragment, [1]);\n                var morph0 = dom.createMorphAt(element1,1,1);\n                var morph1 = dom.createMorphAt(element1,3,3);\n                element(env, element1, context, \"bind-attr\", [], {\"class\": get(env, context, \"labelWrapperClass\")});\n                inline(env, morph0, context, \"em-form-label\", [], {\"text\": get(env, context, \"label\"), \"viewName\": get(env, context, \"labelViewName\")});\n                inline(env, morph1, context, \"partial\", [\"components/formgroup/form-group-control\"], {});\n                return fragment;\n              }\n            };\n          }());\n          var child1 = (function() {\n            return {\n              isHTMLBars: true,\n              revision: \"Ember@1.11.1\",\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"                \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createComment(\"\");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n                \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createComment(\"\");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n                var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n                inline(env, morph0, context, \"em-form-label\", [], {\"text\": get(env, context, \"label\"), \"viewName\": get(env, context, \"labelViewName\")});\n                inline(env, morph1, context, \"partial\", [\"components/formgroup/form-group-control\"], {});\n                return fragment;\n              }\n            };\n          }());\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, block = hooks.block;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n              dom.insertBoundary(fragment, null);\n              dom.insertBoundary(fragment, 0);\n              block(env, morph0, context, \"if\", [get(env, context, \"labelWrapperClass\")], {}, child0, child1);\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            block(env, morph0, context, \"if\", [get(env, context, \"yieldInLabel\")], {}, child0, child1);\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            inline(env, morph0, context, \"partial\", [\"components/formgroup/form-group-control\"], {});\n            return fragment;\n          }\n        };\n      }());\n      var child2 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"span\");\n            dom.setAttribute(el1,\"class\",\"form-control-feedback\");\n            var el2 = dom.createElement(\"i\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, element = hooks.element;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [1, 0]);\n            element(env, element0, context, \"bind-attr\", [], {\"class\": get(env, context, \"v_icon\")});\n            return fragment;\n          }\n        };\n      }());\n      var child3 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"            \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n              inline(env, morph0, context, \"em-form-control-help\", [], {\"text\": get(env, context, \"help\"), \"viewName\": get(env, context, \"helpViewName\")});\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            block(env, morph0, context, \"if\", [get(env, context, \"canShowErrors\")], {}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n          var morph2 = dom.createMorphAt(fragment,4,4,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"if\", [get(env, context, \"label\")], {}, child0, child1);\n          block(env, morph1, context, \"if\", [get(env, context, \"v_icons\")], {}, child2, null);\n          block(env, morph2, context, \"unless\", [get(env, context, \"form.isInline\")], {}, child3, null);\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          content(env, morph0, context, \"yield\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"unless\", [get(env, context, \"template\")], {}, child0, child1);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/labeled-radio-button', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        inline(env, morph0, context, \"radio-button\", [], {\"changed\": \"innerRadioChanged\", \"disabled\": get(env, context, \"disabled\"), \"groupValue\": get(env, context, \"groupValue\"), \"name\": get(env, context, \"name\"), \"required\": get(env, context, \"required\"), \"value\": get(env, context, \"value\")});\n        content(env, morph1, context, \"yield\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/markdown-to-html', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"html\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/modal-confirm', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"modal fade\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"modal-dialog\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"modal-content\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"modal-header\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"button\");\n        dom.setAttribute(el5,\"type\",\"button\");\n        dom.setAttribute(el5,\"class\",\"close\");\n        dom.setAttribute(el5,\"data-dismiss\",\"modal\");\n        dom.setAttribute(el5,\"aria-hidden\",\"true\");\n        var el6 = dom.createTextNode(\"×\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"h4\");\n        dom.setAttribute(el5,\"class\",\"modal-title\");\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"modal-body\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"modal-footer\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"button\");\n        dom.setAttribute(el5,\"type\",\"button\");\n        dom.setAttribute(el5,\"class\",\"btn btn-default\");\n        dom.setAttribute(el5,\"data-dismiss\",\"modal\");\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"button\");\n        dom.setAttribute(el5,\"type\",\"button\");\n        dom.setAttribute(el5,\"class\",\"btn btn-primary\");\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, element = hooks.element;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0, 1, 1]);\n        var element1 = dom.childAt(element0, [5]);\n        var element2 = dom.childAt(element1, [3]);\n        var morph0 = dom.createMorphAt(dom.childAt(element0, [1, 3]),0,0);\n        var morph1 = dom.createMorphAt(dom.childAt(element0, [3]),1,1);\n        var morph2 = dom.createMorphAt(dom.childAt(element1, [1]),0,0);\n        var morph3 = dom.createMorphAt(element2,0,0);\n        content(env, morph0, context, \"title\");\n        content(env, morph1, context, \"yield\");\n        content(env, morph2, context, \"dismissButtonLabel\");\n        element(env, element2, context, \"action\", [\"ok\"], {});\n        content(env, morph3, context, \"okButtonLabel\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/node-profile', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"                          \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n              inline(env, morph0, context, \"deployment-role\", [], {\"profile\": get(env, context, \"profile\"), \"role-type\": get(env, context, \"role.roleType\"), \"role-label\": get(env, context, \"role.roleLabel\"), \"role-assigned\": true, \"edit\": \"editRole\", \"remove\": \"removeRole\"});\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            block(env, morph0, context, \"draggable-object\", [], {\"content\": get(env, context, \"role\")}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        var child0 = (function() {\n          var child0 = (function() {\n            return {\n              isHTMLBars: true,\n              revision: \"Ember@1.11.1\",\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"                                      \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createElement(\"a\");\n                dom.setAttribute(el1,\"class\",\"roles-menu-item role-controller\");\n                var el2 = dom.createTextNode(\"Controller\");\n                dom.appendChild(el1, el2);\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, element = hooks.element;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var element3 = dom.childAt(fragment, [1]);\n                element(env, element3, context, \"action\", [\"assignRole\", \"controller\"], {});\n                return fragment;\n              }\n            };\n          }());\n          var child1 = (function() {\n            return {\n              isHTMLBars: true,\n              revision: \"Ember@1.11.1\",\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"                                      \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createElement(\"a\");\n                dom.setAttribute(el1,\"class\",\"roles-menu-item  role-compute\");\n                var el2 = dom.createTextNode(\"Compute\");\n                dom.appendChild(el1, el2);\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, element = hooks.element;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var element2 = dom.childAt(fragment, [1]);\n                element(env, element2, context, \"action\", [\"assignRole\", \"compute\"], {});\n                return fragment;\n              }\n            };\n          }());\n          var child2 = (function() {\n            return {\n              isHTMLBars: true,\n              revision: \"Ember@1.11.1\",\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"                                      \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createElement(\"a\");\n                dom.setAttribute(el1,\"class\",\"roles-menu-item  role-block\");\n                var el2 = dom.createTextNode(\"Block Storage\");\n                dom.appendChild(el1, el2);\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, element = hooks.element;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var element1 = dom.childAt(fragment, [1]);\n                element(env, element1, context, \"action\", [\"assignRole\", \"block\"], {});\n                return fragment;\n              }\n            };\n          }());\n          var child3 = (function() {\n            return {\n              isHTMLBars: true,\n              revision: \"Ember@1.11.1\",\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"                                      \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createElement(\"a\");\n                dom.setAttribute(el1,\"class\",\"roles-menu-item  role-object\");\n                var el2 = dom.createTextNode(\"Object Storage\");\n                dom.appendChild(el1, el2);\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, element = hooks.element;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var element0 = dom.childAt(fragment, [1]);\n                element(env, element0, context, \"action\", [\"assignRole\", \"object\"], {});\n                return fragment;\n              }\n            };\n          }());\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"                            \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"li\");\n              var el2 = dom.createTextNode(\"\\n                                \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createElement(\"a\");\n              dom.setAttribute(el2,\"id\",\"role-target-dropdown-1\");\n              dom.setAttribute(el2,\"data-toggle\",\"dropdown\");\n              dom.setAttribute(el2,\"aria-haspopup\",\"true\");\n              dom.setAttribute(el2,\"aria-expanded\",\"false\");\n              var el3 = dom.createTextNode(\"\\n                                    \");\n              dom.appendChild(el2, el3);\n              var el3 = dom.createElement(\"i\");\n              dom.setAttribute(el3,\"class\",\"fa fa-plus\");\n              dom.appendChild(el2, el3);\n              var el3 = dom.createTextNode(\" Assign Role\\n                                \");\n              dom.appendChild(el2, el3);\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\"\\n                                \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createElement(\"ul\");\n              dom.setAttribute(el2,\"class\",\"dropdown-menu\");\n              dom.setAttribute(el2,\"role\",\"menu\");\n              dom.setAttribute(el2,\"aria-labelledby\",\"role-target-dropdown-1\");\n              var el3 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el2, el3);\n              var el3 = dom.createComment(\"\");\n              dom.appendChild(el2, el3);\n              var el3 = dom.createComment(\"\");\n              dom.appendChild(el2, el3);\n              var el3 = dom.createComment(\"\");\n              dom.appendChild(el2, el3);\n              var el3 = dom.createComment(\"\");\n              dom.appendChild(el2, el3);\n              var el3 = dom.createTextNode(\"                                \");\n              dom.appendChild(el2, el3);\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\"\\n                            \");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, concat = hooks.concat, attribute = hooks.attribute, element = hooks.element, block = hooks.block;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var element4 = dom.childAt(fragment, [1]);\n              var element5 = dom.childAt(element4, [1]);\n              var element6 = dom.childAt(element4, [3]);\n              var attrMorph0 = dom.createAttrMorph(element4, 'class');\n              var morph0 = dom.createMorphAt(element6,1,1);\n              var morph1 = dom.createMorphAt(element6,2,2);\n              var morph2 = dom.createMorphAt(element6,3,3);\n              var morph3 = dom.createMorphAt(element6,4,4);\n              attribute(env, attrMorph0, element4, \"class\", concat(env, [\"role-target \", get(env, context, \"assignMenuOpenClass\"), \"  dropdown\"]));\n              element(env, element5, context, \"action\", [\"showAssignMenu\", get(env, context, \"profile\")], {\"bubbles\": false});\n              block(env, morph0, context, \"unless\", [get(env, context, \"controllerAssigned\")], {}, child0, null);\n              block(env, morph1, context, \"unless\", [get(env, context, \"computeAssigned\")], {}, child1, null);\n              block(env, morph2, context, \"unless\", [get(env, context, \"blockAssigned\")], {}, child2, null);\n              block(env, morph3, context, \"unless\", [get(env, context, \"objectAssigned\")], {}, child3, null);\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            block(env, morph0, context, \"draggable-object-target\", [], {\"action\": \"assignDroppedRole\"}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"col-sm-7 col-md-8\");\n          var el2 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"h4\");\n          dom.setAttribute(el2,\"class\",\"h5\");\n          var el3 = dom.createTextNode(\"Assigned Nodes\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"ul\");\n          dom.setAttribute(el2,\"class\",\"deployment-roles deployment-roles-assigned\");\n          var el3 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"                    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element7 = dom.childAt(fragment, [1, 3]);\n          var morph0 = dom.createMorphAt(element7,1,1);\n          var morph1 = dom.createMorphAt(element7,2,2);\n          block(env, morph0, context, \"each\", [get(env, context, \"assignedRoles\")], {\"keyword\": \"role\"}, child0, null);\n          block(env, morph1, context, \"unless\", [get(env, context, \"allAssigned\")], {}, child1, null);\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"                \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"col-sm-7 col-md-8\");\n          var el2 = dom.createTextNode(\"\\n                    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"em\");\n          var el3 = dom.createTextNode(\"Assigning nodes to roles will occur in step \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"B.\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1]),1,1);\n          content(env, morph0, context, \"stepNumberOpenstack\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"    \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"panel panel-default node-profile nodes-coalescing\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"panel-heading\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"row\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"col-sm-5 col-md-4\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"h3\");\n        dom.setAttribute(el5,\"class\",\"node-profile-label h5\");\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"col-sm-7 col-md-8\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"h4\");\n        dom.setAttribute(el5,\"class\",\"node-profile-free-nodes h5\");\n        var el6 = dom.createTextNode(\"Free Nodes: \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createComment(\"\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"panel-body\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"row\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"col-sm-5 col-md-4\");\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"h4\");\n        dom.setAttribute(el5,\"class\",\"h5\");\n        var el6 = dom.createTextNode(\"Each node has:\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"table\");\n        dom.setAttribute(el5,\"class\",\"table node-specs\");\n        var el6 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"tr\");\n        var el7 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"th\");\n        var el8 = dom.createTextNode(\"CPU\");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"td\");\n        var el8 = dom.createComment(\"\");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"tr\");\n        var el7 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"th\");\n        var el8 = dom.createTextNode(\"RAM\");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"td\");\n        var el8 = dom.createComment(\"\");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\" GB\");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"tr\");\n        var el7 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"th\");\n        var el8 = dom.createTextNode(\"Disk\");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                        \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"td\");\n        var el8 = dom.createComment(\"\");\n        dom.appendChild(el7, el8);\n        var el8 = dom.createTextNode(\" TB\");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n                    \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n                \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element8 = dom.childAt(fragment, [1]);\n        var element9 = dom.childAt(element8, [1, 1]);\n        var element10 = dom.childAt(element8, [3, 1]);\n        var element11 = dom.childAt(element10, [1, 3]);\n        var morph0 = dom.createMorphAt(dom.childAt(element9, [1, 1]),0,0);\n        var morph1 = dom.createMorphAt(dom.childAt(element9, [3, 1]),1,1);\n        var morph2 = dom.createMorphAt(dom.childAt(element11, [1, 3]),0,0);\n        var morph3 = dom.createMorphAt(dom.childAt(element11, [3, 3]),0,0);\n        var morph4 = dom.createMorphAt(dom.childAt(element11, [5, 3]),0,0);\n        var morph5 = dom.createMorphAt(element10,3,3);\n        content(env, morph0, context, \"profile.name\");\n        content(env, morph1, context, \"profile.freeNodes\");\n        content(env, morph2, context, \"profile.cpu\");\n        content(env, morph3, context, \"profile.ram\");\n        content(env, morph4, context, \"profile.disk\");\n        block(env, morph5, context, \"if\", [get(env, context, \"doAssign\")], {}, child0, child1);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/object-bin', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          var child0 = (function() {\n            return {\n              isHTMLBars: true,\n              revision: \"Ember@1.11.1\",\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"        \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createComment(\"\");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, content = hooks.content;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n                content(env, morph0, context, \"yield\");\n                return fragment;\n              }\n            };\n          }());\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, block = hooks.block;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n              dom.insertBoundary(fragment, null);\n              dom.insertBoundary(fragment, 0);\n              block(env, morph0, context, \"with\", [get(env, context, \"obj\")], {}, child0, null);\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            block(env, morph0, context, \"draggable-object\", [], {\"content\": get(env, context, \"obj\"), \"action\": \"handleObjectDragged\"}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"object-bin-title\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"br\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n          var morph1 = dom.createMorphAt(fragment,5,5,contextualElement);\n          dom.insertBoundary(fragment, null);\n          content(env, morph0, context, \"name\");\n          block(env, morph1, context, \"each\", [get(env, context, \"model\")], {\"keyword\": \"obj\"}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"draggable-object-target\", [], {\"action\": \"handleObjectDropped\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/radio-button-f', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(fragment,1,1,contextualElement);\n        var morph2 = dom.createMorphAt(fragment,3,3,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        inline(env, morph0, context, \"radio-button\", [], {\"name\": get(env, context, \"name\"), \"value\": get(env, context, \"value\"), \"checked\": get(env, context, \"checked\"), \"id\": get(env, context, \"cssId\")});\n        content(env, morph1, context, \"value\");\n        content(env, morph2, context, \"label\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/rchi-item', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"           \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"i\");\n          dom.setAttribute(el1,\"class\",\"fa fa-1x fa-check\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n           Deploy this product\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"span\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"img\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        var el3 = dom.createTextNode(\"\\n       \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"span\");\n        dom.setAttribute(el3,\"class\",\"rhci-install-footer\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"       \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, element = hooks.element, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(element0, [1]);\n        var element2 = dom.childAt(element0, [3]);\n        var morph0 = dom.createMorphAt(dom.childAt(element2, [1]),1,1);\n        element(env, element0, context, \"bind-attr\", [], {\"id\": get(env, context, \"cssId\")});\n        element(env, element1, context, \"bind-attr\", [], {\"src\": get(env, context, \"srcImage\")});\n        element(env, element1, context, \"bind-attr\", [], {\"class\": \":img-responsive isDisabled:disabledImage\"});\n        element(env, element2, context, \"bind-attr\", [], {\"class\": \":rhci-footer isChecked:rhci-footer-selected:rhci-footer-unselected\"});\n        block(env, morph0, context, \"if\", [get(env, context, \"isChecked\")], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/review-link', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            content(env, morph0, context, \"yield\");\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            content(env, morph0, context, \"valueFormatted\");\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"if\", [get(env, context, \"useYieldInstead\")], {}, child0, child1);\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            content(env, morph0, context, \"validationMessage\");\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"span\");\n          dom.setAttribute(el1,\"class\",\"errorForValidation\");\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n          block(env, morph0, context, \"link-to\", [get(env, context, \"routeName\")], {}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            content(env, morph0, context, \"defaultMessage\");\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"span\");\n          dom.setAttribute(el1,\"class\",\"defaultValue\");\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n          block(env, morph0, context, \"link-to\", [get(env, context, \"routeName\")], {}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\": \\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        var morph2 = dom.createMorphAt(fragment,4,4,contextualElement);\n        var morph3 = dom.createMorphAt(fragment,6,6,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"label\");\n        block(env, morph1, context, \"link-to\", [get(env, context, \"routeName\")], {}, child0, null);\n        block(env, morph2, context, \"if\", [get(env, context, \"showValidationMessage\")], {}, child1, null);\n        block(env, morph3, context, \"if\", [get(env, context, \"showDefaultMessage\")], {}, child2, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/rhci-hover-text', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"yield\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/rhci-start', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"subscriptions_needed\");\n          var el2 = dom.createTextNode(\"\\n\\n  \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"i\");\n          dom.setAttribute(el2,\"class\",\"fa fa-info-circle\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"strong\");\n          var el3 = dom.createTextNode(\"Before you begin:\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\\n  \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"p\");\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"strong\");\n          var el4 = dom.createTextNode(\"Subscriptions required to complete this deployment.\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" Check your account in the \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"a\");\n          dom.setAttribute(el3,\"href\",\"https://idp.redhat.com/idp/\");\n          dom.setAttribute(el3,\"target\",\"_blank\");\n          var el4 = dom.createTextNode(\"Red Hat Customer Portal\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" to verify you have subscriptions available to cover the selected products.\\n    \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"br\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"strong\");\n          var el4 = dom.createTextNode(\"Start up host machines.\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" Ensure that the bare-metal computers and the virtual machines that you plan to use are turned on and discoverable.\\n    \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"br\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"strong\");\n          var el4 = dom.createTextNode(\"Configure your network.\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" Ensure that the network and subnets are set up and available.\\n  \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\\n\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Cancel\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Select\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-12\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"br\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h2\");\n        var el4 = dom.createTextNode(\"New Deployment: Select Cloud Infrastructure Products\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n    Choose the products to deploy. This wizard guides you through creating a new \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\" Cloud Infrastructure deployment.\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"br\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"br\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        dom.setAttribute(el1,\"style\",\"height:370px;\");\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-4\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-4\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-4\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-12\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"style\",\"float:right;\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, inline = hooks.inline, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [2]);\n        var element1 = dom.childAt(fragment, [8, 1, 1]);\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0, 1]),5,5);\n        var morph1 = dom.createMorphAt(dom.childAt(element0, [1]),1,1);\n        var morph2 = dom.createMorphAt(dom.childAt(element0, [3]),1,1);\n        var morph3 = dom.createMorphAt(dom.childAt(element0, [5]),1,1);\n        var morph4 = dom.createMorphAt(fragment,4,4,contextualElement);\n        var morph5 = dom.createMorphAt(element1,1,1);\n        var morph6 = dom.createMorphAt(element1,3,3);\n        content(env, morph0, context, \"nameRedHat\");\n        inline(env, morph1, context, \"rchi-item\", [], {\"srcImage\": get(env, context, \"imgRhev\"), \"isChecked\": get(env, context, \"isRhev\"), \"name\": get(env, context, \"nameRhev\"), \"cssId\": \"is_rhev\"});\n        inline(env, morph2, context, \"rchi-item\", [], {\"srcImage\": get(env, context, \"imgOpenStack\"), \"isChecked\": get(env, context, \"isOpenStack\"), \"name\": get(env, context, \"nameOpenStack\"), \"cssId\": \"is_openstack\", \"isDisabled\": true});\n        inline(env, morph3, context, \"rchi-item\", [], {\"srcImage\": get(env, context, \"imgCloudForms\"), \"isChecked\": get(env, context, \"isCloudForms\"), \"name\": get(env, context, \"nameCloudForms\"), \"cssId\": \"is_cloudforms\"});\n        block(env, morph4, context, \"unless\", [get(env, context, \"isUpstream\")], {}, child0, null);\n        block(env, morph5, context, \"link-to\", [\"deployments\"], {\"class\": \"btn btn-default\"}, child1, null);\n        block(env, morph6, context, \"link-to\", [get(env, context, \"satelliteTabRouteName\")], {\"class\": \"btn btn-primary\", \"disabled\": get(env, context, \"disableNextOnStart\")}, child2, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/rhci-wizard', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"wizard-item\", [], {\"num\": get(env, context, \"stepNumberRhev\"), \"name\": get(env, context, \"nameRhev\"), \"routeName\": \"rhev\", \"isDisabled\": get(env, context, \"isDisabledRhev\"), \"currentStepNumber\": get(env, context, \"currentStepNumber\")});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"wizard-item\", [], {\"num\": get(env, context, \"stepNumberOpenstack\"), \"name\": get(env, context, \"nameOpenStack\"), \"routeName\": \"openstack\", \"isDisabled\": get(env, context, \"isDisabledOpenstack\"), \"currentStepNumber\": get(env, context, \"currentStepNumber\")});\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"wizard-item\", [], {\"num\": get(env, context, \"stepNumberCloudForms\"), \"name\": get(env, context, \"nameCloudForms\"), \"routeName\": \"cloudforms\", \"isDisabled\": get(env, context, \"isDisabledCloudForms\"), \"currentStepNumber\": get(env, context, \"currentStepNumber\")});\n          return fragment;\n        }\n      };\n    }());\n    var child3 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"wizard-item\", [], {\"num\": get(env, context, \"stepNumberSubscriptions\"), \"name\": \"Subscriptions\", \"routeName\": \"subscriptions\", \"isDisabled\": get(env, context, \"isDisabledSubscriptions\"), \"currentStepNumber\": get(env, context, \"currentStepNumber\")});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-12 page-header page-header-rhci\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h1\");\n        var el4 = dom.createTextNode(\"New \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" Deployment:  \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"ol\");\n        dom.setAttribute(el3,\"class\",\"rhci-steps\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\" /col \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\" /row \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, inline = hooks.inline, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0, 1]);\n        var element1 = dom.childAt(element0, [1]);\n        var element2 = dom.childAt(element0, [3]);\n        var morph0 = dom.createMorphAt(element1,1,1);\n        var morph1 = dom.createMorphAt(element1,3,3);\n        var morph2 = dom.createMorphAt(element2,1,1);\n        var morph3 = dom.createMorphAt(element2,3,3);\n        var morph4 = dom.createMorphAt(element2,5,5);\n        var morph5 = dom.createMorphAt(element2,7,7);\n        var morph6 = dom.createMorphAt(element2,9,9);\n        var morph7 = dom.createMorphAt(element2,11,11);\n        content(env, morph0, context, \"nameRHCI\");\n        content(env, morph1, context, \"name\");\n        inline(env, morph2, context, \"wizard-item\", [], {\"num\": 1, \"name\": get(env, context, \"nameSatellite\"), \"routeName\": \"satellite\", \"isDisabled\": false, \"currentStepNumber\": get(env, context, \"currentStepNumber\")});\n        block(env, morph3, context, \"if\", [get(env, context, \"isRhev\")], {}, child0, null);\n        block(env, morph4, context, \"if\", [get(env, context, \"isOpenStack\")], {}, child1, null);\n        block(env, morph5, context, \"if\", [get(env, context, \"isCloudForms\")], {}, child2, null);\n        block(env, morph6, context, \"if\", [get(env, context, \"isSubscriptions\")], {}, child3, null);\n        inline(env, morph7, context, \"wizard-item\", [], {\"num\": get(env, context, \"stepNumberReview\"), \"name\": \"Review\", \"routeName\": \"review\", \"isDisabled\": get(env, context, \"isDisabledReview\"), \"currentStepNumber\": get(env, context, \"currentStepNumber\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/select-f', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          inline(env, morph0, context, \"view\", [get(env, context, \"Ember.Select\")], {\"content\": get(env, context, \"content\"), \"value\": get(env, context, \"value\"), \"optionLabelPath\": get(env, context, \"optionLabelPath\"), \"optionValuePath\": get(env, context, \"optionValuePath\"), \"selection\": get(env, context, \"selection\"), \"prompt\": get(env, context, \"prompt\"), \"class\": \"form-control\", \"id\": get(env, context, \"cssId\")});\n          content(env, morph1, context, \"yield\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"base-f\", [], {\"label\": get(env, context, \"label\"), \"labelSize\": get(env, context, \"labelSize\"), \"inputSize\": get(env, context, \"inputSize\"), \"unitsSize\": get(env, context, \"unitsSize\"), \"unitsLabel\": get(env, context, \"unitsLabel\"), \"isRequired\": get(env, context, \"isRequired\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/select-simple-f', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          inline(env, morph0, context, \"view\", [get(env, context, \"Ember.Select\")], {\"content\": get(env, context, \"content\"), \"value\": get(env, context, \"value\"), \"selection\": get(env, context, \"selection\"), \"prompt\": get(env, context, \"prompt\"), \"class\": \"form-control\", \"id\": get(env, context, \"cssId\")});\n          content(env, morph1, context, \"yield\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"base-f\", [], {\"label\": get(env, context, \"label\"), \"labelSize\": get(env, context, \"labelSize\"), \"inputSize\": get(env, context, \"inputSize\"), \"unitsSize\": get(env, context, \"unitsSize\"), \"unitsLabel\": get(env, context, \"unitsLabel\"), \"isRequired\": get(env, context, \"isRequired\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/step-number', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"value\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/subnet-drop-area', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"panel-heading\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"h3\");\n          dom.setAttribute(el2,\"class\",\"panel-title\");\n          var el3 = dom.createTextNode(\" \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"small\");\n          var el4 = dom.createTextNode(\" - \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1, 1]);\n          var morph0 = dom.createMorphAt(element0,1,1);\n          var morph1 = dom.createMorphAt(dom.childAt(element0, [3]),1,1);\n          content(env, morph0, context, \"subnet.name\");\n          content(env, morph1, context, \"subnet.network\");\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            inline(env, morph0, context, \"traffic-type\", [], {\"trafficType\": get(env, context, \"trafficType\")});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"draggable-object\", [], {\"content\": get(env, context, \"trafficType\")}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"empty-zone\");\n          var el2 = dom.createTextNode(\" \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\" ui-droppable\");\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"panel-body subnet-types\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element1 = dom.childAt(fragment, [0]);\n        var element2 = dom.childAt(element1, [3]);\n        var morph0 = dom.createMorphAt(element1,1,1);\n        var morph1 = dom.createMorphAt(element2,1,1);\n        var morph2 = dom.createMorphAt(element2,2,2);\n        block(env, morph0, context, \"unless\", [get(env, context, \"hidePanelHeading\")], {}, child0, null);\n        block(env, morph1, context, \"each\", [get(env, context, \"trafficTypes\")], {\"keyword\": \"trafficType\"}, child1, null);\n        block(env, morph2, context, \"unless\", [get(env, context, \"hideEmptyZone\")], {}, child2, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/text-f', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"      \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"span\");\n              dom.setAttribute(el1,\"class\",\"error errorForValidation\");\n              var el2 = dom.createTextNode(\"\\n        \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createElement(\"span\");\n              dom.setAttribute(el2,\"class\",\"glyphicon glyphicon-warning-sign\");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\" \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createComment(\"\");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\"\\n      \");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, content = hooks.content;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),3,3);\n              content(env, morph0, context, \"errors.name\");\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            block(env, morph0, context, \"if\", [get(env, context, \"errors.name\")], {}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline, block = hooks.block, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          var morph2 = dom.createMorphAt(fragment,5,5,contextualElement);\n          inline(env, morph0, context, \"input\", [], {\"class\": \"form-control\", \"value\": get(env, context, \"value\"), \"placeholder\": get(env, context, \"placeholder\"), \"type\": get(env, context, \"typeInput\"), \"focus-out\": \"showErrors\", \"id\": get(env, context, \"cssId\")});\n          block(env, morph1, context, \"if\", [get(env, context, \"showError\")], {}, child0, null);\n          content(env, morph2, context, \"yield\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"base-f\", [], {\"label\": get(env, context, \"label\"), \"labelSize\": get(env, context, \"labelSize\"), \"inputSize\": get(env, context, \"inputSize\"), \"unitsSize\": get(env, context, \"unitsSize\"), \"unitsLabel\": get(env, context, \"unitsLabel\"), \"help-inline\": get(env, context, \"help-inline\"), \"errors\": get(env, context, \"errors\"), \"isRequired\": get(env, context, \"isRequired\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/textarea-f', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"    \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            inline(env, morph0, context, \"textarea\", [], {\"class\": \"form-control\", \"value\": get(env, context, \"value\"), \"placeholder\": get(env, context, \"placeholder\"), \"rows\": get(env, context, \"numRows\"), \"id\": get(env, context, \"cssId\")});\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"    \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            inline(env, morph0, context, \"textarea\", [], {\"class\": \"form-control\", \"value\": get(env, context, \"value\"), \"placeholder\": get(env, context, \"placeholder\"), \"id\": get(env, context, \"cssId\")});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          block(env, morph0, context, \"if\", [get(env, context, \"rowsPassed\")], {}, child0, child1);\n          content(env, morph1, context, \"yield\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"base-f\", [], {\"label\": get(env, context, \"label\"), \"labelSize\": get(env, context, \"labelSize\"), \"inputSize\": get(env, context, \"inputSize\"), \"unitsSize\": get(env, context, \"unitsSize\"), \"unitsLabel\": get(env, context, \"unitsLabel\"), \"isRequired\": get(env, context, \"isRequired\"), \"help-inline\": get(env, context, \"help-inline\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/tr-engine', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"input\", [], {\"type\": \"text\", \"value\": get(env, context, \"host.name\"), \"class\": \"font-control\", \"focus-out\": \"saveHostname\", \"id\": get(env, context, \"host.cssHostHostId\")});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" CPU\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, block = hooks.block, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [2]),1,1);\n        var morph2 = dom.createMorphAt(dom.childAt(fragment, [4]),1,1);\n        var morph3 = dom.createMorphAt(dom.childAt(fragment, [6]),1,1);\n        var morph4 = dom.createMorphAt(dom.childAt(fragment, [8]),1,1);\n        var morph5 = dom.createMorphAt(dom.childAt(fragment, [10]),1,1);\n        var morph6 = dom.createMorphAt(dom.childAt(fragment, [12]),1,1);\n        var morph7 = dom.createMorphAt(dom.childAt(fragment, [14]),1,1);\n        var morph8 = dom.createMorphAt(dom.childAt(fragment, [16]),1,1);\n        inline(env, morph0, context, \"radio-button\", [], {\"value\": get(env, context, \"host.model\"), \"groupValue\": get(env, context, \"selectedRhevEngineHost\"), \"changed\": \"engineHostChanged\", \"id\": get(env, context, \"host.cssIdHostId\")});\n        block(env, morph1, context, \"if\", [get(env, context, \"host.isSelectedAsEngine\")], {}, child0, null);\n        content(env, morph2, context, \"host.mac\");\n        content(env, morph3, context, \"host.hostType\");\n        content(env, morph4, context, \"host.cpus\");\n        content(env, morph5, context, \"host.memory_human_size\");\n        content(env, morph6, context, \"host.disk_count\");\n        content(env, morph7, context, \"host.disks_human_size\");\n        content(env, morph8, context, \"host.subnet_to_s\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/tr-hypervisor', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"input\", [], {\"type\": \"text\", \"value\": get(env, context, \"host.name\"), \"class\": \"font-control\", \"focus-out\": \"saveHostname\", \"id\": get(env, context, \"host.cssHostHostId\")});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" CPU\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, block = hooks.block, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [2]),1,1);\n        var morph2 = dom.createMorphAt(dom.childAt(fragment, [4]),1,1);\n        var morph3 = dom.createMorphAt(dom.childAt(fragment, [6]),1,1);\n        var morph4 = dom.createMorphAt(dom.childAt(fragment, [8]),1,1);\n        var morph5 = dom.createMorphAt(dom.childAt(fragment, [10]),1,1);\n        var morph6 = dom.createMorphAt(dom.childAt(fragment, [12]),1,1);\n        var morph7 = dom.createMorphAt(dom.childAt(fragment, [14]),1,1);\n        var morph8 = dom.createMorphAt(dom.childAt(fragment, [16]),1,1);\n        inline(env, morph0, context, \"input\", [], {\"type\": \"checkbox\", \"name\": \"isSelectedAsHypervisor\", \"checked\": get(env, context, \"host.isSelectedAsHypervisor\"), \"id\": get(env, context, \"host.cssIdHostId\")});\n        block(env, morph1, context, \"if\", [get(env, context, \"host.isSelectedAsHypervisor\")], {}, child0, null);\n        content(env, morph2, context, \"host.mac\");\n        content(env, morph3, context, \"host.hostType\");\n        content(env, morph4, context, \"host.cpus\");\n        content(env, morph5, context, \"host.memory_human_size\");\n        content(env, morph6, context, \"host.disk_count\");\n        content(env, morph7, context, \"host.disks_human_size\");\n        content(env, morph8, context, \"host.subnet_to_s\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/tr-management-app', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [2]),1,1);\n        var morph2 = dom.createMorphAt(dom.childAt(fragment, [4]),1,1);\n        var morph3 = dom.createMorphAt(dom.childAt(fragment, [6]),1,1);\n        inline(env, morph0, context, \"radio-button\", [], {\"value\": get(env, context, \"managementApp.uuid\"), \"groupValue\": get(env, context, \"consumerUUID\"), \"changed\": \"changeManagementApp\", \"id\": get(env, context, \"org.id\")});\n        content(env, morph1, context, \"managementApp.name\");\n        content(env, morph2, context, \"managementApp.entitlementCount\");\n        content(env, morph3, context, \"managementApp.uuid\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/tr-organization', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [2]),1,1);\n        var morph2 = dom.createMorphAt(dom.childAt(fragment, [4]),1,1);\n        inline(env, morph0, context, \"radio-button\", [], {\"value\": get(env, context, \"org\"), \"groupValue\": get(env, context, \"selectedOrganization\"), \"changed\": \"organizationChanged\", \"id\": get(env, context, \"org.id\")});\n        content(env, morph1, context, \"org.name\");\n        content(env, morph2, context, \"org.description\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/tr-subscription', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        dom.setAttribute(el1,\"class\",\"black-font\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [2]),1,1);\n        var morph2 = dom.createMorphAt(dom.childAt(fragment, [4]),1,1);\n        var morph3 = dom.createMorphAt(dom.childAt(fragment, [6]),1,1);\n        var morph4 = dom.createMorphAt(dom.childAt(fragment, [8]),1,1);\n        var morph5 = dom.createMorphAt(dom.childAt(fragment, [10]),1,1);\n        var morph6 = dom.createMorphAt(dom.childAt(fragment, [12]),1,1);\n        var morph7 = dom.createMorphAt(dom.childAt(fragment, [14]),1,1);\n        inline(env, morph0, context, \"input\", [], {\"type\": \"checkbox\", \"name\": \"isSelectedSubscription\", \"checked\": get(env, context, \"subscription.isSelectedSubscription\"), \"id\": get(env, context, \"subscription.id\")});\n        content(env, morph1, context, \"subscription.productName\");\n        content(env, morph2, context, \"subscription.contractNumber\");\n        content(env, morph3, context, \"systemType\");\n        content(env, morph4, context, \"subscription.startDate\");\n        content(env, morph5, context, \"subscription.endDate\");\n        content(env, morph6, context, \"subscription.qtyAvailable\");\n        inline(env, morph7, context, \"input\", [], {\"type\": \"input\", \"name\": \"qtyToAttach\", \"value\": get(env, context, \"subscription.qtyToAttach\"), \"size\": 5, \"maxlength\": 5, \"class\": \"center\"});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/tr-task', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          content(env, morph0, context, \"task.id\");\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          content(env, morph0, context, \"task.label\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"td\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"a\");\n        var el3 = dom.createTextNode(\"View Task\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, content = hooks.content, attribute = hooks.attribute;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [12, 1]);\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [2]),1,1);\n        var morph2 = dom.createMorphAt(dom.childAt(fragment, [4]),1,1);\n        var morph3 = dom.createMorphAt(dom.childAt(fragment, [6]),1,1);\n        var morph4 = dom.createMorphAt(dom.childAt(fragment, [8]),1,1);\n        var morph5 = dom.createMorphAt(dom.childAt(fragment, [10]),1,1);\n        var attrMorph0 = dom.createAttrMorph(element0, 'href');\n        block(env, morph0, context, \"link-to\", [\"review.progress.details.task\", get(env, context, \"task\")], {}, child0, null);\n        block(env, morph1, context, \"link-to\", [\"review.progress.details.task\", get(env, context, \"task\")], {}, child1, null);\n        content(env, morph2, context, \"task.state\");\n        content(env, morph3, context, \"task.result\");\n        content(env, morph4, context, \"task.started_at\");\n        content(env, morph5, context, \"task.user\");\n        attribute(env, attrMorph0, element0, \"href\", get(env, context, \"task.taskUrl\"));\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/traffic-type', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"trafficType.name\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/upstream-downstream', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"a\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"i\");\n        dom.setAttribute(el3,\"class\",\"fa fa-arrow-up\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    Upstream\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"a\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"i\");\n        dom.setAttribute(el3,\"class\",\"fa fa-arrow-down\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    Downstream\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, element = hooks.element;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(element0, [1]);\n        var element2 = dom.childAt(fragment, [2]);\n        var element3 = dom.childAt(element2, [1]);\n        element(env, element0, context, \"bind-attr\", [], {\"class\": \":updown isUpstream:active_upstream:nonactive_upstream\"});\n        element(env, element1, context, \"action\", [\"showUpstream\"], {});\n        element(env, element2, context, \"bind-attr\", [], {\"class\": \":updown isUpstream:nonactive_downstream:active_downstream\"});\n        element(env, element3, context, \"action\", [\"showDownstream\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/vertical-tab', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"a\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);\n        content(env, morph0, context, \"name\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/components/wizard-item', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          content(env, morph0, context, \"name\");\n          content(env, morph1, context, \"numActive\");\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"    \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n  \");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            content(env, morph0, context, \"name\");\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"link-to\", [get(env, context, \"routeName\")], {}, child0, null);\n          content(env, morph1, context, \"numActive\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"isDisabled\")], {}, child0, child1);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/configure-environment', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"row\");\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"col-md-9\");\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"alert alert-success\");\n          var el4 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"i\");\n          dom.setAttribute(el4,\"class\",\"fa fa-2x fa-check-circle-o green-circle\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n         \\n        \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\" added successfully.\\n    \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [0, 1, 1]),3,3);\n          content(env, morph0, context, \"selectedEnvironment.name\");\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"alert alert-info\");\n            var el2 = dom.createTextNode(\"\\n          No lifecycle environments are in organization \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"strong\");\n            var el3 = dom.createComment(\"\");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1]),0,0);\n            content(env, morph0, context, \"selectedOrganization.name\");\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"        \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"div\");\n              dom.setAttribute(el1,\"class\",\"path-selector\");\n              var el2 = dom.createTextNode(\"\\n          \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createElement(\"ul\");\n              dom.setAttribute(el2,\"class\",\"path-list\");\n              var el3 = dom.createTextNode(\"\\n            \");\n              dom.appendChild(el2, el3);\n              var el3 = dom.createComment(\"\");\n              dom.appendChild(el2, el3);\n              var el3 = dom.createTextNode(\"\\n            \");\n              dom.appendChild(el2, el3);\n              var el3 = dom.createElement(\"li\");\n              dom.setAttribute(el3,\"class\",\"path-list-item\");\n              var el4 = dom.createTextNode(\"\\n              \");\n              dom.appendChild(el3, el4);\n              var el4 = dom.createElement(\"label\");\n              dom.setAttribute(el4,\"class\",\"path-list-item-label\");\n              var el5 = dom.createTextNode(\"\\n                 \\n              \");\n              dom.appendChild(el4, el5);\n              dom.appendChild(el3, el4);\n              var el4 = dom.createTextNode(\"\\n            \");\n              dom.appendChild(el3, el4);\n              dom.appendChild(el2, el3);\n              var el3 = dom.createTextNode(\"\\n          \");\n              dom.appendChild(el2, el3);\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\"\\n        \");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1]),1,1);\n              inline(env, morph0, context, \"env-path-list-item\", [], {\"env\": get(env, context, \"libraryEnv\"), \"selectedEnvironment\": get(env, context, \"selectedEnvironment\"), \"action\": \"selectEnvironment\"});\n              return fragment;\n            }\n          };\n        }());\n        var child1 = (function() {\n          var child0 = (function() {\n            return {\n              isHTMLBars: true,\n              revision: \"Ember@1.11.1\",\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"        \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createElement(\"div\");\n                dom.setAttribute(el1,\"class\",\"path-selector\");\n                var el2 = dom.createTextNode(\"\\n          \");\n                dom.appendChild(el1, el2);\n                var el2 = dom.createElement(\"ul\");\n                dom.setAttribute(el2,\"class\",\"path-list\");\n                var el3 = dom.createTextNode(\"\\n            \");\n                dom.appendChild(el2, el3);\n                var el3 = dom.createComment(\"\");\n                dom.appendChild(el2, el3);\n                var el3 = dom.createTextNode(\"\\n            \");\n                dom.appendChild(el2, el3);\n                var el3 = dom.createComment(\"\");\n                dom.appendChild(el2, el3);\n                var el3 = dom.createTextNode(\"\\n            \");\n                dom.appendChild(el2, el3);\n                var el3 = dom.createElement(\"li\");\n                dom.setAttribute(el3,\"class\",\"path-list-item\");\n                var el4 = dom.createTextNode(\"\\n              \");\n                dom.appendChild(el3, el4);\n                var el4 = dom.createElement(\"label\");\n                dom.setAttribute(el4,\"class\",\"path-list-item-label\");\n                var el5 = dom.createTextNode(\"\\n                 \\n              \");\n                dom.appendChild(el4, el5);\n                dom.appendChild(el3, el4);\n                var el4 = dom.createTextNode(\"\\n            \");\n                dom.appendChild(el3, el4);\n                dom.appendChild(el2, el3);\n                var el3 = dom.createTextNode(\"\\n          \");\n                dom.appendChild(el2, el3);\n                dom.appendChild(el1, el2);\n                var el2 = dom.createTextNode(\"\\n        \");\n                dom.appendChild(el1, el2);\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var element1 = dom.childAt(fragment, [1, 1]);\n                var morph0 = dom.createMorphAt(element1,1,1);\n                var morph1 = dom.createMorphAt(element1,3,3);\n                inline(env, morph0, context, \"env-path-list-item\", [], {\"env\": get(env, context, \"libraryEnv\"), \"selectedEnvironment\": get(env, context, \"selectedEnvironment\"), \"action\": \"selectEnvironment\"});\n                inline(env, morph1, context, \"env-path-list-item\", [], {\"env\": get(env, context, \"env\"), \"selectedEnvironment\": get(env, context, \"selectedEnvironment\"), \"action\": \"selectEnvironment\"});\n                return fragment;\n              }\n            };\n          }());\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"    \");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, block = hooks.block;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n              dom.insertBoundary(fragment, 0);\n              block(env, morph0, context, \"each\", [get(env, context, \"priorLibraryEnvironments\")], {\"keyword\": \"env\"}, child0, null);\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            block(env, morph0, context, \"if\", [get(env, context, \"hasOnlyLibraryEnvironment\")], {}, child0, child1);\n            return fragment;\n          }\n        };\n      }());\n      var child2 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        New Environment Path\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"row\");\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"col-md-9\");\n          var el3 = dom.createTextNode(\"\\n\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"style\",\"margin-top:15px;\");\n          var el4 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"    \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n\\n  \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element2 = dom.childAt(fragment, [0, 1]);\n          var morph0 = dom.createMorphAt(element2,1,1);\n          var morph1 = dom.createMorphAt(dom.childAt(element2, [3]),1,1);\n          block(env, morph0, context, \"if\", [get(env, context, \"hasNoEnvironments\")], {}, child0, child1);\n          block(env, morph1, context, \"em-modal-toggler\", [], {\"modal-id\": \"newLifecycleEnvironmentModal\", \"class\": \"btn btn-default\"}, child2, null);\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"button\");\n          dom.setAttribute(el1,\"class\",\"btn btn-primary\");\n          var el2 = dom.createTextNode(\"\\n        Next \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"i\");\n          dom.setAttribute(el2,\"class\",\"fa fa-angle-right\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          element(env, element0, context, \"action\", [\"saveDeployment\", get(env, context, \"step2RouteName\")], {});\n          element(env, element0, context, \"bind-attr\", [], {\"disabled\": get(env, context, \"disableNextOnLifecycleEnvironment\")});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-6\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"\\n      Select a lifecycle environment for this RHCI deployment. The application lifecycle is divided into lifecycle environments, which mimic each stage of the lifecycle. These lifecycle environments are linked in an environment path. You can promote content along the environment path to the next stage when required. For example, if development completes on a particular version of an application, you can promote this version to the testing environment and start development on the next version.\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"default_org_view\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  Use Default Organization View\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,2,2,contextualElement);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [8]),1,1);\n        var morph2 = dom.createMorphAt(fragment,10,10,contextualElement);\n        var morph3 = dom.createMorphAt(fragment,16,16,contextualElement);\n        var morph4 = dom.createMorphAt(fragment,18,18,contextualElement);\n        dom.insertBoundary(fragment, null);\n        block(env, morph0, context, \"if\", [get(env, context, \"showAlertMessage\")], {}, child0, null);\n        inline(env, morph1, context, \"input\", [], {\"type\": \"checkbox\", \"name\": \"skipContent\", \"checked\": get(env, context, \"useDefaultOrgViewForEnv\")});\n        block(env, morph2, context, \"unless\", [get(env, context, \"useDefaultOrgViewForEnv\")], {}, child1, null);\n        inline(env, morph3, context, \"partial\", [\"new-environment\"], {});\n        block(env, morph4, context, \"cancel-back-next\", [], {\"backRouteName\": get(env, context, \"organizationTabRouteName\"), \"disableBack\": false, \"parentController\": get(env, context, \"controller\")}, child2, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/configure-environment.loading', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"Loading Environments ...\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/configure-organization', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"row\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"col-md-9\");\n          var el3 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"alert alert-success\");\n          var el4 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"i\");\n          dom.setAttribute(el4,\"class\",\"fa fa-2x fa-check-circle-o green-circle\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n           \\n          \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\" added successfully.\\n      \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1, 1]),3,3);\n          content(env, morph0, context, \"selectedOrganization.name\");\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        New Organization\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"          \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"tr-organization\", [], {\"org\": get(env, context, \"org\"), \"selectedOrganization\": get(env, context, \"selectedOrganization\"), \"action\": \"selectOrganization\"});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-5\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"\\n      Choose an organization for this deployment. Organizations divide hosts into logical groups based on ownership, purpose, content, security level, or other divisions.\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-4\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"pull-right\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-9\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"table\");\n        dom.setAttribute(el3,\"class\",\"table table-striped\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"thead\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"th\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"th\");\n        var el6 = dom.createTextNode(\"Name\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"th\");\n        var el6 = dom.createTextNode(\"Description\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"tbody\");\n        var el5 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,2,2,contextualElement);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [4, 3, 1]),1,1);\n        var morph2 = dom.createMorphAt(dom.childAt(fragment, [8, 1, 1, 3]),1,1);\n        var morph3 = dom.createMorphAt(fragment,12,12,contextualElement);\n        var morph4 = dom.createMorphAt(fragment,14,14,contextualElement);\n        block(env, morph0, context, \"if\", [get(env, context, \"showAlertMessage\")], {}, child0, null);\n        block(env, morph1, context, \"em-modal-toggler\", [], {\"modal-id\": \"newOrganizationModal\", \"class\": \"btn btn-primary\", \"disabled\": true}, child1, null);\n        block(env, morph2, context, \"each\", [get(env, context, \"organizations\")], {\"keyword\": \"org\"}, child2, null);\n        inline(env, morph3, context, \"partial\", [\"new-organization\"], {});\n        inline(env, morph4, context, \"cancel-back-next\", [], {\"backRouteName\": get(env, context, \"satelliteTabRouteName\"), \"disableBack\": false, \"nextRouteName\": get(env, context, \"lifecycleEnvironmentTabRouteName\"), \"disableNext\": get(env, context, \"disableNextOnConfigureOrganization\"), \"parentController\": get(env, context, \"controller\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/configure-organization.loading', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"Loading Organizations ...\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/content-source-upstream', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Next\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h1\");\n        var el2 = dom.createTextNode(\"No subscriptiosn for upstream\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"\\n  There are no subscriptions for upstream.\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"\\n  Do we need to define the source(s) of the content?\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"style\",\"text-align:right\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"button\");\n        dom.setAttribute(el2,\"class\",\"btn btn-default\");\n        var el3 = dom.createTextNode(\"Cancel\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, element = hooks.element, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [6]);\n        var element1 = dom.childAt(element0, [1]);\n        var morph0 = dom.createMorphAt(element0,3,3);\n        element(env, element1, context, \"action\", [\"showModal\", \"cancel-modal\"], {});\n        block(env, morph0, context, \"link-to\", [\"review.installation\"], {\"class\": \"btn btn-primary\", \"disabled\": get(env, context, \"disableTabInstallation\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/debug-deployment', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"ID: \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"  (isNew: \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\")\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\nDesc: \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\nOrg: \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"   (\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\") \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\nEnv: \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"     (\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\") \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\nhasName: \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\nhasOrganization: \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\nhasLifecycleEnvironment: \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\ndisableTabConfigureOrganization: \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\ndisableTabLifecycleEnvironment: \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\ndisableAll: \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\ndisableNextOnDeploymentName: \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\ndisableNextOnConfigureOrganization: \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\ndisableNextOnLifecycleEnvironment: \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\nisDisabledRhev: \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\nisDisabledOpenstack: \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\nisDisabledCloudForms: \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\nisDisabledSubscriptions: \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\nisDisabledReview: \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\ndeploy_rhev: \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\ndeploy_openstack: \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\ndeploy_cfme: \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"hr\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n        var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n        var morph2 = dom.createMorphAt(fragment,7,7,contextualElement);\n        var morph3 = dom.createMorphAt(fragment,11,11,contextualElement);\n        var morph4 = dom.createMorphAt(fragment,13,13,contextualElement);\n        var morph5 = dom.createMorphAt(fragment,15,15,contextualElement);\n        var morph6 = dom.createMorphAt(fragment,19,19,contextualElement);\n        var morph7 = dom.createMorphAt(fragment,21,21,contextualElement);\n        var morph8 = dom.createMorphAt(fragment,23,23,contextualElement);\n        var morph9 = dom.createMorphAt(fragment,27,27,contextualElement);\n        var morph10 = dom.createMorphAt(fragment,31,31,contextualElement);\n        var morph11 = dom.createMorphAt(fragment,35,35,contextualElement);\n        var morph12 = dom.createMorphAt(fragment,39,39,contextualElement);\n        var morph13 = dom.createMorphAt(fragment,43,43,contextualElement);\n        var morph14 = dom.createMorphAt(fragment,47,47,contextualElement);\n        var morph15 = dom.createMorphAt(fragment,51,51,contextualElement);\n        var morph16 = dom.createMorphAt(fragment,55,55,contextualElement);\n        var morph17 = dom.createMorphAt(fragment,59,59,contextualElement);\n        var morph18 = dom.createMorphAt(fragment,65,65,contextualElement);\n        var morph19 = dom.createMorphAt(fragment,69,69,contextualElement);\n        var morph20 = dom.createMorphAt(fragment,73,73,contextualElement);\n        var morph21 = dom.createMorphAt(fragment,77,77,contextualElement);\n        var morph22 = dom.createMorphAt(fragment,81,81,contextualElement);\n        var morph23 = dom.createMorphAt(fragment,85,85,contextualElement);\n        var morph24 = dom.createMorphAt(fragment,89,89,contextualElement);\n        var morph25 = dom.createMorphAt(fragment,93,93,contextualElement);\n        content(env, morph0, context, \"id\");\n        content(env, morph1, context, \"isNew\");\n        content(env, morph2, context, \"description\");\n        content(env, morph3, context, \"organization.name\");\n        content(env, morph4, context, \"organization.id\");\n        content(env, morph5, context, \"organization\");\n        content(env, morph6, context, \"lifecycle_environment.name\");\n        content(env, morph7, context, \"lifecycle_environment.id\");\n        content(env, morph8, context, \"lifecycle_environment\");\n        content(env, morph9, context, \"hasName\");\n        content(env, morph10, context, \"hasOrganization\");\n        content(env, morph11, context, \"hasLifecycleEnvironment\");\n        content(env, morph12, context, \"disableTabConfigureOrganization\");\n        content(env, morph13, context, \"disableTabLifecycleEnvironment\");\n        content(env, morph14, context, \"disableAll\");\n        content(env, morph15, context, \"disableNextOnDeploymentName\");\n        content(env, morph16, context, \"disableNextOnConfigureOrganization\");\n        content(env, morph17, context, \"disableNextOnLifecycleEnvironment\");\n        content(env, morph18, context, \"isDisabledRhev\");\n        content(env, morph19, context, \"isDisabledOpenstack\");\n        content(env, morph20, context, \"isDisabledCloudForms\");\n        content(env, morph21, context, \"isDisabledSubscriptions\");\n        content(env, morph22, context, \"isDisabledReview\");\n        content(env, morph23, context, \"deploy_rhev\");\n        content(env, morph24, context, \"deploy_openstack\");\n        content(env, morph25, context, \"deploy_cfme\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/deployment-new', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        inline(env, morph0, context, \"partial\", [\"deployment\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/deployment-new/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/deployment-new/satellite', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        inline(env, morph0, context, \"partial\", [\"satellite\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/deployment-new/satellite/configure-environment', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        inline(env, morph0, context, \"partial\", [\"configure-environment\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/deployment-new/satellite/configure-environment.loading', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"Loading Environments ...\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/deployment-new/satellite/configure-organization', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        inline(env, morph0, context, \"partial\", [\"configure-organization\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/deployment-new/satellite/configure-organization.loading', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"Loading Organizations ...\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/deployment-new/satellite/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        inline(env, morph0, context, \"partial\", [\"satellite/index\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/deployment-new/satellite/loading', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"Loading ....\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/deployment-new/start', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        inline(env, morph0, context, \"partial\", [\"deployment/start\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/deployment', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"rhci-wizard\", [], {\"name\": get(env, context, \"name\"), \"nameRHCI\": get(env, context, \"nameRHCI\"), \"nameSatellite\": get(env, context, \"nameSatellite\"), \"nameRhev\": get(env, context, \"nameRhev\"), \"nameOpenStack\": get(env, context, \"nameOpenStack\"), \"nameCloudForms\": get(env, context, \"nameCloudForms\"), \"stepNumberRhev\": get(env, context, \"stepNumberRhev\"), \"stepNumberOpenstack\": get(env, context, \"stepNumberOpenstack\"), \"stepNumberCloudForms\": get(env, context, \"stepNumberCloudForms\"), \"stepNumberSubscriptions\": get(env, context, \"stepNumberSubscriptions\"), \"stepNumberReview\": get(env, context, \"stepNumberReview\"), \"isDisabledRhev\": get(env, context, \"isDisabledRhev\"), \"isDisabledOpenstack\": get(env, context, \"isDisabledOpenstack\"), \"isDisabledCloudForms\": get(env, context, \"isDisabledCloudForms\"), \"isDisabledSubscriptions\": get(env, context, \"isDisabledSubscriptions\"), \"isDisabledReview\": get(env, context, \"isDisabledReview\"), \"isRhev\": get(env, context, \"isRhev\"), \"isOpenStack\": get(env, context, \"isOpenStack\"), \"isCloudForms\": get(env, context, \"isCloudForms\"), \"isSubscriptions\": get(env, context, \"isSubscriptions\"), \"currentStepNumber\": get(env, context, \"currentStepNumber\")});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row parent-sidebar-pf\");\n        var el2 = dom.createTextNode(\"\\n \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [2]),1,1);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"unless\", [get(env, context, \"isHideWizard\")], {}, child0, null);\n        content(env, morph1, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/deployment/start', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        inline(env, morph0, context, \"rhci-start\", [], {\"isRhev\": get(env, context, \"isRhev\"), \"isOpenStack\": get(env, context, \"isOpenStack\"), \"isCloudForms\": get(env, context, \"isCloudForms\"), \"nameRedHat\": get(env, context, \"nameRedHat\"), \"nameRhev\": get(env, context, \"nameRhev\"), \"nameOpenStack\": get(env, context, \"nameOpenStack\"), \"nameCloudForms\": get(env, context, \"nameCloudForms\"), \"imgRhev\": get(env, context, \"imgRhev\"), \"imgOpenStack\": get(env, context, \"imgOpenStack\"), \"imgCloudForms\": get(env, context, \"imgCloudForms\"), \"isUpstream\": get(env, context, \"isUpstream\"), \"satelliteTabRouteName\": get(env, context, \"satelliteTabRouteName\"), \"disableNextOnStart\": get(env, context, \"disableNextOnStart\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/deployments', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"New Deployment\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\" \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\" \");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            content(env, morph0, context, \"deployment.name\");\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\" Edit \");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createTextNode(\" \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createTextNode(\" \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createTextNode(\" \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createTextNode(\" \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),1,1);\n          var morph1 = dom.createMorphAt(dom.childAt(element0, [3]),1,1);\n          var morph2 = dom.createMorphAt(dom.childAt(element0, [5]),1,1);\n          var morph3 = dom.createMorphAt(dom.childAt(element0, [7]),1,1);\n          block(env, morph0, context, \"link-to\", [\"deployment\", get(env, context, \"deployment\")], {}, child0, null);\n          content(env, morph1, context, \"deployment.lifecycle_environment.name\");\n          content(env, morph2, context, \"deployment.organization.name\");\n          block(env, morph3, context, \"link-to\", [\"deployment\", get(env, context, \"deployment\")], {\"class\": \"btn btn-default\"}, child1, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h1\");\n        var el2 = dom.createTextNode(\"Deployments\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"span\");\n        dom.setAttribute(el2,\"style\",\"float:right;\");\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"form\");\n        dom.setAttribute(el1,\"class\",\"form\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"clearfix\");\n        var el3 = dom.createTextNode(\"\\n   \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"form-group\");\n        dom.setAttribute(el3,\"style\",\"margin-left: -18px;\");\n        var el4 = dom.createTextNode(\"\\n     \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"col-md-5\");\n        var el5 = dom.createTextNode(\"\\n       \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n     \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n     \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"button\");\n        dom.setAttribute(el4,\"class\",\"btn btn-default\");\n        dom.setAttribute(el4,\"style\",\"margin-left:-20px\");\n        var el5 = dom.createElement(\"i\");\n        dom.setAttribute(el5,\"class\",\"fa fa-search\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\" Search\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n   \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"table\");\n        dom.setAttribute(el1,\"class\",\"table table-bordered table-striped small\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"thead\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"tr\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" Name \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" Environment \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" Organization \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"tbody\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\nDisplaying \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"strong\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" of \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\" entries\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, block = hooks.block, get = hooks.get, inline = hooks.inline, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element1 = dom.childAt(fragment, [14]);\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [2, 1]),0,0);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [6, 1, 1, 1]),1,1);\n        var morph2 = dom.createMorphAt(dom.childAt(fragment, [10, 3]),1,1);\n        var morph3 = dom.createMorphAt(element1,0,0);\n        var morph4 = dom.createMorphAt(element1,2,2);\n        var morph5 = dom.createMorphAt(fragment,16,16,contextualElement);\n        block(env, morph0, context, \"link-to\", [\"deployment-new.start\"], {\"class\": \"btn btn-success\"}, child0, null);\n        inline(env, morph1, context, \"input\", [], {\"type\": \"text\", \"class\": \"form-control\", \"placeholder\": \"Filter ...\", \"value\": get(env, context, \"searchDeploymentString\")});\n        block(env, morph2, context, \"each\", [get(env, context, \"filteredDeployments\")], {\"itemController\": \"deployment\", \"keyword\": \"deployment\"}, child1, null);\n        content(env, morph3, context, \"filteredDeployments.length\");\n        content(env, morph4, context, \"model.length\");\n        content(env, morph5, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/devonly', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"new deployment\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"alert alert-danger\");\n          dom.setAttribute(el1,\"role\",\"alert\");\n          var el2 = dom.createTextNode(\"\\n        You are already logged in and shouldn't be here.\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"br\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        You can\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"a\");\n          var el3 = dom.createTextNode(\"logout\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        or go to \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element3 = dom.childAt(fragment, [1]);\n          var element4 = dom.childAt(element3, [3]);\n          var morph0 = dom.createMorphAt(element3,5,5);\n          element(env, element4, context, \"action\", [\"invalidateSession\"], {});\n          block(env, morph0, context, \"link-to\", [\"rhci\"], {}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      or Login using credentials from\\n      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createTextNode(\"Facebook\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n      |\\n      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createTextNode(\"Google\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n      |\\n      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createTextNode(\"Github\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n      |\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var element1 = dom.childAt(fragment, [3]);\n          var element2 = dom.childAt(fragment, [5]);\n          element(env, element0, context, \"action\", [\"authenticateSession\", \"facebook\"], {});\n          element(env, element1, context, \"action\", [\"authenticateSession\", \"google\"], {});\n          element(env, element2, context, \"action\", [\"authenticateSession\", \"github\"], {});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-7 col col-md-offset-2\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0, 1]),1,1);\n        block(env, morph0, context, \"if\", [get(env, context, \"session.isAuthenticated\")], {}, child0, child1);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/discovered-host', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/discovered-hosts', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/engine', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-12\");\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        dom.setAttribute(el3,\"style\",\"padding-left:15px;\");\n        var el4 = dom.createTextNode(\"Select a target machine for the \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\":\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-md-12\");\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0, 1]);\n        var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(element0, [3]),1,1);\n        content(env, morph0, context, \"engineTabNameLowercase\");\n        content(env, morph1, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/engine/discovered-host', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"     \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"tr-engine\", [], {\"host\": get(env, context, \"host\"), \"selectedRhevEngineHost\": get(env, context, \"selectedRhevEngineHost\")});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"table\");\n        dom.setAttribute(el1,\"class\",\"table table-bordered table-striped small\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"thead\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"tr\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" Host Name \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" MAC Address \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" Host Type \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" CPU \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" Memory \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" # Disks \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" Disk Space \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" Network \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"tbody\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [2, 3]),1,1);\n        var morph1 = dom.createMorphAt(fragment,4,4,contextualElement);\n        block(env, morph0, context, \"each\", [get(env, context, \"availableHosts\")], {\"itemController\": \"discovered-host\", \"keyword\": \"host\"}, child0, null);\n        inline(env, morph1, context, \"cancel-back-next\", [], {\"backRouteName\": \"rhev-setup\", \"disableBack\": false, \"nextRouteName\": get(env, context, \"engineNextRouteName\"), \"disableNext\": false});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/hostgroup', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/hostgroup/edit', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/hostgroups', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"          \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"th\");\n          var el2 = dom.createTextNode(\"Subnet\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"th\");\n          var el2 = dom.createTextNode(\"Domain\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"th\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"             \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            content(env, morph0, context, \"name\");\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"Edit\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"          \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"td\");\n            var el2 = dom.createTextNode(\"  \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n          \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"td\");\n            var el2 = dom.createTextNode(\"  \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n          \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"td\");\n            var el2 = dom.createTextNode(\" \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [5]),1,1);\n            block(env, morph0, context, \"link-to\", [\"hostgroup.edit\", get(env, context, \"this\")], {\"class\": \"btn btn-default\"}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          dom.setAttribute(el2,\"style\",\"word-wrap:break-word;\");\n          dom.setAttribute(el2,\"width\",\"100\");\n          var el3 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"          \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),1,1);\n          var morph1 = dom.createMorphAt(element0,3,3);\n          block(env, morph0, context, \"link-to\", [\"hostgroup.edit\", get(env, context, \"this\")], {}, child0, null);\n          block(env, morph1, context, \"unless\", [get(env, context, \"onShowPage\")], {}, child1, null);\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          var el2 = dom.createTextNode(\"No hostgroups found.\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"    \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"table\");\n        dom.setAttribute(el1,\"class\",\"table table-bordered\");\n        dom.setAttribute(el1,\"style\",\"table-layout:fixed;\");\n        var el2 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"thead\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"tr\");\n        var el4 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\"Title\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n      \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"tbody\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"      \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element1 = dom.childAt(fragment, [1]);\n        var morph0 = dom.createMorphAt(dom.childAt(element1, [1, 1]),3,3);\n        var morph1 = dom.createMorphAt(dom.childAt(element1, [3]),1,1);\n        var morph2 = dom.createMorphAt(fragment,3,3,contextualElement);\n        block(env, morph0, context, \"unless\", [get(env, context, \"onShowPage\")], {}, child0, null);\n        block(env, morph1, context, \"each\", [], {\"itemController\": \"hostgroup\"}, child1, child2);\n        content(env, morph2, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/hypervisor', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-12\");\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h4\");\n        dom.setAttribute(el3,\"style\",\"padding-left:15px;\");\n        var el4 = dom.createTextNode(\"Select one or more target machines to be hypervisors.\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-md-12\");\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0, 1, 3]),1,1);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/hypervisor/discovered-host', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"     \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"tr-hypervisor\", [], {\"host\": get(env, context, \"host\")});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"button\");\n          dom.setAttribute(el1,\"class\",\"btn btn-primary\");\n          var el2 = dom.createTextNode(\"Next\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          element(env, element0, context, \"action\", [\"saveHyperVisors\", \"rhev-options\"], {});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"strong\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\" of \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"strong\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\navailable hosts selected \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"table\");\n        dom.setAttribute(el1,\"class\",\"table table-bordered table-striped small\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"thead\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"tr\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" Host Name \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" MAC Address \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" Host Type \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" CPU \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" Memory \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" # Disks \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" Disk Space \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" Network \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"tbody\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [2]),0,0);\n        var morph2 = dom.createMorphAt(fragment,4,4,contextualElement);\n        var morph3 = dom.createMorphAt(dom.childAt(fragment, [10, 3]),1,1);\n        var morph4 = dom.createMorphAt(fragment,12,12,contextualElement);\n        dom.insertBoundary(fragment, null);\n        content(env, morph0, context, \"model.length\");\n        content(env, morph1, context, \"availableHosts.length\");\n        content(env, morph2, context, \"idsChecked\");\n        block(env, morph3, context, \"each\", [get(env, context, \"availableHosts\")], {\"itemController\": \"discovered-host\", \"keyword\": \"host\"}, child0, null);\n        block(env, morph4, context, \"cancel-back-next\", [], {\"backRouteName\": get(env, context, \"hypervisorBackRouteName\"), \"disableBack\": false, \"parentController\": get(env, context, \"controller\")}, child1, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"deployments\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"templates/index.hbs\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,5,5,contextualElement);\n        block(env, morph0, context, \"link-to\", [\"deployments\"], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/loading', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"spinner spinner-md spinner-inline\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"span\");\n        dom.setAttribute(el1,\"class\",\"spinner-text\");\n        var el2 = dom.createTextNode(\"\\n  Loading ....\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/loggedin', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h1\");\n        var el2 = dom.createTextNode(\"ALREADY LOGGED IN\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/login', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"alert alert-danger col-md-offset-2\");\n          dom.setAttribute(el1,\"role\",\"alert\");\n          var el2 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"p\");\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"strong\");\n          var el4 = dom.createTextNode(\"Login failed:\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"code\");\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1, 3]),0,0);\n          content(env, morph0, context, \"errorMessage\");\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                Basic Authorization\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"                oAuth Token\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,1,1,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"radio-button\", [], {\"value\": \"Basic\", \"groupValue\": get(env, context, \"authType\")}, child0, null);\n          block(env, morph1, context, \"radio-button\", [], {\"value\": \"oAuth\", \"groupValue\": get(env, context, \"authType\")}, child1, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h1\");\n        var el2 = dom.createTextNode(\"Login\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"id\",\"login\");\n        dom.setAttribute(el1,\"class\",\"container\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"row\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-sm-12\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"id\",\"brand\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\" <img alt=\\\"Foreman_white\\\" src=\\\"assets/foreman_white.png\\\" /> \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"/#brand\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-sm-7 col-md-6 col-lg-5 login\");\n        var el4 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"form\");\n        dom.setAttribute(el4,\"accept-charset\",\"UTF-8\");\n        dom.setAttribute(el4,\"action\",\"/users/login\");\n        dom.setAttribute(el4,\"class\",\"form-horizontal\");\n        dom.setAttribute(el4,\"id\",\"login-form\");\n        dom.setAttribute(el4,\"method\",\"post\");\n        var el5 = dom.createElement(\"div\");\n        dom.setAttribute(el5,\"style\",\"margin:0;padding:0;display:inline\");\n        var el6 = dom.createElement(\"input\");\n        dom.setAttribute(el6,\"name\",\"utf8\");\n        dom.setAttribute(el6,\"type\",\"hidden\");\n        dom.setAttribute(el6,\"value\",\"✓\");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"input\");\n        dom.setAttribute(el6,\"name\",\"authenticity_token\");\n        dom.setAttribute(el6,\"type\",\"hidden\");\n        dom.setAttribute(el6,\"value\",\"1f770GegsrWb4ZJIC0UkSEkvBVG9MnRJ7jypTsrjeLU=\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"div\");\n        dom.setAttribute(el5,\"class\",\"form-group\");\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"label\");\n        dom.setAttribute(el6,\"class\",\"col-sm-2 control-label\");\n        dom.setAttribute(el6,\"for\",\"login_login\");\n        var el7 = dom.createTextNode(\"Username\");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"div\");\n        dom.setAttribute(el6,\"class\",\"col-sm-10\");\n        var el7 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"div\");\n        dom.setAttribute(el5,\"class\",\"form-group\");\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"label\");\n        dom.setAttribute(el6,\"class\",\"col-sm-2 control-label\");\n        dom.setAttribute(el6,\"for\",\"login_password\");\n        var el7 = dom.createTextNode(\"Password\");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"div\");\n        dom.setAttribute(el6,\"class\",\"col-sm-10\");\n        var el7 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"div\");\n        dom.setAttribute(el5,\"class\",\"form-group\");\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"div\");\n        dom.setAttribute(el6,\"class\",\"col-xs-offset-8 col-xs-4 submit\");\n        var el7 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"button\");\n        dom.setAttribute(el7,\"class\",\"btn btn-primary\");\n        var el8 = dom.createTextNode(\"Login\");\n        dom.appendChild(el7, el8);\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, inline = hooks.inline, element = hooks.element;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [10, 1, 3]);\n        var element1 = dom.childAt(element0, [3]);\n        var element2 = dom.childAt(element1, [8, 1, 1]);\n        var morph0 = dom.createMorphAt(element0,1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(element1, [2, 3]),1,1);\n        var morph2 = dom.createMorphAt(dom.childAt(element1, [4, 3]),1,1);\n        var morph3 = dom.createMorphAt(element1,6,6);\n        block(env, morph0, context, \"if\", [get(env, context, \"errorMessage\")], {}, child0, null);\n        inline(env, morph1, context, \"input\", [], {\"type\": \"text\", \"value\": get(env, context, \"identification\"), \"size\": \"30\", \"class\": \"form-control\"});\n        inline(env, morph2, context, \"input\", [], {\"type\": \"password\", \"value\": get(env, context, \"password\"), \"size\": \"30\", \"class\": \"form-control\"});\n        block(env, morph3, context, \"base-f\", [], {\"label\": \"\", \"labelSize\": \"col-md-2\", \"inputSize\": \"col-md-9\"}, child1, null);\n        element(env, element2, context, \"action\", [\"authenticate\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/logout-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  Are you sure you want to logout?\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"modal-confirm\", [], {\"title\": \"Logout\", \"ok\": \"logout\", \"close\": \"removeModal\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/mainmenu', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"EMBER-CLI DEV MODE ONLY\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" INSTALLER \");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, 0);\n          content(env, morph0, context, \"nameRHCI\");\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"All Deployments\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child3 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"New \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" Deployment\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          content(env, morph0, context, \"nameRHCI\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"style\",\"position: static; top: 0px;\");\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"navbar-header\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"button\");\n        dom.setAttribute(el3,\"type\",\"button\");\n        dom.setAttribute(el3,\"class\",\"navbar-toggle collapsed\");\n        dom.setAttribute(el3,\"data-toggle\",\"collapse\");\n        dom.setAttribute(el3,\"data-target\",\"#bs-example-navbar-collapse-1\");\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"span\");\n        dom.setAttribute(el4,\"class\",\"sr-only\");\n        var el5 = dom.createTextNode(\"Toggle navigation\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"span\");\n        dom.setAttribute(el4,\"class\",\"icon-bar\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"span\");\n        dom.setAttribute(el4,\"class\",\"icon-bar\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"span\");\n        dom.setAttribute(el4,\"class\",\"icon-bar\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"a\");\n        dom.setAttribute(el3,\"class\",\"navbar-brand\");\n        dom.setAttribute(el3,\"href\",\"#\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"ul\");\n        dom.setAttribute(el3,\"class\",\"nav navbar-nav\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"li\");\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, element = hooks.element, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(element0, [1, 5]);\n        var morph0 = dom.createMorphAt(dom.childAt(element1, [1]),0,0);\n        var morph1 = dom.createMorphAt(dom.childAt(element1, [3]),0,0);\n        var morph2 = dom.createMorphAt(dom.childAt(element1, [5]),0,0);\n        var morph3 = dom.createMorphAt(dom.childAt(element1, [7]),0,0);\n        element(env, element0, context, \"bind-attr\", [], {\"class\": \":navbar :navbar-default :navbar-inner :navbar-fixed-top :persist-header isUpstream:navbar-inner-upstream\"});\n        block(env, morph0, context, \"link-to\", [\"deployments\"], {}, child0, null);\n        block(env, morph1, context, \"link-to\", [\"deployments\"], {}, child1, null);\n        block(env, morph2, context, \"link-to\", [\"deployments\"], {}, child2, null);\n        block(env, morph3, context, \"link-to\", [\"deployment-new.start\"], {}, child3, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/networking', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h4\");\n        var el2 = dom.createTextNode(\"Networking Configuration\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-12\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"br\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"form\");\n        dom.setAttribute(el3,\"class\",\"form form-horizontal\");\n        var el4 = dom.createTextNode(\"\\n\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [2, 1, 3]),1,1);\n        inline(env, morph0, context, \"text-f\", [], {\"label\": \"DNS name\", \"value\": get(env, context, \"dnsName\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/new-environment', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"            \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"span\");\n              dom.setAttribute(el1,\"aria-hidden\",\"true\");\n              var el2 = dom.createTextNode(\"×\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"span\");\n              dom.setAttribute(el1,\"class\",\"sr-only\");\n              var el2 = dom.createTextNode(\"Close\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"h4\");\n            dom.setAttribute(el1,\"class\",\"modal-title\");\n            var el2 = dom.createTextNode(\"Create Organization\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, 0);\n            block(env, morph0, context, \"em-modal-toggler\", [], {\"class\": \"close\"}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"            Submitting, please wait...\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        var child1 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"            \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n            \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n            \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n              var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n              var morph2 = dom.createMorphAt(fragment,5,5,contextualElement);\n              inline(env, morph0, context, \"text-f\", [], {\"label\": \"Environment Path Name\", \"value\": get(env, context, \"name\"), \"labelSize\": \"col-md-4\", \"inputSize\": \"col-md-8\"});\n              inline(env, morph1, context, \"text-f\", [], {\"label\": \"Label\", \"value\": get(env, context, \"label\"), \"labelSize\": \"col-md-4\", \"inputSize\": \"col-md-8\"});\n              inline(env, morph2, context, \"textarea-f\", [], {\"label\": \"Description (Optional)\", \"value\": get(env, context, \"description\"), \"labelSize\": \"col-md-4\", \"inputSize\": \"col-md-8\"});\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            block(env, morph0, context, \"if\", [get(env, context, \"async\")], {}, child0, child1);\n            return fragment;\n          }\n        };\n      }());\n      var child2 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"button\");\n            dom.setAttribute(el1,\"type\",\"submit\");\n            dom.setAttribute(el1,\"class\",\"btn btn-primary\");\n            var el2 = dom.createTextNode(\"Submit\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, element = hooks.element;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [1]);\n            element(env, element0, context, \"bind-attr\", [], {\"disabled\": get(env, context, \"async\")});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          var morph2 = dom.createMorphAt(fragment,5,5,contextualElement);\n          block(env, morph0, context, \"em-modal-title\", [], {}, child0, null);\n          block(env, morph1, context, \"em-modal-body\", [], {}, child1, null);\n          block(env, morph2, context, \"em-modal-footer\", [], {}, child2, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"em-modal-form\", [], {\"configName\": \"bs\", \"id\": \"newLifecycleEnvironmentModal\", \"on-submit\": \"createEnvironment\", \"in-async\": get(env, context, \"async\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/new-node-registration', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"            \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"span\");\n              dom.setAttribute(el1,\"aria-hidden\",\"true\");\n              var el2 = dom.createTextNode(\"×\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"span\");\n              dom.setAttribute(el1,\"class\",\"sr-only\");\n              var el2 = dom.createTextNode(\"Close\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, element = hooks.element;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var element13 = dom.childAt(fragment, [1]);\n              element(env, element13, context, \"action\", [\"cancelRegisterNodes\"], {});\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"h4\");\n            dom.setAttribute(el1,\"class\",\"modal-title\");\n            var el2 = dom.createTextNode(\"Node Registration\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, 0);\n            block(env, morph0, context, \"em-modal-toggler\", [], {\"class\": \"close\"}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"            Submitting, please wait...\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        var child1 = (function() {\n          var child0 = (function() {\n            return {\n              isHTMLBars: true,\n              revision: \"Ember@1.11.1\",\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"              \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createElement(\"span\");\n                var el2 = dom.createTextNode(\"\\n                Warning: The registration process is paused while editting the Node Profiles.\\n              \");\n                dom.appendChild(el1, el2);\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                return fragment;\n              }\n            };\n          }());\n          var child1 = (function() {\n            return {\n              isHTMLBars: true,\n              revision: \"Ember@1.11.1\",\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"                            \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createElement(\"li\");\n                var el2 = dom.createTextNode(\"\\n                                \");\n                dom.appendChild(el1, el2);\n                var el2 = dom.createElement(\"a\");\n                var el3 = dom.createComment(\"\");\n                dom.appendChild(el2, el3);\n                dom.appendChild(el1, el2);\n                var el2 = dom.createTextNode(\"\\n                                \");\n                dom.appendChild(el1, el2);\n                var el2 = dom.createElement(\"i\");\n                dom.setAttribute(el2,\"class\",\"fa fa-trash-o\");\n                dom.appendChild(el1, el2);\n                var el2 = dom.createTextNode(\"\\n                            \");\n                dom.appendChild(el1, el2);\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, get = hooks.get, element = hooks.element, content = hooks.content;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var element2 = dom.childAt(fragment, [1]);\n                var element3 = dom.childAt(element2, [1]);\n                var element4 = dom.childAt(element2, [3]);\n                var morph0 = dom.createMorphAt(element3,0,0);\n                element(env, element2, context, \"bind-attr\", [], {\"class\": get(env, context, \"profile.isActiveClass\")});\n                element(env, element3, context, \"action\", [\"selectProfile\", get(env, context, \"profile\")], {});\n                content(env, morph0, context, \"profile.name\");\n                element(env, element4, context, \"action\", [\"removeProfile\", get(env, context, \"profile\")], {});\n                return fragment;\n              }\n            };\n          }());\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"            \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"div\");\n              dom.setAttribute(el1,\"class\",\"row register-nodes-formset\");\n              dom.setAttribute(el1,\"id\",\"formset-register_nodes\");\n              var el2 = dom.createTextNode(\"\\n                \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createElement(\"div\");\n              dom.setAttribute(el2,\"class\",\"col-xs-5\");\n              var el3 = dom.createTextNode(\"\\n                    \");\n              dom.appendChild(el2, el3);\n              var el3 = dom.createElement(\"ul\");\n              dom.setAttribute(el3,\"class\",\"nav nav-tabs nav-node-registration\");\n              dom.setAttribute(el3,\"role\",\"tablist\");\n              dom.setAttribute(el3,\"id\",\"add-nodes\");\n              var el4 = dom.createTextNode(\"\\n                        \");\n              dom.appendChild(el3, el4);\n              var el4 = dom.createElement(\"li\");\n              dom.setAttribute(el4,\"role\",\"presentation\");\n              dom.setAttribute(el4,\"class\",\"active\");\n              var el5 = dom.createTextNode(\"\\n                            \");\n              dom.appendChild(el4, el5);\n              var el5 = dom.createElement(\"a\");\n              dom.setAttribute(el5,\"href\",\"#upload-nodes\");\n              dom.setAttribute(el5,\"aria-controls\",\"upload-nodes\");\n              dom.setAttribute(el5,\"role\",\"tab\");\n              dom.setAttribute(el5,\"data-toggle\",\"tab\");\n              dom.setAttribute(el5,\"title\",\"Upload node\");\n              var el6 = dom.createTextNode(\"\\n                                \");\n              dom.appendChild(el5, el6);\n              var el6 = dom.createElement(\"i\");\n              dom.setAttribute(el6,\"class\",\"fa fa-upload\");\n              dom.appendChild(el5, el6);\n              var el6 = dom.createTextNode(\"\\n                            \");\n              dom.appendChild(el5, el6);\n              dom.appendChild(el4, el5);\n              var el5 = dom.createTextNode(\"\\n                        \");\n              dom.appendChild(el4, el5);\n              dom.appendChild(el3, el4);\n              var el4 = dom.createTextNode(\"\\n                        \");\n              dom.appendChild(el3, el4);\n              var el4 = dom.createElement(\"li\");\n              dom.setAttribute(el4,\"role\",\"presentation\");\n              var el5 = dom.createTextNode(\"\\n                            \");\n              dom.appendChild(el4, el5);\n              var el5 = dom.createElement(\"a\");\n              dom.setAttribute(el5,\"class\",\"add-node-link\");\n              dom.setAttribute(el5,\"title\",\"Add node\");\n              var el6 = dom.createTextNode(\"\\n                                \");\n              dom.appendChild(el5, el6);\n              var el6 = dom.createElement(\"i\");\n              dom.setAttribute(el6,\"class\",\"fa fa-plus\");\n              dom.appendChild(el5, el6);\n              var el6 = dom.createTextNode(\"\\n                            \");\n              dom.appendChild(el5, el6);\n              dom.appendChild(el4, el5);\n              var el5 = dom.createTextNode(\"\\n                        \");\n              dom.appendChild(el4, el5);\n              dom.appendChild(el3, el4);\n              var el4 = dom.createTextNode(\"\\n                    \");\n              dom.appendChild(el3, el4);\n              dom.appendChild(el2, el3);\n              var el3 = dom.createTextNode(\"\\n                    \");\n              dom.appendChild(el2, el3);\n              var el3 = dom.createElement(\"h3\");\n              dom.setAttribute(el3,\"class\",\"nodes-registered-count\");\n              var el4 = dom.createComment(\"\");\n              dom.appendChild(el3, el4);\n              var el4 = dom.createTextNode(\" Nodes\");\n              dom.appendChild(el3, el4);\n              dom.appendChild(el2, el3);\n              var el3 = dom.createTextNode(\"\\n                    \");\n              dom.appendChild(el2, el3);\n              var el3 = dom.createElement(\"div\");\n              dom.setAttribute(el3,\"class\",\"modal-tab-content\");\n              var el4 = dom.createTextNode(\"\\n                        \");\n              dom.appendChild(el3, el4);\n              var el4 = dom.createElement(\"div\");\n              dom.setAttribute(el4,\"role\",\"tabpanel\");\n              dom.setAttribute(el4,\"class\",\"tab-pane active upload-nodes\");\n              dom.setAttribute(el4,\"id\",\"upload-nodes\");\n              var el5 = dom.createTextNode(\"\\n                            \");\n              dom.appendChild(el4, el5);\n              var el5 = dom.createElement(\"form\");\n              var el6 = dom.createTextNode(\"\\n                                \");\n              dom.appendChild(el5, el6);\n              var el6 = dom.createElement(\"div\");\n              dom.setAttribute(el6,\"class\",\"form-group required\");\n              var el7 = dom.createTextNode(\"\\n                                    \");\n              dom.appendChild(el6, el7);\n              var el7 = dom.createElement(\"input\");\n              dom.setAttribute(el7,\"id\",\"id_csv_file\");\n              dom.setAttribute(el7,\"name\",\"csv_file\");\n              dom.setAttribute(el7,\"type\",\"file\");\n              dom.appendChild(el6, el7);\n              var el7 = dom.createTextNode(\"\\n                                \");\n              dom.appendChild(el6, el7);\n              dom.appendChild(el5, el6);\n              var el6 = dom.createTextNode(\"\\n                                \");\n              dom.appendChild(el5, el6);\n              var el6 = dom.createElement(\"div\");\n              dom.setAttribute(el6,\"class\",\"form-group\");\n              var el7 = dom.createTextNode(\"\\n                                    \");\n              dom.appendChild(el6, el7);\n              var el7 = dom.createElement(\"button\");\n              dom.setAttribute(el7,\"type\",\"button\");\n              dom.setAttribute(el7,\"class\",\"btn btn-sm btn-default\");\n              var el8 = dom.createTextNode(\"Cancel\");\n              dom.appendChild(el7, el8);\n              dom.appendChild(el6, el7);\n              var el7 = dom.createTextNode(\"\\n                                    \");\n              dom.appendChild(el6, el7);\n              var el7 = dom.createElement(\"button\");\n              dom.setAttribute(el7,\"type\",\"button\");\n              dom.setAttribute(el7,\"class\",\"btn btn-sm btn-primary\");\n              var el8 = dom.createTextNode(\"Upload Nodes\");\n              dom.appendChild(el7, el8);\n              dom.appendChild(el6, el7);\n              var el7 = dom.createTextNode(\"\\n                                \");\n              dom.appendChild(el6, el7);\n              dom.appendChild(el5, el6);\n              var el6 = dom.createTextNode(\"\\n                            \");\n              dom.appendChild(el5, el6);\n              dom.appendChild(el4, el5);\n              var el5 = dom.createTextNode(\"\\n                        \");\n              dom.appendChild(el4, el5);\n              dom.appendChild(el3, el4);\n              var el4 = dom.createTextNode(\"\\n                    \");\n              dom.appendChild(el3, el4);\n              dom.appendChild(el2, el3);\n              var el3 = dom.createTextNode(\"\\n                    \");\n              dom.appendChild(el2, el3);\n              var el3 = dom.createElement(\"ul\");\n              dom.setAttribute(el3,\"class\",\"nav nav-pills nav-stacked nav-registered-nodes\");\n              var el4 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el3, el4);\n              var el4 = dom.createComment(\"\");\n              dom.appendChild(el3, el4);\n              var el4 = dom.createTextNode(\"                    \");\n              dom.appendChild(el3, el4);\n              dom.appendChild(el2, el3);\n              var el3 = dom.createTextNode(\"\\n                \");\n              dom.appendChild(el2, el3);\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\"\\n                \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createElement(\"form\");\n              var el3 = dom.createTextNode(\"\\n                      \");\n              dom.appendChild(el2, el3);\n              var el3 = dom.createElement(\"div\");\n              dom.setAttribute(el3,\"class\",\"col-xs-7\");\n              var el4 = dom.createTextNode(\"\\n                          \");\n              dom.appendChild(el3, el4);\n              var el4 = dom.createElement(\"div\");\n              var el5 = dom.createTextNode(\"\\n                              \");\n              dom.appendChild(el4, el5);\n              var el5 = dom.createElement(\"h4\");\n              var el6 = dom.createTextNode(\"Node Detail - \");\n              dom.appendChild(el5, el6);\n              var el6 = dom.createComment(\"\");\n              dom.appendChild(el5, el6);\n              dom.appendChild(el4, el5);\n              var el5 = dom.createTextNode(\"\\n                              \");\n              dom.appendChild(el4, el5);\n              var el5 = dom.createElement(\"div\");\n              dom.setAttribute(el5,\"class\",\"form-horizontal\");\n              var el6 = dom.createTextNode(\"\\n                                  \");\n              dom.appendChild(el5, el6);\n              var el6 = dom.createElement(\"fieldset\");\n              var el7 = dom.createTextNode(\"\\n                                      \");\n              dom.appendChild(el6, el7);\n              var el7 = dom.createElement(\"legend\");\n              var el8 = dom.createTextNode(\"Management\");\n              dom.appendChild(el7, el8);\n              dom.appendChild(el6, el7);\n              var el7 = dom.createTextNode(\"\\n                                      \");\n              dom.appendChild(el6, el7);\n              var el7 = dom.createElement(\"div\");\n              dom.setAttribute(el7,\"class\",\"form-group required\");\n              var el8 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createElement(\"label\");\n              dom.setAttribute(el8,\"class\",\"col-xs-4\");\n              dom.setAttribute(el8,\"for\",\"id_register_nodes-0-driver\");\n              var el9 = dom.createTextNode(\"Driver\");\n              dom.appendChild(el8, el9);\n              dom.appendChild(el7, el8);\n              var el8 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createElement(\"div\");\n              dom.setAttribute(el8,\"class\",\"col-xs-6\");\n              var el9 = dom.createTextNode(\"\\n                                              \");\n              dom.appendChild(el8, el9);\n              var el9 = dom.createComment(\"\");\n              dom.appendChild(el8, el9);\n              var el9 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el8, el9);\n              dom.appendChild(el7, el8);\n              var el8 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createElement(\"div\");\n              dom.setAttribute(el8,\"class\",\"col-xs-2 muted\");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createTextNode(\"\\n                                      \");\n              dom.appendChild(el7, el8);\n              dom.appendChild(el6, el7);\n              var el7 = dom.createTextNode(\"\\n                                      \");\n              dom.appendChild(el6, el7);\n              var el7 = dom.createElement(\"div\");\n              dom.setAttribute(el7,\"class\",\"form-group required\");\n              var el8 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createElement(\"label\");\n              dom.setAttribute(el8,\"class\",\"col-xs-4\");\n              dom.setAttribute(el8,\"for\",\"id_register_nodes-0-ipmi_address\");\n              var el9 = dom.createTextNode(\"IP Address\");\n              dom.appendChild(el8, el9);\n              dom.appendChild(el7, el8);\n              var el8 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createElement(\"div\");\n              dom.setAttribute(el8,\"class\",\"col-xs-6\");\n              var el9 = dom.createTextNode(\"\\n                                              \");\n              dom.appendChild(el8, el9);\n              var el9 = dom.createComment(\"\");\n              dom.appendChild(el8, el9);\n              var el9 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el8, el9);\n              dom.appendChild(el7, el8);\n              var el8 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createElement(\"div\");\n              dom.setAttribute(el8,\"class\",\"col-xs-2 muted\");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createTextNode(\"\\n                                      \");\n              dom.appendChild(el7, el8);\n              dom.appendChild(el6, el7);\n              var el7 = dom.createTextNode(\"\\n                                      \");\n              dom.appendChild(el6, el7);\n              var el7 = dom.createElement(\"div\");\n              dom.setAttribute(el7,\"class\",\"form-group\");\n              var el8 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createElement(\"label\");\n              dom.setAttribute(el8,\"class\",\"col-xs-4\");\n              dom.setAttribute(el8,\"for\",\"id_register_nodes-0-ipmi_username\");\n              var el9 = dom.createTextNode(\"IPMI User\");\n              dom.appendChild(el8, el9);\n              dom.appendChild(el7, el8);\n              var el8 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createElement(\"div\");\n              dom.setAttribute(el8,\"class\",\"col-xs-6\");\n              var el9 = dom.createTextNode(\"\\n                                              \");\n              dom.appendChild(el8, el9);\n              var el9 = dom.createComment(\"\");\n              dom.appendChild(el8, el9);\n              var el9 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el8, el9);\n              dom.appendChild(el7, el8);\n              var el8 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createElement(\"div\");\n              dom.setAttribute(el8,\"class\",\"col-xs-2 muted\");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createTextNode(\"\\n                                      \");\n              dom.appendChild(el7, el8);\n              dom.appendChild(el6, el7);\n              var el7 = dom.createTextNode(\"\\n                                      \");\n              dom.appendChild(el6, el7);\n              var el7 = dom.createElement(\"div\");\n              dom.setAttribute(el7,\"class\",\"form-group\");\n              var el8 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createElement(\"label\");\n              dom.setAttribute(el8,\"class\",\"col-xs-4\");\n              dom.setAttribute(el8,\"style\",\"white-space:nowrap\");\n              dom.setAttribute(el8,\"for\",\"id_register_nodes-0-ipmi_password\");\n              var el9 = dom.createTextNode(\"IPMI Password\");\n              dom.appendChild(el8, el9);\n              dom.appendChild(el7, el8);\n              var el8 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createElement(\"div\");\n              dom.setAttribute(el8,\"class\",\"col-xs-6\");\n              var el9 = dom.createTextNode(\"\\n                                            \");\n              dom.appendChild(el8, el9);\n              var el9 = dom.createComment(\"\");\n              dom.appendChild(el8, el9);\n              var el9 = dom.createTextNode(\"\\n                                              \");\n              dom.appendChild(el8, el9);\n              var el9 = dom.createElement(\"span\");\n              dom.setAttribute(el9,\"class\",\"form-control-feedback glyphicon glyphicon-eye-open\");\n              dom.appendChild(el8, el9);\n              var el9 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el8, el9);\n              dom.appendChild(el7, el8);\n              var el8 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createElement(\"div\");\n              dom.setAttribute(el8,\"class\",\"col-xs-2 muted\");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createTextNode(\"\\n                                      \");\n              dom.appendChild(el7, el8);\n              dom.appendChild(el6, el7);\n              var el7 = dom.createTextNode(\"\\n                                  \");\n              dom.appendChild(el6, el7);\n              dom.appendChild(el5, el6);\n              var el6 = dom.createTextNode(\"\\n                                  \");\n              dom.appendChild(el5, el6);\n              var el6 = dom.createElement(\"fieldset\");\n              var el7 = dom.createTextNode(\"\\n                                      \");\n              dom.appendChild(el6, el7);\n              var el7 = dom.createElement(\"legend\");\n              var el8 = dom.createTextNode(\"Networking\");\n              dom.appendChild(el7, el8);\n              dom.appendChild(el6, el7);\n              var el7 = dom.createTextNode(\"\\n                                      \");\n              dom.appendChild(el6, el7);\n              var el7 = dom.createElement(\"div\");\n              dom.setAttribute(el7,\"class\",\"form-group required\");\n              var el8 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createElement(\"label\");\n              dom.setAttribute(el8,\"class\",\"col-xs-4\");\n              dom.setAttribute(el8,\"style\",\"white-space:nowrap\");\n              dom.setAttribute(el8,\"for\",\"id_register_nodes-0-mac_addresses\");\n              var el9 = dom.createTextNode(\"NIC MAC Address\");\n              dom.appendChild(el8, el9);\n              dom.appendChild(el7, el8);\n              var el8 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createElement(\"div\");\n              dom.setAttribute(el8,\"class\",\"col-xs-6\");\n              var el9 = dom.createTextNode(\"\\n                                            \");\n              dom.appendChild(el8, el9);\n              var el9 = dom.createComment(\"\");\n              dom.appendChild(el8, el9);\n              var el9 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el8, el9);\n              dom.appendChild(el7, el8);\n              var el8 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createElement(\"div\");\n              dom.setAttribute(el8,\"class\",\"col-xs-2 muted\");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createTextNode(\"\\n                                      \");\n              dom.appendChild(el7, el8);\n              dom.appendChild(el6, el7);\n              var el7 = dom.createTextNode(\"\\n                                  \");\n              dom.appendChild(el6, el7);\n              dom.appendChild(el5, el6);\n              var el6 = dom.createTextNode(\"\\n                                  \");\n              dom.appendChild(el5, el6);\n              var el6 = dom.createElement(\"fieldset\");\n              var el7 = dom.createTextNode(\"\\n                                      \");\n              dom.appendChild(el6, el7);\n              var el7 = dom.createElement(\"legend\");\n              var el8 = dom.createTextNode(\"Hardware\");\n              dom.appendChild(el7, el8);\n              dom.appendChild(el6, el7);\n              var el7 = dom.createTextNode(\"\\n                                      \");\n              dom.appendChild(el6, el7);\n              var el7 = dom.createElement(\"div\");\n              dom.setAttribute(el7,\"class\",\"form-group required\");\n              var el8 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createElement(\"label\");\n              dom.setAttribute(el8,\"class\",\"col-xs-4\");\n              dom.setAttribute(el8,\"for\",\"id_register_nodes-0-cpu_arch\");\n              var el9 = dom.createTextNode(\"Architecture\");\n              dom.appendChild(el8, el9);\n              dom.appendChild(el7, el8);\n              var el8 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createElement(\"div\");\n              dom.setAttribute(el8,\"class\",\"col-xs-6\");\n              var el9 = dom.createTextNode(\"\\n                                            \");\n              dom.appendChild(el8, el9);\n              var el9 = dom.createComment(\"\");\n              dom.appendChild(el8, el9);\n              var el9 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el8, el9);\n              dom.appendChild(el7, el8);\n              var el8 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createElement(\"div\");\n              dom.setAttribute(el8,\"class\",\"col-xs-2 muted\");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createTextNode(\"\\n                                      \");\n              dom.appendChild(el7, el8);\n              dom.appendChild(el6, el7);\n              var el7 = dom.createTextNode(\"\\n                                      \");\n              dom.appendChild(el6, el7);\n              var el7 = dom.createElement(\"div\");\n              dom.setAttribute(el7,\"class\",\"form-group required\");\n              var el8 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createElement(\"label\");\n              dom.setAttribute(el8,\"class\",\"col-xs-4\");\n              dom.setAttribute(el8,\"for\",\"id_register_nodes-0-cpus\");\n              var el9 = dom.createTextNode(\"CPUs\");\n              dom.appendChild(el8, el9);\n              dom.appendChild(el7, el8);\n              var el8 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createElement(\"div\");\n              dom.setAttribute(el8,\"class\",\"col-xs-6\");\n              dom.setAttribute(el8,\"style\",\"padding-right:5px;\");\n              var el9 = dom.createTextNode(\"\\n                                            \");\n              dom.appendChild(el8, el9);\n              var el9 = dom.createComment(\"\");\n              dom.appendChild(el8, el9);\n              var el9 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el8, el9);\n              dom.appendChild(el7, el8);\n              var el8 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createElement(\"div\");\n              dom.setAttribute(el8,\"class\",\"col-xs-2 muted\");\n              dom.setAttribute(el8,\"style\",\"padding:0px;\");\n              var el9 = dom.createTextNode(\"cores\");\n              dom.appendChild(el8, el9);\n              dom.appendChild(el7, el8);\n              var el8 = dom.createTextNode(\"\\n                                      \");\n              dom.appendChild(el7, el8);\n              dom.appendChild(el6, el7);\n              var el7 = dom.createTextNode(\"\\n                                      \");\n              dom.appendChild(el6, el7);\n              var el7 = dom.createElement(\"div\");\n              dom.setAttribute(el7,\"class\",\"form-group required\");\n              var el8 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createElement(\"label\");\n              dom.setAttribute(el8,\"class\",\"col-xs-4\");\n              dom.setAttribute(el8,\"for\",\"id_register_nodes-0-memory_mb\");\n              var el9 = dom.createTextNode(\"Memory\");\n              dom.appendChild(el8, el9);\n              dom.appendChild(el7, el8);\n              var el8 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createElement(\"div\");\n              dom.setAttribute(el8,\"class\",\"col-xs-6\");\n              dom.setAttribute(el8,\"style\",\"padding-right:5px;\");\n              var el9 = dom.createTextNode(\"\\n                                              \");\n              dom.appendChild(el8, el9);\n              var el9 = dom.createComment(\"\");\n              dom.appendChild(el8, el9);\n              var el9 = dom.createTextNode(\"\\n\\n                                          \");\n              dom.appendChild(el8, el9);\n              dom.appendChild(el7, el8);\n              var el8 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createElement(\"div\");\n              dom.setAttribute(el8,\"class\",\"col-xs-2 muted\");\n              dom.setAttribute(el8,\"style\",\"padding:0px;\");\n              var el9 = dom.createTextNode(\"MB\");\n              dom.appendChild(el8, el9);\n              dom.appendChild(el7, el8);\n              var el8 = dom.createTextNode(\"\\n                                      \");\n              dom.appendChild(el7, el8);\n              dom.appendChild(el6, el7);\n              var el7 = dom.createTextNode(\"\\n                                      \");\n              dom.appendChild(el6, el7);\n              var el7 = dom.createElement(\"div\");\n              dom.setAttribute(el7,\"class\",\"form-group required\");\n              var el8 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createElement(\"label\");\n              dom.setAttribute(el8,\"class\",\"col-xs-4\");\n              dom.setAttribute(el8,\"for\",\"id_register_nodes-0-local_gb\");\n              var el9 = dom.createTextNode(\"Local Disk\");\n              dom.appendChild(el8, el9);\n              dom.appendChild(el7, el8);\n              var el8 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createElement(\"div\");\n              dom.setAttribute(el8,\"class\",\"col-xs-6\");\n              dom.setAttribute(el8,\"style\",\"padding-right:5px;\");\n              var el9 = dom.createTextNode(\"\\n                                            \");\n              dom.appendChild(el8, el9);\n              var el9 = dom.createComment(\"\");\n              dom.appendChild(el8, el9);\n              var el9 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el8, el9);\n              dom.appendChild(el7, el8);\n              var el8 = dom.createTextNode(\"\\n                                          \");\n              dom.appendChild(el7, el8);\n              var el8 = dom.createElement(\"div\");\n              dom.setAttribute(el8,\"class\",\"col-xs-2 muted\");\n              dom.setAttribute(el8,\"style\",\"padding:0px;\");\n              var el9 = dom.createTextNode(\"GB\");\n              dom.appendChild(el8, el9);\n              dom.appendChild(el7, el8);\n              var el8 = dom.createTextNode(\"\\n                                      \");\n              dom.appendChild(el7, el8);\n              dom.appendChild(el6, el7);\n              var el7 = dom.createTextNode(\"\\n                                  \");\n              dom.appendChild(el6, el7);\n              dom.appendChild(el5, el6);\n              var el6 = dom.createTextNode(\"\\n                              \");\n              dom.appendChild(el5, el6);\n              dom.appendChild(el4, el5);\n              var el5 = dom.createTextNode(\"\\n                          \");\n              dom.appendChild(el4, el5);\n              dom.appendChild(el3, el4);\n              var el4 = dom.createTextNode(\"\\n                      \");\n              dom.appendChild(el3, el4);\n              dom.appendChild(el2, el3);\n              var el3 = dom.createTextNode(\"\\n                \");\n              dom.appendChild(el2, el3);\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\"\\n            \");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, block = hooks.block, element = hooks.element, content = hooks.content, inline = hooks.inline;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var element5 = dom.childAt(fragment, [2]);\n              var element6 = dom.childAt(element5, [1]);\n              var element7 = dom.childAt(element6, [1, 3, 1]);\n              var element8 = dom.childAt(element5, [3, 1]);\n              var element9 = dom.childAt(element8, [1]);\n              var element10 = dom.childAt(element9, [3]);\n              var element11 = dom.childAt(element10, [1]);\n              var element12 = dom.childAt(element10, [5]);\n              var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n              var morph1 = dom.createMorphAt(dom.childAt(element6, [3]),0,0);\n              var morph2 = dom.createMorphAt(dom.childAt(element6, [7]),1,1);\n              var morph3 = dom.createMorphAt(dom.childAt(element9, [1]),1,1);\n              var morph4 = dom.createMorphAt(dom.childAt(element11, [3, 3]),1,1);\n              var morph5 = dom.createMorphAt(dom.childAt(element11, [5, 3]),1,1);\n              var morph6 = dom.createMorphAt(dom.childAt(element11, [7, 3]),1,1);\n              var morph7 = dom.createMorphAt(dom.childAt(element11, [9, 3]),1,1);\n              var morph8 = dom.createMorphAt(dom.childAt(element10, [3, 3, 3]),1,1);\n              var morph9 = dom.createMorphAt(dom.childAt(element12, [3, 3]),1,1);\n              var morph10 = dom.createMorphAt(dom.childAt(element12, [5, 3]),1,1);\n              var morph11 = dom.createMorphAt(dom.childAt(element12, [7, 3]),1,1);\n              var morph12 = dom.createMorphAt(dom.childAt(element12, [9, 3]),1,1);\n              dom.insertBoundary(fragment, 0);\n              block(env, morph0, context, \"if\", [get(env, context, \"registrationPaused\")], {}, child0, null);\n              element(env, element7, context, \"action\", [\"addProfile\"], {});\n              content(env, morph1, context, \"edittedProfiles.length\");\n              block(env, morph2, context, \"each\", [get(env, context, \"edittedProfiles\")], {\"keyword\": \"profile\"}, child1, null);\n              element(env, element8, context, \"bind-attr\", [], {\"style\": get(env, context, \"nodeFormStyle\")});\n              content(env, morph3, context, \"selectedProfile.name\");\n              inline(env, morph4, context, \"view\", [\"select\"], {\"class\": \"form-control\", \"content\": get(env, context, \"drivers\"), \"value\": get(env, context, \"selectedProfile.driver\"), \"prompt\": \"unspecified\"});\n              inline(env, morph5, context, \"input\", [], {\"class\": \"form-control\", \"value\": get(env, context, \"selectedProfile.ipAddress\"), \"type\": \"text\", \"placeholder\": \"unspecified\"});\n              inline(env, morph6, context, \"input\", [], {\"class\": \"form-control\", \"value\": get(env, context, \"selectedProfile.ipmiUsername\"), \"type\": \"text\"});\n              inline(env, morph7, context, \"input\", [], {\"class\": \"form-control has-feedback\", \"value\": get(env, context, \"selectedProfile.ipmiPassword\"), \"type\": \"password\"});\n              inline(env, morph8, context, \"textarea\", [], {\"class\": \"form-control\", \"value\": get(env, context, \"selectedProfile.nicMacAddress\"), \"cols\": \"40\", \"placeholder\": \"unspecified\", \"rows\": \"2\"});\n              inline(env, morph9, context, \"view\", [\"select\"], {\"class\": \"form-control\", \"content\": get(env, context, \"architectures\"), \"value\": get(env, context, \"selectedProfile.architecture\"), \"prompt\": \"unspecified\"});\n              inline(env, morph10, context, \"input\", [], {\"class\": \"form-control\", \"type\": \"number\", \"value\": get(env, context, \"selectedProfile.cpu\"), \"placeholder\": \"unspecified\"});\n              inline(env, morph11, context, \"input\", [], {\"class\": \"form-control\", \"type\": \"number\", \"value\": get(env, context, \"selectedProfile.ram\"), \"placeholder\": \"unspecified\"});\n              inline(env, morph12, context, \"input\", [], {\"class\": \"form-control\", \"type\": \"number\", \"value\": get(env, context, \"selectedProfile.disk\"), \"placeholder\": \"unspecified\"});\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            block(env, morph0, context, \"if\", [get(env, context, \"async\")], {}, child0, child1);\n            return fragment;\n          }\n        };\n      }());\n      var child2 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"button\");\n            dom.setAttribute(el1,\"type\",\"cancel\");\n            dom.setAttribute(el1,\"class\",\"btn btn-default\");\n            var el2 = dom.createTextNode(\"Cancel\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"button\");\n            dom.setAttribute(el1,\"type\",\"submit\");\n            dom.setAttribute(el1,\"class\",\"btn btn-primary\");\n            var el2 = dom.createTextNode(\"Register Nodes\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, element = hooks.element;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [1]);\n            var element1 = dom.childAt(fragment, [3]);\n            element(env, element0, context, \"bind-attr\", [], {\"disabled\": get(env, context, \"async\")});\n            element(env, element0, context, \"action\", [\"cancelRegisterNodes\"], {});\n            element(env, element1, context, \"bind-attr\", [], {\"disabled\": get(env, context, \"async\")});\n            element(env, element1, context, \"action\", [\"registerNodes\"], {});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          var morph2 = dom.createMorphAt(fragment,5,5,contextualElement);\n          block(env, morph0, context, \"em-modal-title\", [], {}, child0, null);\n          block(env, morph1, context, \"em-modal-body\", [], {}, child1, null);\n          block(env, morph2, context, \"em-modal-footer\", [], {}, child2, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"em-modal-form\", [], {\"configName\": \"bs\", \"id\": \"nodeRegistrationModal\", \"on-submit\": \"registerNodes\", \"open-if\": get(env, context, \"registerNodesModalOpened\"), \"close-if\": get(env, context, \"registerNodesModalClosed\"), \"in-async\": get(env, context, \"async\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/new-organization', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"            \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"span\");\n              dom.setAttribute(el1,\"aria-hidden\",\"true\");\n              var el2 = dom.createTextNode(\"×\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"span\");\n              dom.setAttribute(el1,\"class\",\"sr-only\");\n              var el2 = dom.createTextNode(\"Close\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"h4\");\n            dom.setAttribute(el1,\"class\",\"modal-title\");\n            var el2 = dom.createTextNode(\"Create Organization\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, 0);\n            block(env, morph0, context, \"em-modal-toggler\", [], {\"class\": \"close\"}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"            Submitting, please wait...\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        var child1 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"            \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n            \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n              var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n              inline(env, morph0, context, \"text-f\", [], {\"label\": \"Organization Name\", \"value\": get(env, context, \"defaultOrgName\"), \"labelSize\": \"col-md-4\", \"inputSize\": \"col-md-8\"});\n              inline(env, morph1, context, \"textarea-f\", [], {\"label\": \"Description (Optional)\", \"value\": get(env, context, \"fields_org.description\"), \"labelSize\": \"col-md-4\", \"inputSize\": \"col-md-8\"});\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            block(env, morph0, context, \"if\", [get(env, context, \"async\")], {}, child0, child1);\n            return fragment;\n          }\n        };\n      }());\n      var child2 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"button\");\n            dom.setAttribute(el1,\"type\",\"submit\");\n            dom.setAttribute(el1,\"class\",\"btn btn-primary\");\n            var el2 = dom.createTextNode(\"Submit\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, element = hooks.element;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [1]);\n            element(env, element0, context, \"bind-attr\", [], {\"disabled\": get(env, context, \"async\")});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          var morph2 = dom.createMorphAt(fragment,5,5,contextualElement);\n          block(env, morph0, context, \"em-modal-title\", [], {}, child0, null);\n          block(env, morph1, context, \"em-modal-body\", [], {}, child1, null);\n          block(env, morph2, context, \"em-modal-footer\", [], {}, child2, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"em-modal-form\", [], {\"configName\": \"bs\", \"id\": \"newOrganizationModal\", \"on-submit\": \"createOrganization\", \"in-async\": get(env, context, \"async\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/new-satellite', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"            \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"span\");\n              dom.setAttribute(el1,\"aria-hidden\",\"true\");\n              var el2 = dom.createTextNode(\"×\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"span\");\n              dom.setAttribute(el1,\"class\",\"sr-only\");\n              var el2 = dom.createTextNode(\"Close\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"h4\");\n            dom.setAttribute(el1,\"class\",\"modal-title\");\n            var el2 = dom.createTextNode(\"Register a New Satellite\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, 0);\n            block(env, morph0, context, \"em-modal-toggler\", [], {\"class\": \"close\"}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"            Submitting, please wait...\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        var child1 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"            \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n              inline(env, morph0, context, \"text-f\", [], {\"label\": \"Name\", \"value\": get(env, context, \"newSatelliteName\"), \"labelSize\": \"col-md-4\", \"inputSize\": \"col-md-8\"});\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            block(env, morph0, context, \"if\", [get(env, context, \"async\")], {}, child0, child1);\n            return fragment;\n          }\n        };\n      }());\n      var child2 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"Cancel\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"button\");\n            dom.setAttribute(el1,\"type\",\"submit\");\n            dom.setAttribute(el1,\"class\",\"btn btn-primary\");\n            var el2 = dom.createTextNode(\"Register\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, block = hooks.block, get = hooks.get, element = hooks.element;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [3]);\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            block(env, morph0, context, \"em-modal-toggler\", [], {\"class\": \"btn btn-default\"}, child0, null);\n            element(env, element0, context, \"bind-attr\", [], {\"disabled\": get(env, context, \"async\")});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          var morph2 = dom.createMorphAt(fragment,5,5,contextualElement);\n          block(env, morph0, context, \"em-modal-title\", [], {}, child0, null);\n          block(env, morph1, context, \"em-modal-body\", [], {}, child1, null);\n          block(env, morph2, context, \"em-modal-footer\", [], {}, child2, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"em-modal-form\", [], {\"configName\": \"bs\", \"id\": \"registerNewSatellite\", \"on-submit\": \"createSatellite\", \"in-async\": get(env, context, \"async\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/nodes', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"adfasdf\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/openstack', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"A. Registering Nodes\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n          content(env, morph0, context, \"stepNumberOpenstack\");\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"B. Assigning Nodes\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n          content(env, morph0, context, \"stepNumberOpenstack\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"col-sm-8 col-md-9 col-lg-10 col-sm-push-4 col-md-push-3 col-lg-push-2\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"col-sm-4 col-md-3 col-lg-2 col-sm-pull-8 col-md-pull-9 col-lg-pull-10 sidebar-pf sidebar-pf-left\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"ul\");\n        dom.setAttribute(el2,\"class\",\"nav nav-pills nav-stacked\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [2, 1]);\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);\n        var morph1 = dom.createMorphAt(element0,1,1);\n        var morph2 = dom.createMorphAt(element0,3,3);\n        content(env, morph0, context, \"outlet\");\n        block(env, morph1, context, \"link-to\", [\"register-nodes\"], {\"tagName\": \"li\"}, child0, null);\n        block(env, morph2, context, \"link-to\", [\"assign-nodes\"], {\"tagName\": \"li\"}, child1, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/openstack/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/products', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  Syncronizing content (\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"% complete)\\n  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          content(env, morph0, context, \"prog\");\n          inline(env, morph1, context, \"bs-progress\", [], {\"progressBinding\": \"prog\", \"type\": \"success\", \"stripped\": true, \"animated\": true});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"alert alert-success\");\n          var el2 = dom.createTextNode(\"\\n   Yeah! You successfully synced content!\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createTextNode(\" + \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createTextNode(\" \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createTextNode(\" \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createTextNode(\" \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createTextNode(\" \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          var el3 = dom.createTextNode(\" \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\" \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(dom.childAt(element0, [3]),1,1);\n          var morph1 = dom.createMorphAt(dom.childAt(element0, [5]),1,1);\n          var morph2 = dom.createMorphAt(dom.childAt(element0, [7]),1,1);\n          var morph3 = dom.createMorphAt(dom.childAt(element0, [9]),1,1);\n          var morph4 = dom.createMorphAt(dom.childAt(element0, [11]),1,1);\n          content(env, morph0, context, \"name\");\n          content(env, morph1, context, \"start_time\");\n          content(env, morph2, context, \"duration\");\n          content(env, morph3, context, \"size\");\n          content(env, morph4, context, \"result\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"table\");\n        dom.setAttribute(el1,\"class\",\"table table-bordered table-striped small\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"thead\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"tr\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" Product \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" Start Time \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" Duration \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" Size \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" Result \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"tbody\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"button\");\n        dom.setAttribute(el1,\"class\",\"btn btn-success\");\n        var el2 = dom.createTextNode(\"Sync Products\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, element = hooks.element;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element1 = dom.childAt(fragment, [10]);\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        var morph2 = dom.createMorphAt(dom.childAt(fragment, [6, 3]),1,1);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"syncingInProgress\")], {}, child0, null);\n        block(env, morph1, context, \"if\", [get(env, context, \"showSuccessMessage\")], {}, child1, null);\n        block(env, morph2, context, \"each\", [get(env, context, \"controller.model\")], {\"itemController\": \"satellite/product\"}, child2, null);\n        element(env, element1, context, \"bind-attr\", [], {\"disabled\": get(env, context, \"disableSyncButton\")});\n        element(env, element1, context, \"action\", [\"syncProducts\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/register-nodes', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"row\");\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"col-md-9\");\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"alert alert-success\");\n          var el4 = dom.createTextNode(\"\\n                \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"i\");\n          dom.setAttribute(el4,\"class\",\"fa fa-2x fa-check-circle-o green-circle\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n                 \\n              \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\" registered successfully.\\n            \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1, 1]),3,3);\n          content(env, morph0, context, \"registeredNode.name\");\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"span\");\n          dom.setAttribute(el1,\"class\",\"pficon-layered\");\n          dom.setAttribute(el1,\"data-toggle\",\"tooltip\");\n          dom.setAttribute(el1,\"data-placement\",\"top\");\n          var el2 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"span\");\n          dom.setAttribute(el2,\"class\",\"pficon pficon-error-octagon\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"span\");\n          dom.setAttribute(el2,\"class\",\"pficon pficon-error-exclamation\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"strong\");\n          var el3 = dom.createTextNode(\"Error:\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"  \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, attribute = hooks.attribute, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element2 = dom.childAt(fragment, [1]);\n          var attrMorph0 = dom.createAttrMorph(element2, 'title');\n          var morph0 = dom.createMorphAt(element2,7,7);\n          attribute(env, attrMorph0, element2, \"title\", get(env, context, \"registrationErrorTip\"));\n          content(env, morph0, context, \"registrationErrorMessage\");\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"progress progress-label-top-right\");\n          dom.setAttribute(el1,\"style\",\"width:50%;\");\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"progress-bar\");\n          dom.setAttribute(el2,\"role\",\"progressbar\");\n          dom.setAttribute(el2,\"aria-valuemin\",\"0\");\n          dom.setAttribute(el2,\"aria-valuemax\",\"100\");\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"span\");\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"% (\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\" of \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\")\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, concat = hooks.concat, attribute = hooks.attribute, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1, 1]);\n          var element1 = dom.childAt(element0, [1]);\n          var attrMorph0 = dom.createAttrMorph(element0, 'aria-valuenow');\n          var attrMorph1 = dom.createAttrMorph(element0, 'style');\n          var morph0 = dom.createMorphAt(element1,0,0);\n          var morph1 = dom.createMorphAt(element1,2,2);\n          var morph2 = dom.createMorphAt(element1,4,4);\n          attribute(env, attrMorph0, element0, \"aria-valuenow\", concat(env, [get(env, context, \"nodeRegPercentComplete\"), \"%\"]));\n          attribute(env, attrMorph1, element0, \"style\", concat(env, [\"width: \", get(env, context, \"nodeRegPercentComplete\"), \"%;\"]));\n          content(env, morph0, context, \"nodeRegPercentComplete\");\n          content(env, morph1, context, \"nodeRegComplete\");\n          content(env, morph2, context, \"nodeRegTotal\");\n          return fragment;\n        }\n      };\n    }());\n    var child3 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"p\");\n            var el2 = dom.createTextNode(\"\\n        Currently, there are no registered nodes available. You must have at least ??? nodes in order to continue\\n        this deployment. Use the Register Nodes button below to begin the registration process.\\n      \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"p\");\n            var el2 = dom.createTextNode(\"\\n        You can register more nodes to coalesce into Node Profiles. Use the Register Nodes button below to begin the registration process.\\n      \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"row\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"col-md-5\");\n          var el3 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1]),1,1);\n          block(env, morph0, context, \"if\", [get(env, context, \"noRegisteredNodes\")], {}, child0, child1);\n          return fragment;\n        }\n      };\n    }());\n    var child4 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"            Cancel\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"em-modal-toggler\", [], {\"modal-id\": \"newOrganizationModal\", \"class\": \"btn btn-default\", \"style\": \"margin-right:10px;\"}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child5 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"row\");\n            var el2 = dom.createTextNode(\"\\n          \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"div\");\n            dom.setAttribute(el2,\"class\",\"col-md-7\");\n            var el3 = dom.createTextNode(\"\\n            \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createComment(\"\");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"\\n          \");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n      \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1]),1,1);\n            inline(env, morph0, context, \"node-profile\", [], {\"profile\": get(env, context, \"profile\"), \"stepNumberOpenstack\": get(env, context, \"stepNumberOpenstack\")});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"row\");\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"col-md-5\");\n          var el3 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"h2\");\n          var el4 = dom.createTextNode(\"Coalescing Node Profiles\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,3,3,contextualElement);\n          dom.insertBoundary(fragment, null);\n          block(env, morph0, context, \"each\", [get(env, context, \"model.nodeProfiles\")], {\"keyword\": \"profile\"}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child6 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"              Back\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child7 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Next\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-5\");\n        var el3 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h2\");\n        var el4 = dom.createTextNode(\"Registering Nodes\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"progress-description\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-5\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"      \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"button\");\n        dom.setAttribute(el3,\"class\",\"btn btn-primary\");\n        var el4 = dom.createTextNode(\"\\n          Register Nodes\\n      \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-9\");\n        var el3 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"pull-right\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"          \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, element = hooks.element, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element3 = dom.childAt(fragment, [10, 1]);\n        var element4 = dom.childAt(element3, [3]);\n        var element5 = dom.childAt(fragment, [16, 1, 1]);\n        var morph0 = dom.createMorphAt(fragment,2,2,contextualElement);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [6]),1,1);\n        var morph2 = dom.createMorphAt(fragment,8,8,contextualElement);\n        var morph3 = dom.createMorphAt(element3,1,1);\n        var morph4 = dom.createMorphAt(fragment,12,12,contextualElement);\n        var morph5 = dom.createMorphAt(element5,1,1);\n        var morph6 = dom.createMorphAt(element5,3,3);\n        var morph7 = dom.createMorphAt(fragment,18,18,contextualElement);\n        dom.insertBoundary(fragment, null);\n        block(env, morph0, context, \"if\", [get(env, context, \"showAlertMessage\")], {}, child0, null);\n        block(env, morph1, context, \"if\", [get(env, context, \"registrationError\")], {}, child1, null);\n        block(env, morph2, context, \"if\", [get(env, context, \"registrationInProgress\")], {}, child2, child3);\n        block(env, morph3, context, \"if\", [get(env, context, \"registrationInProgress\")], {}, child4, null);\n        element(env, element4, context, \"action\", [\"showNodeRegistrationModal\"], {});\n        block(env, morph4, context, \"unless\", [get(env, context, \"noRegisteredNodes\")], {}, child5, null);\n        block(env, morph5, context, \"link-to\", [get(env, context, \"satelliteTabRouteName\")], {\"class\": \"btn btn-default\"}, child6, null);\n        block(env, morph6, context, \"link-to\", [\"assign-nodes\"], {\"class\": \"btn btn-primary\", \"disabled\": get(env, context, \"disableRegisterNodesNext\")}, child7, null);\n        inline(env, morph7, context, \"partial\", [\"new-node-registration\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/review', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"A. Review Installation\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n          content(env, morph0, context, \"stepNumberReview\");\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"B. Installation Progress\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n          content(env, morph0, context, \"stepNumberReview\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"col-sm-8 col-md-9 col-lg-10 col-sm-push-4 col-md-push-3 col-lg-push-2\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"col-sm-4 col-md-3 col-lg-2 col-sm-pull-8 col-md-pull-9 col-lg-pull-10 sidebar-pf sidebar-pf-left\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"ul\");\n        dom.setAttribute(el2,\"class\",\"nav nav-pills nav-stacked\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [2, 1]);\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);\n        var morph1 = dom.createMorphAt(element0,1,1);\n        var morph2 = dom.createMorphAt(element0,3,3);\n        content(env, morph0, context, \"outlet\");\n        block(env, morph1, context, \"link-to\", [\"review.installation\"], {\"tagName\": \"li\", \"disabled\": get(env, context, \"disableTabInstallation\")}, child0, null);\n        block(env, morph2, context, \"link-to\", [\"review.progress.overview\"], {\"tagName\": \"li\", \"disabled\": get(env, context, \"disableTabProgress\")}, child1, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/review/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/review/installation', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"row\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"col-md-9\");\n          var el3 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"alert alert-danger\");\n          var el4 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"i\");\n          dom.setAttribute(el4,\"class\",\"fa fa-2x fa-exclamation-triangle errorForValidation\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n           \\n          \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1, 1]),3,3);\n          content(env, morph0, context, \"errorMsg\");\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            content(env, morph0, context, \"controllers.deployment.name\");\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            content(env, morph0, context, \"controllers.deployment.organization.name\");\n            return fragment;\n          }\n        };\n      }());\n      var child2 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            content(env, morph0, context, \"controllers.deployment.lifecycle_environment.name\");\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      Name: \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"br\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n      Organization: \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"br\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n      Environment: \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"br\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,5,5,contextualElement);\n          var morph2 = dom.createMorphAt(fragment,9,9,contextualElement);\n          block(env, morph0, context, \"link-to\", [\"satellite\"], {}, child0, null);\n          block(env, morph1, context, \"link-to\", [\"configure-organization\"], {}, child1, null);\n          block(env, morph2, context, \"link-to\", [\"configure-environment\"], {}, child2, null);\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\" \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\" \");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, content = hooks.content;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n              content(env, morph0, context, \"controllers.rhev-setup.rhevSetupTitle\");\n              return fragment;\n            }\n          };\n        }());\n        var child1 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"          \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n              inline(env, morph0, context, \"review-link\", [], {\"label\": \"Hypervisor/Engine\", \"routeName\": \"engine.discovered-host\", \"isRequired\": true, \"value\": get(env, context, \"selectedRhevEngine.name\")});\n              return fragment;\n            }\n          };\n        }());\n        var child2 = (function() {\n          var child0 = (function() {\n            var child0 = (function() {\n              var child0 = (function() {\n                return {\n                  isHTMLBars: true,\n                  revision: \"Ember@1.11.1\",\n                  blockParams: 0,\n                  cachedFragment: null,\n                  hasRendered: false,\n                  build: function build(dom) {\n                    var el0 = dom.createDocumentFragment();\n                    var el1 = dom.createTextNode(\" \");\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createComment(\"\");\n                    dom.appendChild(el0, el1);\n                    var el1 = dom.createTextNode(\".rhci.redhat.com \");\n                    dom.appendChild(el0, el1);\n                    return el0;\n                  },\n                  render: function render(context, env, contextualElement) {\n                    var dom = env.dom;\n                    var hooks = env.hooks, content = hooks.content;\n                    dom.detectNamespace(contextualElement);\n                    var fragment;\n                    if (env.useFragmentCache && dom.canClone) {\n                      if (this.cachedFragment === null) {\n                        fragment = this.build(dom);\n                        if (this.hasRendered) {\n                          this.cachedFragment = fragment;\n                        } else {\n                          this.hasRendered = true;\n                        }\n                      }\n                      if (this.cachedFragment) {\n                        fragment = dom.cloneNode(this.cachedFragment, true);\n                      }\n                    } else {\n                      fragment = this.build(dom);\n                    }\n                    var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n                    content(env, morph0, context, \"host.name\");\n                    return fragment;\n                  }\n                };\n              }());\n              return {\n                isHTMLBars: true,\n                revision: \"Ember@1.11.1\",\n                blockParams: 0,\n                cachedFragment: null,\n                hasRendered: false,\n                build: function build(dom) {\n                  var el0 = dom.createDocumentFragment();\n                  var el1 = dom.createTextNode(\"                  \");\n                  dom.appendChild(el0, el1);\n                  var el1 = dom.createComment(\"\");\n                  dom.appendChild(el0, el1);\n                  var el1 = dom.createElement(\"br\");\n                  dom.appendChild(el0, el1);\n                  var el1 = dom.createTextNode(\"\\n\");\n                  dom.appendChild(el0, el1);\n                  return el0;\n                },\n                render: function render(context, env, contextualElement) {\n                  var dom = env.dom;\n                  var hooks = env.hooks, block = hooks.block;\n                  dom.detectNamespace(contextualElement);\n                  var fragment;\n                  if (env.useFragmentCache && dom.canClone) {\n                    if (this.cachedFragment === null) {\n                      fragment = this.build(dom);\n                      if (this.hasRendered) {\n                        this.cachedFragment = fragment;\n                      } else {\n                        this.hasRendered = true;\n                      }\n                    }\n                    if (this.cachedFragment) {\n                      fragment = dom.cloneNode(this.cachedFragment, true);\n                    }\n                  } else {\n                    fragment = this.build(dom);\n                  }\n                  var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n                  block(env, morph0, context, \"link-to\", [\"hypervisor.discovered-host\"], {}, child0, null);\n                  return fragment;\n                }\n              };\n            }());\n            return {\n              isHTMLBars: true,\n              revision: \"Ember@1.11.1\",\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"              \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createElement(\"br\");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createComment(\"\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, get = hooks.get, block = hooks.block;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var morph0 = dom.createMorphAt(fragment,3,3,contextualElement);\n                dom.insertBoundary(fragment, null);\n                block(env, morph0, context, \"each\", [get(env, context, \"selectedHypervisorHosts\")], {\"keyword\": \"host\"}, child0, null);\n                return fragment;\n              }\n            };\n          }());\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"          \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\\n\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, inline = hooks.inline, block = hooks.block;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n              var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n              dom.insertBoundary(fragment, null);\n              inline(env, morph0, context, \"review-link\", [], {\"label\": \"Engine\", \"routeName\": \"engine.discovered-host\", \"isRequired\": true, \"value\": get(env, context, \"selectedRhevEngine.name\")});\n              block(env, morph1, context, \"review-link\", [], {\"label\": \"Hypervisor(s)\", \"routeName\": \"hypervisor.discovered-host\", \"isRequired\": true, \"value\": get(env, context, \"selectedHypervisorHosts\"), \"useYieldInstead\": true}, child0, null);\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"\\n      Setup Type: \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"br\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"br\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\\n      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\\n      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\\n      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\\n      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\\n      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\\n      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\\n      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\\n      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\\n      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\\n      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"br\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, block = hooks.block, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            var morph1 = dom.createMorphAt(fragment,5,5,contextualElement);\n            var morph2 = dom.createMorphAt(fragment,9,9,contextualElement);\n            var morph3 = dom.createMorphAt(fragment,11,11,contextualElement);\n            var morph4 = dom.createMorphAt(fragment,13,13,contextualElement);\n            var morph5 = dom.createMorphAt(fragment,15,15,contextualElement);\n            var morph6 = dom.createMorphAt(fragment,17,17,contextualElement);\n            var morph7 = dom.createMorphAt(fragment,19,19,contextualElement);\n            var morph8 = dom.createMorphAt(fragment,21,21,contextualElement);\n            var morph9 = dom.createMorphAt(fragment,23,23,contextualElement);\n            var morph10 = dom.createMorphAt(fragment,25,25,contextualElement);\n            block(env, morph0, context, \"link-to\", [\"rhev-setup\"], {}, child0, null);\n            block(env, morph1, context, \"if\", [get(env, context, \"isSelfHosted\")], {}, child1, child2);\n            inline(env, morph2, context, \"review-link\", [], {\"label\": \"Root password for Engine and Hypervisor(s)\", \"routeName\": \"rhev-options\", \"isRequired\": true, \"isPassword\": true, \"value\": get(env, context, \"controllers.deployment.rhev_root_password\")});\n            inline(env, morph3, context, \"review-link\", [], {\"label\": \"Engine admin password\", \"routeName\": \"rhev-options\", \"isRequired\": true, \"isPassword\": true, \"value\": get(env, context, \"controllers.deployment.rhev_engine_admin_password\")});\n            inline(env, morph4, context, \"review-link\", [], {\"label\": \"Datacenter Name\", \"routeName\": \"rhev-options\", \"isDefault\": true, \"value\": get(env, context, \"controllers.deployment.rhev_database_name\")});\n            inline(env, morph5, context, \"review-link\", [], {\"label\": \"Cluster Name\", \"routeName\": \"rhev-options\", \"isDefault\": true, \"value\": get(env, context, \"controllers.deployment.rhev_cluster_name\")});\n            inline(env, morph6, context, \"review-link\", [], {\"label\": \"Storage Name\", \"routeName\": \"rhev-options\", \"isDefault\": true, \"value\": get(env, context, \"controllers.deployment.rhev_storage_name\")});\n            inline(env, morph7, context, \"review-link\", [], {\"label\": \"CPU Type\", \"routeName\": \"rhev-options\", \"isDefault\": true, \"value\": get(env, context, \"controllers.deployment.rhev_cpu_type\")});\n            inline(env, morph8, context, \"review-link\", [], {\"label\": \"Storage Type\", \"routeName\": \"storage\", \"isRequired\": true, \"value\": get(env, context, \"controllers.deployment.rhev_storage_type\")});\n            inline(env, morph9, context, \"review-link\", [], {\"label\": \"Storage Address\", \"routeName\": \"storage\", \"isDefault\": true, \"value\": get(env, context, \"controllers.deployment.rhev_storage_address\")});\n            inline(env, morph10, context, \"review-link\", [], {\"label\": \"Storage Path\", \"routeName\": \"storage\", \"isDefault\": true, \"value\": get(env, context, \"controllers.deployment.rhev_share_path\")});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"accordion-item\", [], {\"name\": get(env, context, \"controllers.deployment.nameRhev\"), \"isOpen\": get(env, context, \"isRhevOpen\")}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child3 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"accordion-item\", [], {\"name\": get(env, context, \"controllers.deployment.nameOpenStack\"), \"isOpen\": get(env, context, \"isOpenStackOpen\")}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child4 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"          \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, content = hooks.content;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n              content(env, morph0, context, \"controllers.deployment.cfme_install_loc\");\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"      Installation Location:\\n\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"br\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"br\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, block = hooks.block, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            var morph1 = dom.createMorphAt(fragment,5,5,contextualElement);\n            block(env, morph0, context, \"link-to\", [\"where-install\"], {}, child0, null);\n            inline(env, morph1, context, \"review-link\", [], {\"label\": \"CFME Root password\", \"routeName\": \"cloudforms.cfme-configuration\", \"isRequired\": true, \"isPassword\": true, \"value\": get(env, context, \"controllers.deployment.cfme_root_password\")});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"accordion-item\", [], {\"name\": get(env, context, \"controllers.deployment.nameCloudForms\"), \"isOpen\": get(env, context, \"isCloudFormsOpen\")}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child5 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"          \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, content = hooks.content;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n              content(env, morph0, context, \"controllers.deployment.upstream_consumer_name\");\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"      Subscription Management Application:\\n\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"br\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            block(env, morph0, context, \"link-to\", [\"subscriptions.management-application\"], {}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"accordion-item\", [], {\"name\": \"Subscriptions\", \"isOpen\": get(env, context, \"isSubscriptionsOpen\")}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child6 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"br\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" Skip Content (DEV ONLY)\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,5,5,contextualElement);\n          inline(env, morph0, context, \"button-f\", [], {\"disabled\": get(env, context, \"buttonDeployDisabled\"), \"title\": get(env, context, \"buttonDeployTitle\"), \"action\": \"installDeployment\"});\n          inline(env, morph1, context, \"input\", [], {\"type\": \"checkbox\", \"name\": \"skipContent\", \"checked\": get(env, context, \"skipContent\")});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-11 col-md-offset-1\");\n        var el3 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [2, 1]);\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(element0,1,1);\n        var morph2 = dom.createMorphAt(element0,3,3);\n        var morph3 = dom.createMorphAt(element0,5,5);\n        var morph4 = dom.createMorphAt(element0,7,7);\n        var morph5 = dom.createMorphAt(element0,9,9);\n        var morph6 = dom.createMorphAt(element0,11,11);\n        var morph7 = dom.createMorphAt(fragment,4,4,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"showErrorMessage\")], {}, child0, null);\n        block(env, morph1, context, \"accordion-item\", [], {\"name\": get(env, context, \"controllers.deployment.nameSatellite\"), \"isOpen\": true}, child1, null);\n        block(env, morph2, context, \"if\", [get(env, context, \"isRhev\")], {}, child2, null);\n        block(env, morph3, context, \"if\", [get(env, context, \"isOpenStack\")], {}, child3, null);\n        block(env, morph4, context, \"if\", [get(env, context, \"isCloudForms\")], {}, child4, null);\n        block(env, morph5, context, \"if\", [get(env, context, \"isSubscriptions\")], {}, child5, null);\n        block(env, morph6, context, \"cancel-back-next\", [], {\"backRouteName\": \"\", \"disableBack\": false, \"parentController\": get(env, context, \"controller\")}, child6, null);\n        content(env, morph7, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/review/progress', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"row\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"col-md-9\");\n          var el3 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"alert alert-danger\");\n          var el4 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"i\");\n          dom.setAttribute(el4,\"class\",\"fa fa-2x fa-exclamation-triangle errorForValidation\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n           \\n          \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1, 1]),3,3);\n          content(env, morph0, context, \"errorMsg\");\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"          \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createTextNode(\"Overview\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"          \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createTextNode(\"Details\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-12\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"ul\");\n        dom.setAttribute(el3,\"class\",\"nav nav-tabs col-md-12\");\n        dom.setAttribute(el3,\"data-tabs\",\"pills\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"col-md-12\");\n        var el4 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"br\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"br\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"pull-right\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"br\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"button\");\n        dom.setAttribute(el4,\"class\",\"btn btn-default\");\n        var el5 = dom.createTextNode(\"Cancel\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, content = hooks.content, element = hooks.element, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [2, 1]);\n        var element1 = dom.childAt(element0, [1]);\n        var element2 = dom.childAt(element0, [9]);\n        var element3 = dom.childAt(element2, [3]);\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(element1,1,1);\n        var morph2 = dom.createMorphAt(element1,2,2);\n        var morph3 = dom.createMorphAt(dom.childAt(element0, [3]),1,1);\n        var morph4 = dom.createMorphAt(element2,5,5);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"showErrorMessage\")], {}, child0, null);\n        block(env, morph1, context, \"link-to\", [\"review.progress.overview\"], {\"tagName\": \"li\"}, child1, null);\n        block(env, morph2, context, \"link-to\", [\"review.progress.details\"], {\"tagName\": \"li\"}, child2, null);\n        content(env, morph3, context, \"outlet\");\n        element(env, element3, context, \"action\", [\"showModal\", \"cancelDeploymentModal\"], {});\n        inline(env, morph4, context, \"button-f\", [], {\"disabled\": get(env, context, \"buttonDeployDisabled\"), \"title\": get(env, context, \"buttonDeployTitle\"), \"action\": \"installDeployment\"});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/review/progress/details', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-9\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"table\");\n        dom.setAttribute(el3,\"class\",\"table table-striped\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"thead\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"th\");\n        var el6 = dom.createTextNode(\"Product\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"th\");\n        var el6 = dom.createTextNode(\"Action\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"th\");\n        var el6 = dom.createTextNode(\"State\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"th\");\n        var el6 = dom.createTextNode(\"Result\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"th\");\n        var el6 = dom.createTextNode(\"Started at\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"th\");\n        var el6 = dom.createTextNode(\"User\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"th\");\n        var el6 = dom.createTextNode(\"Action\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"tbody\");\n        var el5 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0, 1, 1, 3]),1,1);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        inline(env, morph0, context, \"tr-task\", [], {\"task\": get(env, context, \"model\"), \"selectedTask\": get(env, context, \"selectedTask\"), \"action\": \"chooseTask\"});\n        content(env, morph1, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/review/progress/details/task', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createTextNode(\"Task\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createTextNode(\"Running Steps\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createTextNode(\"Errors\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child3 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createTextNode(\"Locks\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child4 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createTextNode(\"Raw\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h2\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"ul\");\n        dom.setAttribute(el1,\"class\",\"nav nav-tabs col-md-12\");\n        dom.setAttribute(el1,\"data-tabs\",\"pills\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"col-md-12\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [2]);\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);\n        var morph1 = dom.createMorphAt(element0,1,1);\n        var morph2 = dom.createMorphAt(element0,2,2);\n        var morph3 = dom.createMorphAt(element0,3,3);\n        var morph4 = dom.createMorphAt(element0,4,4);\n        var morph5 = dom.createMorphAt(element0,5,5);\n        var morph6 = dom.createMorphAt(dom.childAt(fragment, [4]),1,1);\n        content(env, morph0, context, \"label\");\n        block(env, morph1, context, \"link-to\", [\"review.progress.details.task.index\"], {\"tagName\": \"li\"}, child0, null);\n        block(env, morph2, context, \"link-to\", [\"review.progress.details.task.running_steps\"], {\"tagName\": \"li\"}, child1, null);\n        block(env, morph3, context, \"link-to\", [\"review.progress.details.task.task_errors\"], {\"tagName\": \"li\"}, child2, null);\n        block(env, morph4, context, \"link-to\", [\"review.progress.details.task.task_locks\"], {\"tagName\": \"li\"}, child3, null);\n        block(env, morph5, context, \"link-to\", [\"review.progress.details.task.task_raw\"], {\"tagName\": \"li\"}, child4, null);\n        content(env, morph6, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/review/progress/details/task/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"div\");\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"span\");\n          dom.setAttribute(el2,\"class\",\"param-name\");\n          var el3 = dom.createTextNode(\"Parent task\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"div\");\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"span\");\n          dom.setAttribute(el2,\"class\",\"param-name\");\n          var el3 = dom.createTextNode(\"Sub tasks\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"div\");\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"span\");\n          dom.setAttribute(el2,\"class\",\"param-name\");\n          var el3 = dom.createTextNode(\"Output:\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"span\");\n          dom.setAttribute(el2,\"class\",\"param-value\");\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"pre\");\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [0, 3, 1]),0,0);\n          content(env, morph0, context, \"model.humanized_output\");\n          return fragment;\n        }\n      };\n    }());\n    var child3 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"div\");\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"span\");\n          dom.setAttribute(el2,\"class\",\"param-name\");\n          var el3 = dom.createTextNode(\"Errors:\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"span\");\n          dom.setAttribute(el2,\"class\",\"param-value\");\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"pre\");\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [0, 3, 1]),0,0);\n          content(env, morph0, context, \"model.humanized_errors\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"span\");\n        dom.setAttribute(el2,\"class\",\"param-name\");\n        var el3 = dom.createTextNode(\"Id:\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"span\");\n        dom.setAttribute(el2,\"class\",\"param-value\");\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"span\");\n        dom.setAttribute(el2,\"class\",\"param-name\");\n        var el3 = dom.createTextNode(\"Label:\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"span\");\n        dom.setAttribute(el2,\"class\",\"param-value\");\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"span\");\n        dom.setAttribute(el2,\"class\",\"param-name\");\n        var el3 = dom.createTextNode(\"Name:\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"span\");\n        dom.setAttribute(el2,\"class\",\"param-value\");\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"span\");\n        dom.setAttribute(el2,\"class\",\"param-name\");\n        var el3 = dom.createTextNode(\"Owner:\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"span\");\n        dom.setAttribute(el2,\"class\",\"param-value\");\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"span\");\n        dom.setAttribute(el2,\"class\",\"param-name\");\n        var el3 = dom.createTextNode(\"Started at:\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"span\");\n        dom.setAttribute(el2,\"class\",\"param-value\");\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"span\");\n        dom.setAttribute(el2,\"class\",\"param-name\");\n        var el3 = dom.createTextNode(\"Ended at:\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"span\");\n        dom.setAttribute(el2,\"class\",\"param-value\");\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"span\");\n        dom.setAttribute(el2,\"class\",\"param-name\");\n        var el3 = dom.createTextNode(\"State:\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"span\");\n        dom.setAttribute(el2,\"class\",\"param-value\");\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"span\");\n        dom.setAttribute(el2,\"class\",\"param-name\");\n        var el3 = dom.createTextNode(\"Result:\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"span\");\n        dom.setAttribute(el2,\"class\",\"param-value\");\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"span\");\n        dom.setAttribute(el2,\"class\",\"param-name\");\n        var el3 = dom.createTextNode(\"Params:\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"span\");\n        dom.setAttribute(el2,\"class\",\"param-value\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-8\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"progress-bar-label\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n       \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\": \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"span\");\n        dom.setAttribute(el4,\"class\",\"no-bold\");\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"pull-right\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"%\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"progress\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"role\",\"progressbar\");\n        dom.setAttribute(el4,\"aria-valuemin\",\"0\");\n        dom.setAttribute(el4,\"aria-valuemax\",\"100\");\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, block = hooks.block, get = hooks.get, inline = hooks.inline, attribute = hooks.attribute;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [23, 1]);\n        var element1 = dom.childAt(element0, [1]);\n        var element2 = dom.childAt(element0, [3, 1]);\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 3]),0,0);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [3, 3]),0,0);\n        var morph2 = dom.createMorphAt(dom.childAt(fragment, [5, 3]),0,0);\n        var morph3 = dom.createMorphAt(dom.childAt(fragment, [7, 3]),0,0);\n        var morph4 = dom.createMorphAt(dom.childAt(fragment, [9, 3]),0,0);\n        var morph5 = dom.createMorphAt(dom.childAt(fragment, [11, 3]),0,0);\n        var morph6 = dom.createMorphAt(dom.childAt(fragment, [13, 3]),0,0);\n        var morph7 = dom.createMorphAt(dom.childAt(fragment, [15, 3]),0,0);\n        var morph8 = dom.createMorphAt(fragment,19,19,contextualElement);\n        var morph9 = dom.createMorphAt(fragment,21,21,contextualElement);\n        var morph10 = dom.createMorphAt(element1,1,1);\n        var morph11 = dom.createMorphAt(element1,3,3);\n        var morph12 = dom.createMorphAt(dom.childAt(element1, [5]),0,0);\n        var morph13 = dom.createMorphAt(element1,7,7);\n        var morph14 = dom.createMorphAt(element1,9,9);\n        var morph15 = dom.createMorphAt(dom.childAt(element1, [11]),1,1);\n        var attrMorph0 = dom.createAttrMorph(element2, 'class');\n        var attrMorph1 = dom.createAttrMorph(element2, 'aria-valuenow');\n        var attrMorph2 = dom.createAttrMorph(element2, 'style');\n        var morph16 = dom.createMorphAt(fragment,25,25,contextualElement);\n        var morph17 = dom.createMorphAt(fragment,27,27,contextualElement);\n        dom.insertBoundary(fragment, null);\n        content(env, morph0, context, \"model.id\");\n        content(env, morph1, context, \"model.label\");\n        content(env, morph2, context, \"model.humanized_name\");\n        content(env, morph3, context, \"model.username\");\n        content(env, morph4, context, \"model.started_at\");\n        content(env, morph5, context, \"model.ended_at\");\n        content(env, morph6, context, \"model.state\");\n        content(env, morph7, context, \"model.result\");\n        block(env, morph8, context, \"if\", [false], {}, child0, null);\n        block(env, morph9, context, \"if\", [false], {}, child1, null);\n        inline(env, morph10, context, \"fa-icon\", [\"spinner\"], {\"spin\": get(env, context, \"isSpin\")});\n        content(env, morph11, context, \"progressBarMsg\");\n        content(env, morph12, context, \"controller.progressBarSubMsg\");\n        content(env, morph13, context, \"model.humanized_errors\");\n        content(env, morph14, context, \"model.humanized_errors\");\n        content(env, morph15, context, \"controller.percentProgress\");\n        attribute(env, attrMorph0, element2, \"class\", get(env, context, \"progressBarClass\"));\n        attribute(env, attrMorph1, element2, \"aria-valuenow\", get(env, context, \"controller.percentProgressInt\"));\n        attribute(env, attrMorph2, element2, \"style\", get(env, context, \"controller.styleWidth\"));\n        block(env, morph16, context, \"if\", [true], {}, child2, null);\n        block(env, morph17, context, \"if\", [true], {}, child3, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/review/progress/details/task/running-steps', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"NEED TODO running steps\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/review/progress/details/task/task-errors', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"NEED TODO ERRORS\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/review/progress/details/task/task-locks', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"NEED TODO LOCKS\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/review/progress/details/task/task-raw', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"NEED TODO task RAW\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/review/progress/overview', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"i\");\n          dom.setAttribute(el1,\"class\",\"fa fa-check-circle-o green-circle\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\" \\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"i\");\n            dom.setAttribute(el1,\"class\",\"fa fa-exclamation-triangle errorForValidation\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\" \\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"spinner spinner-xs spinner-inline\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n      \");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"if\", [get(env, context, \"isError\")], {}, child0, child1);\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"row\");\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"col-md-1\");\n          var el3 = dom.createTextNode(\"\\n    Openstack\\n  \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\\n  \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"col-md-8\");\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"progress-bar-label\");\n          var el4 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"i\");\n          dom.setAttribute(el4,\"class\",\"fa fa-spinner spin\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n       Downloading: \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"span\");\n          dom.setAttribute(el4,\"class\",\"no-bold\");\n          var el5 = dom.createTextNode(\"Installing components\");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"div\");\n          dom.setAttribute(el4,\"class\",\"pull-right\");\n          var el5 = dom.createTextNode(\"\\n        5%\\n      \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"progress\");\n          var el4 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"div\");\n          dom.setAttribute(el4,\"class\",\"progress-bar\");\n          dom.setAttribute(el4,\"role\",\"progressbar\");\n          dom.setAttribute(el4,\"aria-valuenow\",\"5\");\n          dom.setAttribute(el4,\"aria-valuemin\",\"0\");\n          dom.setAttribute(el4,\"aria-valuemax\",\"100\");\n          dom.setAttribute(el4,\"style\",\"width: 5%;\");\n          var el5 = dom.createTextNode(\"\\n      NEED TODO\\n      \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child3 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"row\");\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"col-md-1\");\n          var el3 = dom.createTextNode(\"\\n    Cloudforms\\n  \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\\n  \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"col-md-8\");\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"progress-bar-label\");\n          var el4 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"i\");\n          dom.setAttribute(el4,\"class\",\"fa fa-exclamation-circle errorForValidation\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n       Error: \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"span\");\n          dom.setAttribute(el4,\"class\",\"no-bold\");\n          var el5 = dom.createTextNode(\"Installing components\");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"div\");\n          dom.setAttribute(el4,\"class\",\"pull-right\");\n          var el5 = dom.createTextNode(\"\\n        12%\\n      \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"progress\");\n          var el4 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"div\");\n          dom.setAttribute(el4,\"class\",\"progress-bar progress-bar-danger\");\n          dom.setAttribute(el4,\"role\",\"progressbar\");\n          dom.setAttribute(el4,\"aria-valuenow\",\"12\");\n          dom.setAttribute(el4,\"aria-valuemin\",\"0\");\n          dom.setAttribute(el4,\"aria-valuemax\",\"100\");\n          dom.setAttribute(el4,\"style\",\"width: 12%;\");\n          var el5 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-1\");\n        var el3 = dom.createTextNode(\"\\n    Satellite\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-8\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"progress-bar-label\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"i\");\n        dom.setAttribute(el4,\"class\",\"fa fa-check-circle-o green-circle\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n       Deployment successful\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"pull-right\");\n        var el5 = dom.createTextNode(\"\\n        100%\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"progress\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"progress-bar progress-bar-success\");\n        dom.setAttribute(el4,\"role\",\"progressbar\");\n        dom.setAttribute(el4,\"aria-valuenow\",\"100\");\n        dom.setAttribute(el4,\"aria-valuemin\",\"0\");\n        dom.setAttribute(el4,\"aria-valuemax\",\"100\");\n        dom.setAttribute(el4,\"style\",\"width: 100%;\");\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-1\");\n        var el3 = dom.createTextNode(\"\\n    RHEV\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-8\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"progress-bar-label\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\": \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"span\");\n        dom.setAttribute(el4,\"class\",\"no-bold\");\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\" \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"pull-right\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"%\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"progress\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"role\",\"progressbar\");\n        dom.setAttribute(el4,\"aria-valuemin\",\"0\");\n        dom.setAttribute(el4,\"aria-valuemax\",\"100\");\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, content = hooks.content, attribute = hooks.attribute;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [2, 3]);\n        var element1 = dom.childAt(element0, [1]);\n        var element2 = dom.childAt(element0, [3, 1]);\n        var morph0 = dom.createMorphAt(element1,1,1);\n        var morph1 = dom.createMorphAt(element1,3,3);\n        var morph2 = dom.createMorphAt(dom.childAt(element1, [5]),0,0);\n        var morph3 = dom.createMorphAt(element1,7,7);\n        var morph4 = dom.createMorphAt(dom.childAt(element1, [9]),1,1);\n        var attrMorph0 = dom.createAttrMorph(element2, 'class');\n        var attrMorph1 = dom.createAttrMorph(element2, 'aria-valuenow');\n        var attrMorph2 = dom.createAttrMorph(element2, 'style');\n        var morph5 = dom.createMorphAt(fragment,4,4,contextualElement);\n        var morph6 = dom.createMorphAt(fragment,6,6,contextualElement);\n        dom.insertBoundary(fragment, null);\n        block(env, morph0, context, \"if\", [get(env, context, \"isFinished\")], {}, child0, child1);\n        content(env, morph1, context, \"progressBarMsg\");\n        content(env, morph2, context, \"controller.progressBarSubMsg\");\n        content(env, morph3, context, \"model.humanized_errors\");\n        content(env, morph4, context, \"controller.percentProgress\");\n        attribute(env, attrMorph0, element2, \"class\", get(env, context, \"progressBarClass\"));\n        attribute(env, attrMorph1, element2, \"aria-valuenow\", get(env, context, \"controller.percentProgressInt\"));\n        attribute(env, attrMorph2, element2, \"style\", get(env, context, \"controller.styleWidth\"));\n        block(env, morph5, context, \"if\", [false], {}, child2, null);\n        block(env, morph6, context, \"if\", [false], {}, child3, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/rhci', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/rhev-options', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"h4\");\n        var el2 = dom.createTextNode(\" Engine Configuration \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-12\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"br\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"form\");\n        dom.setAttribute(el3,\"class\",\"form form-horizontal\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [2, 1, 3]);\n        var morph0 = dom.createMorphAt(element0,1,1);\n        var morph1 = dom.createMorphAt(element0,3,3);\n        var morph2 = dom.createMorphAt(element0,5,5);\n        var morph3 = dom.createMorphAt(element0,7,7);\n        var morph4 = dom.createMorphAt(element0,9,9);\n        var morph5 = dom.createMorphAt(element0,11,11);\n        var morph6 = dom.createMorphAt(fragment,4,4,contextualElement);\n        inline(env, morph0, context, \"text-f\", [], {\"label\": \"Root password for Engine and Hypervisor(s)\", \"type\": \"password\", \"value\": get(env, context, \"rhev_root_password\"), \"cssId\": \"rhev_root_password\", \"isRequired\": true});\n        inline(env, morph1, context, \"text-f\", [], {\"label\": \"Engine admin password\", \"type\": \"password\", \"value\": get(env, context, \"rhev_engine_admin_password\"), \"cssId\": \"rhev_engine_admin_password\", \"isRequired\": true});\n        inline(env, morph2, context, \"text-f\", [], {\"label\": \"Datacenter Name\", \"value\": get(env, context, \"rhev_database_name\"), \"placeholder\": \"Leave blank for default\", \"cssId\": \"rhev_database_name\"});\n        inline(env, morph3, context, \"text-f\", [], {\"label\": \"Cluster Name\", \"value\": get(env, context, \"rhev_cluster_name\"), \"placeholder\": \"Leave blank for default\", \"cssId\": \"rhev_cluster_name\"});\n        inline(env, morph4, context, \"text-f\", [], {\"label\": \"Storage name\", \"value\": get(env, context, \"rhev_storage_name\"), \"placeholder\": \"Leave blank for default\", \"cssId\": \"rhev_storage_name\"});\n        inline(env, morph5, context, \"text-f\", [], {\"label\": \"CPU Type\", \"value\": get(env, context, \"rhev_cpu_type\"), \"placeholder\": \"Leave blank for default\", \"help-inline\": \"\", \"cssId\": \"rhev_cpu_type\"});\n        inline(env, morph6, context, \"cancel-back-next\", [], {\"backRouteName\": get(env, context, \"optionsBackRouteName\"), \"disableBack\": false, \"nextRouteName\": \"storage\", \"disableNext\": false});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/rhev-setup', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Self-hosted\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Hypervisor + engine\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-9\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"\\n      Select the setup type.\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"ident-radio\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"ident-radio\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0, 1]);\n        var morph0 = dom.createMorphAt(dom.childAt(element0, [3]),1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(element0, [5]),1,1);\n        var morph2 = dom.createMorphAt(fragment,4,4,contextualElement);\n        block(env, morph0, context, \"radio-button\", [], {\"value\": \"selfhost\", \"groupValue\": get(env, context, \"rhevSetup\"), \"changed\": \"rhevSetupChanged\", \"id\": \"selfhost\"}, child0, null);\n        block(env, morph1, context, \"radio-button\", [], {\"value\": \"rhevhost\", \"groupValue\": get(env, context, \"rhevSetup\"), \"changed\": \"rhevSetupChanged\", \"id\": \"rhevhost\"}, child1, null);\n        inline(env, morph2, context, \"cancel-back-next\", [], {\"backRouteName\": \"configure-environment\", \"disableBack\": false, \"nextRouteName\": \"engine.discovered-host\", \"disableNext\": false});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/rhev', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createTextNode(\"2A. Setup Type\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createTextNode(\"2B. \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),1,1);\n          content(env, morph0, context, \"engineTabName\");\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"a\");\n            var el2 = dom.createTextNode(\"2C. Hypervisors\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"link-to\", [\"hypervisor\"], {\"tagName\": \"li\"}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child3 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\". Configuration\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n          inline(env, morph0, context, \"if\", [get(env, context, \"isSelfHost\"), \"2C\", \"2D\"], {});\n          return fragment;\n        }\n      };\n    }());\n    var child4 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\". Storage\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n          inline(env, morph0, context, \"if\", [get(env, context, \"isSelfHost\"), \"2D\", \"2E\"], {});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"col-sm-8 col-md-9 col-lg-10 col-sm-push-4 col-md-push-3 col-lg-push-2\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"col-sm-4 col-md-3 col-lg-2 col-sm-pull-8 col-md-pull-9 col-lg-pull-10 sidebar-pf sidebar-pf-left\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"ul\");\n        dom.setAttribute(el2,\"class\",\"nav nav-pills nav-stacked\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, block = hooks.block, get = hooks.get;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [2, 1]);\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);\n        var morph1 = dom.createMorphAt(element0,1,1);\n        var morph2 = dom.createMorphAt(element0,3,3);\n        var morph3 = dom.createMorphAt(element0,5,5);\n        var morph4 = dom.createMorphAt(element0,7,7);\n        var morph5 = dom.createMorphAt(element0,9,9);\n        content(env, morph0, context, \"outlet\");\n        block(env, morph1, context, \"link-to\", [\"rhev-setup\"], {\"tagName\": \"li\"}, child0, null);\n        block(env, morph2, context, \"link-to\", [\"engine\"], {\"tagName\": \"li\"}, child1, null);\n        block(env, morph3, context, \"unless\", [get(env, context, \"isSelfHost\")], {}, child2, null);\n        block(env, morph4, context, \"link-to\", [\"rhev-options\"], {\"tagName\": \"li\"}, child3, null);\n        block(env, morph5, context, \"link-to\", [\"storage\"], {\"tagName\": \"li\"}, child4, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/satellite', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createTextNode(\"1A. Deployment Name\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createTextNode(\"1B. Configure Organization\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createTextNode(\"1C. Configure Lifecycle Environment\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"col-sm-8 col-md-9 col-lg-10 col-sm-push-4 col-md-push-3 col-lg-push-2\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"col-sm-4 col-md-3 col-lg-2 col-sm-pull-8 col-md-pull-9 col-lg-pull-10 sidebar-pf sidebar-pf-left\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"ul\");\n        dom.setAttribute(el2,\"class\",\"nav nav-pills nav-stacked\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [2, 1]);\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);\n        var morph1 = dom.createMorphAt(element0,1,1);\n        var morph2 = dom.createMorphAt(element0,2,2);\n        var morph3 = dom.createMorphAt(element0,3,3);\n        content(env, morph0, context, \"outlet\");\n        block(env, morph1, context, \"link-to\", [get(env, context, \"satelliteTabRouteName\")], {\"tagName\": \"li\", \"disabled\": get(env, context, \"disableTabDeploymentName\")}, child0, null);\n        block(env, morph2, context, \"link-to\", [get(env, context, \"organizationTabRouteName\")], {\"tagName\": \"li\", \"disabled\": get(env, context, \"disableTabConfigureOrganization\")}, child1, null);\n        block(env, morph3, context, \"link-to\", [get(env, context, \"lifecycleEnvironmentTabRouteName\")], {\"tagName\": \"li\", \"disabled\": get(env, context, \"disableTabLifecycleEnvironment\")}, child2, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/satellite/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-9\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"br\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"form\");\n        dom.setAttribute(el3,\"class\",\"form-horizontal\");\n        dom.setAttribute(el3,\"role\",\"form\");\n        var el4 = dom.createTextNode(\"\\n\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\\n\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0, 1, 3]);\n        var morph0 = dom.createMorphAt(element0,1,1);\n        var morph1 = dom.createMorphAt(element0,3,3);\n        var morph2 = dom.createMorphAt(fragment,2,2,contextualElement);\n        inline(env, morph0, context, \"text-f\", [], {\"label\": \"Name\", \"value\": get(env, context, \"name\"), \"inputSize\": \"col-md-5\", \"errors\": get(env, context, \"errors\"), \"cssId\": get(env, context, \"idSatName\"), \"isRequired\": true});\n        inline(env, morph1, context, \"textarea-f\", [], {\"label\": \"Description (Optional)\", \"value\": get(env, context, \"description\"), \"inputSize\": \"col-md-5\", \"cssId\": get(env, context, \"idSatDesc\")});\n        inline(env, morph2, context, \"cancel-back-next\", [], {\"backRouteName\": get(env, context, \"backRouteNameOnSatIndex\"), \"disableBack\": false, \"nextRouteName\": get(env, context, \"organizationTabRouteName\"), \"disableNext\": get(env, context, \"disableNextOnDeploymentName\"), \"parentController\": get(env, context, \"controller\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/satellite/loading', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"Loading ....\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/setpassword', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h1\");\n        var el2 = dom.createTextNode(\"Change Administrator Password\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\nIt is required that you change the admin password the first time that you log in.\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"col-sm-8 col-md-8 col-lg-8 login\");\n        var el2 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"form\");\n        dom.setAttribute(el2,\"accept-charset\",\"UTF-8\");\n        dom.setAttribute(el2,\"action\",\"/users/login\");\n        dom.setAttribute(el2,\"class\",\"form-horizontal\");\n        dom.setAttribute(el2,\"id\",\"login-form\");\n        dom.setAttribute(el2,\"method\",\"post\");\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"style\",\"margin:0;padding:0;display:inline\");\n        var el4 = dom.createElement(\"input\");\n        dom.setAttribute(el4,\"name\",\"utf8\");\n        dom.setAttribute(el4,\"type\",\"hidden\");\n        dom.setAttribute(el4,\"value\",\"✓\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"input\");\n        dom.setAttribute(el4,\"name\",\"authenticity_token\");\n        dom.setAttribute(el4,\"type\",\"hidden\");\n        dom.setAttribute(el4,\"value\",\"1f770GegsrWb4ZJIC0UkSEkvBVG9MnRJ7jypTsrjeLU=\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"form-group\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"label\");\n        dom.setAttribute(el4,\"class\",\"col-sm-3 control-label\");\n        dom.setAttribute(el4,\"for\",\"login_login\");\n        var el5 = dom.createTextNode(\"Password *\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"col-sm-9\");\n        var el5 = dom.createTextNode(\"\\n              \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"input\");\n        dom.setAttribute(el5,\"class\",\"form-control\");\n        dom.setAttribute(el5,\"focus_on_load\",\"true\");\n        dom.setAttribute(el5,\"id\",\"login_login\");\n        dom.setAttribute(el5,\"name\",\"login[login]\");\n        dom.setAttribute(el5,\"size\",\"30\");\n        dom.setAttribute(el5,\"type\",\"text\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"form-group\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"label\");\n        dom.setAttribute(el4,\"class\",\"col-sm-3 control-label\");\n        dom.setAttribute(el4,\"for\",\"login_password\");\n        var el5 = dom.createTextNode(\"Confirm Password *\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"col-sm-9\");\n        var el5 = dom.createTextNode(\"\\n              \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"input\");\n        dom.setAttribute(el5,\"class\",\"form-control\");\n        dom.setAttribute(el5,\"id\",\"login_password\");\n        dom.setAttribute(el5,\"name\",\"login[password]\");\n        dom.setAttribute(el5,\"type\",\"password\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"form-group\");\n        var el4 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"col-xs-offset-8 col-xs-4 submit\");\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"button\");\n        dom.setAttribute(el5,\"class\",\"btn btn-primary\");\n        var el6 = dom.createTextNode(\"Change Password\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n            \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, element = hooks.element;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [9, 1, 6, 1, 1]);\n        element(env, element0, context, \"action\", [\"updatePassword\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/side-menu', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"nav\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"button\");\n        dom.setAttribute(el4,\"class\",\"btn btn-default btn-block\");\n        var el5 = dom.createTextNode(\"\\n          Close Etherpad\\n          \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"span\");\n        dom.setAttribute(el5,\"style\",\"float:right\");\n        var el6 = dom.createTextNode(\"X  \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"       <iframe class='notepad' ></iframe>\\n \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, element = hooks.element;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0, 1]);\n        var element1 = dom.childAt(element0, [1, 1]);\n        element(env, element0, context, \"bind-attr\", [], {\"class\": \":col-md-12 showSideMenu:nav-expanded\"});\n        element(env, element1, context, \"action\", [\"toggleSideMenu\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/side-menu.loading', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"Loading ...\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/single-deployment', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\" - \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        var morph2 = dom.createMorphAt(fragment,4,4,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"id\");\n        content(env, morph1, context, \"name\");\n        content(env, morph2, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/storage', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"h4\");\n          var el2 = dom.createTextNode(\" Data Domain \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"          NFS\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"          \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"span\");\n            dom.setAttribute(el1,\"class\",\"disabled-color\");\n            var el2 = dom.createTextNode(\"Local\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      var child2 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"          \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"span\");\n            dom.setAttribute(el1,\"class\",\"disabled-color\");\n            var el2 = dom.createTextNode(\"Gluster\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"            \\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"            \\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          var morph2 = dom.createMorphAt(fragment,5,5,contextualElement);\n          dom.insertBoundary(fragment, null);\n          block(env, morph0, context, \"radio-button\", [], {\"value\": \"NFS\", \"groupValue\": get(env, context, \"rhev_storage_type\"), \"id\": \"nfs\"}, child0, null);\n          block(env, morph1, context, \"radio-button\", [], {\"value\": \"Local\", \"groupValue\": get(env, context, \"rhev_storage_type\"), \"id\": \"local\", \"disabled\": true}, child1, null);\n          block(env, morph2, context, \"radio-button\", [], {\"value\": \"Gluster\", \"groupValue\": get(env, context, \"rhev_storage_type\"), \"id\": \"gluster\", \"disabled\": true}, child2, null);\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"          \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          inline(env, morph0, context, \"text-f\", [], {\"label\": \"Storage Address\", \"value\": get(env, context, \"rhev_storage_address\"), \"placeholder\": \"Leave blank for default (Ex. 1.2.3.4)\", \"cssId\": \"rhev_storage_address\"});\n          inline(env, morph1, context, \"text-f\", [], {\"label\": \"Share Path\", \"value\": get(env, context, \"rhev_share_path\"), \"placeholder\": \"Leave blank for default (Ex. /nfs_data/rhev_storage)\", \"cssId\": \"rhev_share_path\"});\n          return fragment;\n        }\n      };\n    }());\n    var child3 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"          \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            inline(env, morph0, context, \"text-f\", [], {\"label\": \"Storage Path\", \"value\": get(env, context, \"rhev_local_storage_path\"), \"placeholder\": \"Ex. /rhev/data_storage\", \"isRequired\": true, \"cssId\": \"rhev_local_storage_path\", \"help-inline\": \"This path will be created and given appropriate permissions - chown 36:36;chmod 0755, etc\"});\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.1\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"          \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n          \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n          \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n          \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n      \");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n              var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n              var morph2 = dom.createMorphAt(fragment,5,5,contextualElement);\n              var morph3 = dom.createMorphAt(fragment,7,7,contextualElement);\n              inline(env, morph0, context, \"text-f\", [], {\"label\": \"Node Name\", \"value\": get(env, context, \"rhev_gluster_node_name\"), \"placeholder\": \"Ex. node.example.com\", \"isRequired\": true, \"cssId\": \"rhev_gluster_node_name\", \"isRequired\": true});\n              inline(env, morph1, context, \"text-f\", [], {\"label\": \"Node Address\", \"value\": get(env, context, \"rhev_gluster_node_address\"), \"placeholder\": \"Ex. 1.2.3.4\", \"isRequired\": true, \"cssId\": \"rhev_gluster_node_address\"});\n              inline(env, morph2, context, \"text-f\", [], {\"label\": \"SSH Port\", \"value\": get(env, context, \"rhev_gluster_ssh_port\"), \"isRequired\": true, \"cssId\": \"rhev_gluster_ssh_port\"});\n              inline(env, morph3, context, \"text-f\", [], {\"label\": \"Root Password\", \"value\": get(env, context, \"rhev_gluster_root_password\"), \"isRequired\": true, \"cssId\": \"rhev_gluster_root_password\", \"type\": \"password\"});\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            block(env, morph0, context, \"if\", [get(env, context, \"isGluster\")], {}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"if\", [get(env, context, \"isLocal\")], {}, child0, child1);\n          return fragment;\n        }\n      };\n    }());\n    var child4 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"h4\");\n          var el2 = dom.createTextNode(\" Export Domain \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"form\");\n          dom.setAttribute(el1,\"class\",\"form form-horizontal\");\n          var el2 = dom.createTextNode(\"\\n\\n      \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [3]);\n          var morph0 = dom.createMorphAt(element0,1,1);\n          var morph1 = dom.createMorphAt(element0,3,3);\n          var morph2 = dom.createMorphAt(element0,5,5);\n          inline(env, morph0, context, \"text-f\", [], {\"label\": \"Storage Domain Name\", \"value\": get(env, context, \"rhev_export_domain_name\"), \"cssId\": \"rhev_export_domain_name\", \"isRequired\": true});\n          inline(env, morph1, context, \"text-f\", [], {\"label\": \"Storage Address\", \"value\": get(env, context, \"rhev_export_domain_address\"), \"cssId\": \"rhev_export_domain_address\", \"isRequired\": true});\n          inline(env, morph2, context, \"text-f\", [], {\"label\": \"Share Path\", \"value\": get(env, context, \"rhev_export_domain_path\"), \"cssId\": \"rhev_export_domain_path\", \"isRequired\": true});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-12\");\n        var el3 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"form\");\n        dom.setAttribute(el3,\"class\",\"form form-horizontal\");\n        var el4 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element1 = dom.childAt(fragment, [0, 1]);\n        var element2 = dom.childAt(element1, [3]);\n        var morph0 = dom.createMorphAt(element1,1,1);\n        var morph1 = dom.createMorphAt(element2,1,1);\n        var morph2 = dom.createMorphAt(element2,3,3);\n        var morph3 = dom.createMorphAt(element1,5,5);\n        var morph4 = dom.createMorphAt(fragment,2,2,contextualElement);\n        block(env, morph0, context, \"if\", [get(env, context, \"isCloudForms\")], {}, child0, null);\n        block(env, morph1, context, \"base-f\", [], {\"label\": \"Storage Type\", \"isRequired\": true}, child1, null);\n        block(env, morph2, context, \"if\", [get(env, context, \"isNFS\")], {}, child2, child3);\n        block(env, morph3, context, \"if\", [get(env, context, \"isCloudForms\")], {}, child4, null);\n        inline(env, morph4, context, \"cancel-back-next\", [], {\"backRouteName\": \"rhev-options\", \"disableBack\": false, \"nextRouteName\": get(env, context, \"step3RouteName\"), \"disableNext\": false});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/subscriptions', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"A. Enter Credentials\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n          content(env, morph0, context, \"stepNumberSubscriptions\");\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"B. Select Subscription Management Application\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n          content(env, morph0, context, \"stepNumberSubscriptions\");\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"C. Select Subscriptions\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1]),0,0);\n          content(env, morph0, context, \"stepNumberSubscriptions\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"col-sm-8 col-md-9 col-lg-10 col-sm-push-4 col-md-push-3 col-lg-push-2\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"col-sm-4 col-md-3 col-lg-2 col-sm-pull-8 col-md-pull-9 col-lg-pull-10 sidebar-pf sidebar-pf-left\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"ul\");\n        dom.setAttribute(el2,\"class\",\"nav nav-pills nav-stacked\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, block = hooks.block, get = hooks.get;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [2, 1]);\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),1,1);\n        var morph1 = dom.createMorphAt(element0,1,1);\n        var morph2 = dom.createMorphAt(element0,2,2);\n        var morph3 = dom.createMorphAt(element0,3,3);\n        content(env, morph0, context, \"outlet\");\n        block(env, morph1, context, \"link-to\", [\"subscriptions.credentials\"], {\"tagName\": \"li\"}, child0, null);\n        block(env, morph2, context, \"link-to\", [\"subscriptions.management-application\"], {\"tagName\": \"li\", \"disabled\": get(env, context, \"disableTabManagementApplication\")}, child1, null);\n        block(env, morph3, context, \"link-to\", [\"subscriptions.select-subscriptions\"], {\"tagName\": \"li\", \"disabled\": get(env, context, \"disableTabSelectSubsciptions\")}, child2, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/subscriptions/credentials', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"row\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"col-md-9\");\n          var el3 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"alert alert-info\");\n          var el4 = dom.createTextNode(\"\\n          This deployment already has a subscription management application: \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"strong\");\n          var el5 = dom.createComment(\"\");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1, 1, 1]),0,0);\n          content(env, morph0, context, \"upstream_consumer_name\");\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"row\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"col-md-9\");\n          var el3 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"alert alert-info\");\n          var el4 = dom.createTextNode(\"\\n          There is already a manifest uploaded for your organization: \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"strong\");\n          var el5 = dom.createTextNode(\" \");\n          dom.appendChild(el4, el5);\n          var el5 = dom.createComment(\"\");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1, 1, 1]),1,1);\n          content(env, morph0, context, \"organizationUpstreamConsumerName\");\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"row\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"col-md-9\");\n          var el3 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"alert alert-success\");\n          var el4 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"i\");\n          dom.setAttribute(el4,\"class\",\"fa fa-2x fa-check-circle-o green-circle\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n           \\n          You are already successfully authenticated as \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"strong\");\n          var el5 = dom.createComment(\"\");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\" with the Red Hat Customer Portal.\\n          \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"br\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"br\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n          You may \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"a\");\n          var el5 = dom.createTextNode(\"logout\");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\" and then login as a different user.\\n      \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element1 = dom.childAt(fragment, [1, 1, 1]);\n          var element2 = dom.childAt(element1, [9]);\n          var morph0 = dom.createMorphAt(dom.childAt(element1, [3]),0,0);\n          content(env, morph0, context, \"identification\");\n          element(env, element2, context, \"action\", [\"logoutPortal\"], {});\n          return fragment;\n        }\n      };\n    }());\n    var child3 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"row\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"col-md-9\");\n          var el3 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"alert alert-danger\");\n          var el4 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"i\");\n          dom.setAttribute(el4,\"class\",\"fa fa-2x fa-exclamation-triangle errorForValidation\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n           \\n          \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1, 1]),3,3);\n          content(env, morph0, context, \"errorMsg\");\n          return fragment;\n        }\n      };\n    }());\n    var child4 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"          \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"a\");\n            dom.setAttribute(el1,\"href\",\"https://www.redhat.com/wapps/sso/lostPassword.html\");\n            dom.setAttribute(el1,\"target\",\"_blank\");\n            var el2 = dom.createTextNode(\"\\n            Forgot your login or password?\\n          \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\\nEnter your Red Hat account information.\\n\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"row\");\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"col-md-9\");\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"br\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"form\");\n          dom.setAttribute(el3,\"class\",\"form form-horizontal\");\n          var el4 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n\\n\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"    \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1, 1, 3]);\n          var morph0 = dom.createMorphAt(element0,1,1);\n          var morph1 = dom.createMorphAt(element0,3,3);\n          var morph2 = dom.createMorphAt(element0,5,5);\n          inline(env, morph0, context, \"text-f\", [], {\"label\": \"Red Hat login\", \"value\": get(env, context, \"identification\")});\n          inline(env, morph1, context, \"text-f\", [], {\"label\": \"Password\", \"value\": get(env, context, \"password\"), \"type\": \"password\"});\n          block(env, morph2, context, \"base-f\", [], {}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child5 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.1\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\" \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"i\");\n            dom.setAttribute(el1,\"class\",\"fa fa-angle-right\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            content(env, morph0, context, \"nextButtonTitle\");\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"button-f\", [], {\"disabled\": get(env, context, \"disableCredentialsNext\"), \"action\": get(env, context, \"actionCredentialsNext\")}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        var morph2 = dom.createMorphAt(fragment,4,4,contextualElement);\n        var morph3 = dom.createMorphAt(fragment,6,6,contextualElement);\n        var morph4 = dom.createMorphAt(fragment,8,8,contextualElement);\n        var morph5 = dom.createMorphAt(fragment,10,10,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"hasUpstreamConsumerUuid\")], {}, child0, null);\n        block(env, morph1, context, \"if\", [get(env, context, \"hasOrganizationUpstreamConsumerUUID\")], {}, child1, null);\n        block(env, morph2, context, \"if\", [get(env, context, \"model.isAuthenticated\")], {}, child2, null);\n        block(env, morph3, context, \"if\", [get(env, context, \"showErrorMessage\")], {}, child3, null);\n        block(env, morph4, context, \"unless\", [get(env, context, \"model.isAuthenticated\")], {}, child4, null);\n        block(env, morph5, context, \"cancel-back-next\", [], {\"backRouteName\": get(env, context, \"backRouteNameonCredentials\"), \"disableBack\": false, \"parentController\": get(env, context, \"controller\")}, child5, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/subscriptions/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/subscriptions/loading', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"spinner spinner-md spinner-inline\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"span\");\n        dom.setAttribute(el1,\"class\",\"spinner-text\");\n        var el2 = dom.createTextNode(\"\\n  Loading from Red Hat Customer Portal ...\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/subscriptions/management-application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"row\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"col-md-9\");\n          var el3 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"div\");\n          dom.setAttribute(el3,\"class\",\"alert alert-success\");\n          var el4 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"i\");\n          dom.setAttribute(el4,\"class\",\"fa fa-2x fa-check-circle-o green-circle\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\"\\n           \\n          \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\" added successfully.\\n      \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1, 1]),3,3);\n          content(env, morph0, context, \"newSatelliteName\");\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        Register a New Satellite\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"          \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"tr-management-app\", [], {\"managementApp\": get(env, context, \"managementApp\"), \"consumerUUID\": get(env, context, \"sessionPortal.consumerUUID\"), \"action\": \"selectManagementApp\"});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-9\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"pull-right\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-9\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"table\");\n        dom.setAttribute(el3,\"class\",\"table table-striped\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"thead\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"th\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"th\");\n        var el6 = dom.createTextNode(\"Name\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"th\");\n        var el6 = dom.createTextNode(\"Subscriptions Attached\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"th\");\n        var el6 = dom.createTextNode(\"UUID\");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"tbody\");\n        var el5 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [2, 1, 1]),1,1);\n        var morph2 = dom.createMorphAt(dom.childAt(fragment, [6, 1, 1, 3]),1,1);\n        var morph3 = dom.createMorphAt(fragment,8,8,contextualElement);\n        var morph4 = dom.createMorphAt(fragment,10,10,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"showAlertMessage\")], {}, child0, null);\n        block(env, morph1, context, \"em-modal-toggler\", [], {\"modal-id\": \"registerNewSatellite\", \"class\": \"btn btn-primary\"}, child1, null);\n        block(env, morph2, context, \"each\", [get(env, context, \"model\")], {\"keyword\": \"managementApp\"}, child2, null);\n        inline(env, morph3, context, \"partial\", [\"new-satellite\"], {});\n        inline(env, morph4, context, \"cancel-back-next\", [], {\"backRouteName\": \"subscriptions.credentials\", \"disableBack\": false, \"nextRouteName\": \"subscriptions.select-subscriptions\", \"disableNext\": get(env, context, \"disableNextOnManagementApp\"), \"parentController\": get(env, context, \"controller\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/subscriptions/management-application.loading', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode(\"Loading from Red Hat Customer Portal ...\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/subscriptions/select-subscriptions', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"alert alert-success\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"i\");\n          dom.setAttribute(el2,\"class\",\"fa fa-2x fa-check-circle-o green-circle\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n     \\n    Yeah! Successfully attached subscriptions! Attach more if you want.\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"tr-subscription\", [], {\"subscription\": get(env, context, \"subscription\")});\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"tr\");\n          var el2 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"td\");\n          dom.setAttribute(el2,\"colspan\",\"8\");\n          var el3 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"p\");\n          dom.setAttribute(el3,\"class\",\"no_subscriptions\");\n          var el4 = dom.createTextNode(\"\\n          No subscriptions found. Check your account in in the \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createElement(\"a\");\n          dom.setAttribute(el4,\"href\",\"https://idp.redhat.com/idp/\");\n          dom.setAttribute(el4,\"target\",\"_blank\");\n          var el5 = dom.createTextNode(\"Red Hat Customer Portal\");\n          dom.appendChild(el4, el5);\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\" to verify you have subscriptions available.\\n        \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"\\nDefault subscription selections have been made for the components of your RHCI deployment. If the selections need to be adjusted, please do so before proceeding.\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"span\");\n        var el2 = dom.createTextNode(\"Enable Red Hat Analytics for all hosts\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"table\");\n        dom.setAttribute(el1,\"class\",\"table table-bordered small\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"thead\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"tr\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" Subscription Name \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" Contract Number \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" System Type \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" Start Date \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" End Date \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" Available \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"th\");\n        var el5 = dom.createTextNode(\" Quantity \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"tbody\");\n        var el3 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, inline = hooks.inline, attribute = hooks.attribute;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [6]);\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(fragment,4,4,contextualElement);\n        var attrMorph0 = dom.createAttrMorph(element0, 'class');\n        var morph2 = dom.createMorphAt(dom.childAt(fragment, [12, 3]),1,1);\n        var morph3 = dom.createMorphAt(fragment,14,14,contextualElement);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"showAttachedSuccessMessage\")], {}, child0, null);\n        inline(env, morph1, context, \"input\", [], {\"type\": \"checkbox\", \"name\": \"enableAnalytics\", \"disabled\": true, \"checked\": get(env, context, \"enableAnalytics\")});\n        attribute(env, attrMorph0, element0, \"class\", get(env, context, \"analyticsColor\"));\n        block(env, morph2, context, \"each\", [get(env, context, \"model\")], {\"itemController\": \"subscription\", \"keyword\": \"subscription\"}, child1, child2);\n        inline(env, morph3, context, \"cancel-back-next\", [], {\"backRouteName\": \"subscriptions.management-application\", \"disableBack\": false, \"nextRouteName\": \"review\", \"disableNext\": false, \"parentController\": get(env, context, \"controller\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/topbar', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"          \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"img\");\n          dom.setAttribute(el1,\"alt\",\"Foreman\");\n          dom.setAttribute(el1,\"src\",\"assets/foreman.png\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          dom.setAttribute(el1,\"href\",\"/\");\n          var el2 = dom.createTextNode(\"Foreman\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"          \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"a\");\n          dom.setAttribute(el1,\"href\",\"/\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"img\");\n          dom.setAttribute(el2,\"alt\",\"Header-logotype\");\n          dom.setAttribute(el2,\"src\",\"assets/Header-logotype.png\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n          \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          dom.setAttribute(el1,\"class\",\"menu_tab_/users_edit\");\n          var el2 = dom.createTextNode(\"\\n              \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"a\");\n          var el3 = dom.createTextNode(\"My account\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          dom.setAttribute(el1,\"class\",\"divider\");\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n            \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"li\");\n          dom.setAttribute(el1,\"class\",\"menu_tab_/users_logout\");\n          var el2 = dom.createTextNode(\"\\n              \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"a\");\n          var el3 = dom.createTextNode(\"Log out\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1, 1]);\n          var element1 = dom.childAt(fragment, [5, 1]);\n          element(env, element0, context, \"action\", [\"notImplemented\"], {});\n          element(env, element1, context, \"action\", [\"invalidateSession\"], {});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"navbar-header\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        var el4 = dom.createTextNode(\"\\n\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"navbar-brand\");\n        var el5 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"ul\");\n        dom.setAttribute(el4,\"class\",\"nav navbar-nav navbar-right navbar-header-menu navbar-collapse collapse\");\n        var el5 = dom.createTextNode(\"\\n\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createElement(\"li\");\n        dom.setAttribute(el5,\"class\",\"dropdown menu_tab_dropdown\");\n        var el6 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"a\");\n        dom.setAttribute(el6,\"href\",\"#\");\n        dom.setAttribute(el6,\"class\",\"dropdown-toggle\");\n        dom.setAttribute(el6,\"data-toggle\",\"dropdown\");\n        var el7 = dom.createTextNode(\"\\n             \\n             \\n            \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"img\");\n        dom.setAttribute(el7,\"alt\",\"Change your avatar at gravatar.com\");\n        dom.setAttribute(el7,\"class\",\"avatar small\");\n        dom.setAttribute(el7,\"src\",\"assets/user.jpg\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\" \");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createElement(\"span\");\n        dom.setAttribute(el7,\"class\",\"caret\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n\\n          \");\n        dom.appendChild(el5, el6);\n        var el6 = dom.createElement(\"ul\");\n        dom.setAttribute(el6,\"class\",\"dropdown-menu pull-right\");\n        var el7 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createComment(\"\");\n        dom.appendChild(el6, el7);\n        var el7 = dom.createTextNode(\"\\n          \");\n        dom.appendChild(el6, el7);\n        dom.appendChild(el5, el6);\n        var el6 = dom.createTextNode(\"\\n\\n        \");\n        dom.appendChild(el5, el6);\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, element = hooks.element, get = hooks.get, block = hooks.block, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element2 = dom.childAt(fragment, [0]);\n        var element3 = dom.childAt(element2, [1, 1]);\n        var element4 = dom.childAt(element3, [3, 1]);\n        var morph0 = dom.createMorphAt(dom.childAt(element3, [1]),1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(element4, [1]),2,2);\n        var morph2 = dom.createMorphAt(dom.childAt(element4, [3]),1,1);\n        element(env, element2, context, \"bind-attr\", [], {\"class\": \":navbar :navbar-default :navbar-outer isUpstream:navbar-outer-upstream\"});\n        element(env, element3, context, \"bind-attr\", [], {\"class\": \"isUpstream:container:container\"});\n        block(env, morph0, context, \"if\", [get(env, context, \"isUpstream\")], {}, child0, child1);\n        content(env, morph1, context, \"loginUsername\");\n        block(env, morph2, context, \"if\", [get(env, context, \"session.isAuthenticated\")], {}, child2, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/templates/where-install', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"span\");\n          var el2 = dom.createTextNode(\"\\n          Install CloudForms on Red Hat Enterprise Virtualization\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element1 = dom.childAt(fragment, [1]);\n          element(env, element1, context, \"bind-attr\", [], {\"class\": \"disableRHEV:disabled\"});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.1\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"span\");\n          var el2 = dom.createTextNode(\"\\n          Install CloudForms on OpenStack\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"br\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n              Able to split virtualization workloads across multiple controller nodes\\n        \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          element(env, element0, context, \"bind-attr\", [], {\"class\": \":inline-block disableOpenStack:disabled\"});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.1\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"row\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"col-md-9\");\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"\\n      Select a product to create and manage virtual machines.\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"ident-radio\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"ident-radio\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element2 = dom.childAt(fragment, [0, 1]);\n        var morph0 = dom.createMorphAt(dom.childAt(element2, [3]),1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(element2, [5]),1,1);\n        var morph2 = dom.createMorphAt(fragment,2,2,contextualElement);\n        block(env, morph0, context, \"radio-button\", [], {\"value\": \"RHEV\", \"groupValue\": get(env, context, \"cfme_install_loc\"), \"changed\": \"cfmeLocationChanged\", \"id\": \"install_on_rhev\", \"disabled\": get(env, context, \"disableRHEV\")}, child0, null);\n        block(env, morph1, context, \"radio-button\", [], {\"value\": \"OpenStack\", \"groupValue\": get(env, context, \"cfme_install_loc\"), \"changed\": \"cfmeLocationChanged\", \"id\": \"install_on_openstack\", \"disabled\": get(env, context, \"disableOpenStack\")}, child1, null);\n        inline(env, morph2, context, \"cancel-back-next\", [], {\"backRouteName\": get(env, context, \"backRouteName\"), \"disableBack\": false, \"nextRouteName\": \"cloudforms.cfme-configuration\", \"disableNext\": false});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('fusor-ember-cli/tests/adapters/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/application.js should pass jshint', function() { \n    ok(false, 'adapters/application.js should pass jshint.\\nadapters/application.js: line 3, col 13, \\'$\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/adapters/deployment.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/deployment.js should pass jshint', function() { \n    ok(false, 'adapters/deployment.js should pass jshint.\\nadapters/deployment.js: line 3, col 13, \\'$\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/adapters/foreman-task.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/foreman-task.js should pass jshint', function() { \n    ok(false, 'adapters/foreman-task.js should pass jshint.\\nadapters/foreman-task.js: line 1, col 13, \\'$\\' is not defined.\\nadapters/foreman-task.js: line 2, col 16, \\'DS\\' is not defined.\\n\\n2 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/adapters/session-portal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/session-portal.js should pass jshint', function() { \n    ok(true, 'adapters/session-portal.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('app.js should pass jshint', function() { \n    ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/components/accordion-item.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/accordion-item.js should pass jshint', function() { \n    ok(true, 'components/accordion-item.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/components/base-f.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/base-f.js should pass jshint', function() { \n    ok(true, 'components/base-f.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/components/button-f.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/button-f.js should pass jshint', function() { \n    ok(true, 'components/button-f.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/components/cancel-back-next.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/cancel-back-next.js should pass jshint', function() { \n    ok(true, 'components/cancel-back-next.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/components/deployment-role.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/deployment-role.js should pass jshint', function() { \n    ok(false, 'components/deployment-role.js should pass jshint.\\ncomponents/deployment-role.js: line 54, col 20, Expected \\'===\\' and instead saw \\'==\\'.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/components/env-path-list-item.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/env-path-list-item.js should pass jshint', function() { \n    ok(false, 'components/env-path-list-item.js should pass jshint.\\ncomponents/env-path-list-item.js: line 23, col 19, \\'event\\' is defined but never used.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/components/modal-confirm.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/modal-confirm.js should pass jshint', function() { \n    ok(true, 'components/modal-confirm.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/components/node-profile.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/node-profile.js should pass jshint', function() { \n    ok(false, 'components/node-profile.js should pass jshint.\\ncomponents/node-profile.js: line 151, col 5, \\'$\\' is not defined.\\ncomponents/node-profile.js: line 63, col 37, \\'index\\' is defined but never used.\\ncomponents/node-profile.js: line 77, col 37, \\'index\\' is defined but never used.\\ncomponents/node-profile.js: line 91, col 37, \\'index\\' is defined but never used.\\ncomponents/node-profile.js: line 105, col 37, \\'index\\' is defined but never used.\\ncomponents/node-profile.js: line 127, col 30, \\'profile\\' is defined but never used.\\n\\n6 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/components/radio-button-f.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/radio-button-f.js should pass jshint', function() { \n    ok(true, 'components/radio-button-f.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/components/rchi-item.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/rchi-item.js should pass jshint', function() { \n    ok(true, 'components/rchi-item.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/components/review-link.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/review-link.js should pass jshint', function() { \n    ok(true, 'components/review-link.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/components/rhci-hover-text.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/rhci-hover-text.js should pass jshint', function() { \n    ok(true, 'components/rhci-hover-text.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/components/rhci-start.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/rhci-start.js should pass jshint', function() { \n    ok(true, 'components/rhci-start.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/components/rhci-wizard.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/rhci-wizard.js should pass jshint', function() { \n    ok(true, 'components/rhci-wizard.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/components/select-f.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/select-f.js should pass jshint', function() { \n    ok(true, 'components/select-f.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/components/select-simple-f.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/select-simple-f.js should pass jshint', function() { \n    ok(true, 'components/select-simple-f.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/components/step-number.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/step-number.js should pass jshint', function() { \n    ok(true, 'components/step-number.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/components/subnet-drop-area.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/subnet-drop-area.js should pass jshint', function() { \n    ok(true, 'components/subnet-drop-area.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/components/text-f.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/text-f.js should pass jshint', function() { \n    ok(true, 'components/text-f.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/components/textarea-f.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/textarea-f.js should pass jshint', function() { \n    ok(true, 'components/textarea-f.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/components/tr-engine.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/tr-engine.js should pass jshint', function() { \n    ok(true, 'components/tr-engine.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/components/tr-hypervisor.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/tr-hypervisor.js should pass jshint', function() { \n    ok(true, 'components/tr-hypervisor.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/components/tr-management-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/tr-management-app.js should pass jshint', function() { \n    ok(false, 'components/tr-management-app.js should pass jshint.\\ncomponents/tr-management-app.js: line 12, col 35, \\'event\\' is defined but never used.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/components/tr-organization.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/tr-organization.js should pass jshint', function() { \n    ok(false, 'components/tr-organization.js should pass jshint.\\ncomponents/tr-organization.js: line 8, col 48, Expected \\'===\\' and instead saw \\'==\\'.\\ncomponents/tr-organization.js: line 12, col 35, \\'event\\' is defined but never used.\\n\\n2 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/components/tr-subscription.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/tr-subscription.js should pass jshint', function() { \n    ok(true, 'components/tr-subscription.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/components/tr-task.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/tr-task.js should pass jshint', function() { \n    ok(true, 'components/tr-task.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/components/traffic-type.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/traffic-type.js should pass jshint', function() { \n    ok(true, 'components/traffic-type.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/components/upstream-downstream.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/upstream-downstream.js should pass jshint', function() { \n    ok(true, 'components/upstream-downstream.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/components/vertical-tab.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/vertical-tab.js should pass jshint', function() { \n    ok(true, 'components/vertical-tab.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/components/wizard-item.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/wizard-item.js should pass jshint', function() { \n    ok(true, 'components/wizard-item.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/application.js should pass jshint', function() { \n    ok(false, 'controllers/application.js should pass jshint.\\ncontrollers/application.js: line 27, col 26, \\'data\\' is defined but never used.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/assign-nodes.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/assign-nodes.js should pass jshint', function() { \n    ok(false, 'controllers/assign-nodes.js should pass jshint.\\ncontrollers/assign-nodes.js: line 143, col 42, Missing semicolon.\\ncontrollers/assign-nodes.js: line 55, col 37, \\'index\\' is defined but never used.\\ncontrollers/assign-nodes.js: line 69, col 37, \\'index\\' is defined but never used.\\ncontrollers/assign-nodes.js: line 83, col 37, \\'index\\' is defined but never used.\\ncontrollers/assign-nodes.js: line 97, col 37, \\'index\\' is defined but never used.\\ncontrollers/assign-nodes.js: line 138, col 24, \\'roleType\\' is defined but never used.\\n\\n6 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/cloudforms-storage-domain.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/cloudforms-storage-domain.js should pass jshint', function() { \n    ok(true, 'controllers/cloudforms-storage-domain.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/cloudforms-vm.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/cloudforms-vm.js should pass jshint', function() { \n    ok(true, 'controllers/cloudforms-vm.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/cloudforms.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/cloudforms.js should pass jshint', function() { \n    ok(true, 'controllers/cloudforms.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/cloudforms/cfme-configuration.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/cloudforms');\n  test('controllers/cloudforms/cfme-configuration.js should pass jshint', function() { \n    ok(true, 'controllers/cloudforms/cfme-configuration.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/configure-environment.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/configure-environment.js should pass jshint', function() { \n    ok(false, 'controllers/configure-environment.js should pass jshint.\\ncontrollers/configure-environment.js: line 35, col 66, Missing semicolon.\\ncontrollers/configure-environment.js: line 51, col 19, \\'response\\' is defined but never used.\\n\\n2 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/configure-organization.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/configure-organization.js should pass jshint', function() { \n    ok(true, 'controllers/configure-organization.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/deployment-new.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/deployment-new.js should pass jshint', function() { \n    ok(true, 'controllers/deployment-new.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/deployment-new/satellite.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/deployment-new');\n  test('controllers/deployment-new/satellite.js should pass jshint', function() { \n    ok(true, 'controllers/deployment-new/satellite.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/deployment-new/satellite/configure-environment.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/deployment-new/satellite');\n  test('controllers/deployment-new/satellite/configure-environment.js should pass jshint', function() { \n    ok(false, 'controllers/deployment-new/satellite/configure-environment.js should pass jshint.\\ncontrollers/deployment-new/satellite/configure-environment.js: line 34, col 66, Missing semicolon.\\ncontrollers/deployment-new/satellite/configure-environment.js: line 50, col 19, \\'response\\' is defined but never used.\\n\\n2 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/deployment-new/satellite/configure-organization.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/deployment-new/satellite');\n  test('controllers/deployment-new/satellite/configure-organization.js should pass jshint', function() { \n    ok(true, 'controllers/deployment-new/satellite/configure-organization.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/deployment-new/satellite/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/deployment-new/satellite');\n  test('controllers/deployment-new/satellite/index.js should pass jshint', function() { \n    ok(true, 'controllers/deployment-new/satellite/index.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/deployment-new/start.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/deployment-new');\n  test('controllers/deployment-new/start.js should pass jshint', function() { \n    ok(true, 'controllers/deployment-new/start.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/deployment.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/deployment.js should pass jshint', function() { \n    ok(true, 'controllers/deployment.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/deployment/start.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/deployment');\n  test('controllers/deployment/start.js should pass jshint', function() { \n    ok(true, 'controllers/deployment/start.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/deployments.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/deployments.js should pass jshint', function() { \n    ok(false, 'controllers/deployments.js should pass jshint.\\ncontrollers/deployments.js: line 19, col 44, Missing semicolon.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/discovered-host.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/discovered-host.js should pass jshint', function() { \n    ok(false, 'controllers/discovered-host.js should pass jshint.\\ncontrollers/discovered-host.js: line 34, col 78, Missing semicolon.\\ncontrollers/discovered-host.js: line 35, col 50, Missing semicolon.\\ncontrollers/discovered-host.js: line 37, col 19, Missing semicolon.\\ncontrollers/discovered-host.js: line 55, col 11, \\'engine_hostname\\' is defined but never used.\\n\\n4 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/engine.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/engine.js should pass jshint', function() { \n    ok(true, 'controllers/engine.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/engine/discovered-host.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/engine');\n  test('controllers/engine/discovered-host.js should pass jshint', function() { \n    ok(false, 'controllers/engine/discovered-host.js should pass jshint.\\ncontrollers/engine/discovered-host.js: line 25, col 85, \\'array\\' is defined but never used.\\ncontrollers/engine/discovered-host.js: line 25, col 78, \\'index\\' is defined but never used.\\n\\n2 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/host.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/host.js should pass jshint', function() { \n    ok(true, 'controllers/host.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/hostgroup.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/hostgroup.js should pass jshint', function() { \n    ok(true, 'controllers/hostgroup.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/hypervisor.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/hypervisor.js should pass jshint', function() { \n    ok(true, 'controllers/hypervisor.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/hypervisor/discovered-host.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/hypervisor');\n  test('controllers/hypervisor/discovered-host.js should pass jshint', function() { \n    ok(false, 'controllers/hypervisor/discovered-host.js should pass jshint.\\ncontrollers/hypervisor/discovered-host.js: line 13, col 30, Expected \\'!==\\' and instead saw \\'!=\\'.\\ncontrollers/hypervisor/discovered-host.js: line 12, col 85, \\'array\\' is defined but never used.\\ncontrollers/hypervisor/discovered-host.js: line 12, col 78, \\'index\\' is defined but never used.\\ncontrollers/hypervisor/discovered-host.js: line 31, col 31, \\'value\\' is defined but never used.\\ncontrollers/hypervisor/discovered-host.js: line 31, col 26, \\'key\\' is defined but never used.\\ncontrollers/hypervisor/discovered-host.js: line 39, col 29, \\'value\\' is defined but never used.\\ncontrollers/hypervisor/discovered-host.js: line 39, col 24, \\'key\\' is defined but never used.\\ncontrollers/hypervisor/discovered-host.js: line 53, col 22, \\'row\\' is defined but never used.\\ncontrollers/hypervisor/discovered-host.js: line 69, col 24, \\'key\\' is defined but never used.\\n\\n9 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/lifecycle-environment.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/lifecycle-environment.js should pass jshint', function() { \n    ok(true, 'controllers/lifecycle-environment.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/lifecycle-environments.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/lifecycle-environments.js should pass jshint', function() { \n    ok(true, 'controllers/lifecycle-environments.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/login.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/login.js should pass jshint', function() { \n    ok(true, 'controllers/login.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/logout-model.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/logout-model.js should pass jshint', function() { \n    ok(true, 'controllers/logout-model.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/networking.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/networking.js should pass jshint', function() { \n    ok(true, 'controllers/networking.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/new-environment.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/new-environment.js should pass jshint', function() { \n    ok(true, 'controllers/new-environment.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/new-organization.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/new-organization.js should pass jshint', function() { \n    ok(true, 'controllers/new-organization.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/openstack.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/openstack.js should pass jshint', function() { \n    ok(true, 'controllers/openstack.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/organization.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/organization.js should pass jshint', function() { \n    ok(true, 'controllers/organization.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/organizations.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/organizations.js should pass jshint', function() { \n    ok(true, 'controllers/organizations.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/products.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/products.js should pass jshint', function() { \n    ok(true, 'controllers/products.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/register-nodes.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/register-nodes.js should pass jshint', function() { \n    ok(false, 'controllers/register-nodes.js should pass jshint.\\ncontrollers/register-nodes.js: line 224, col 41, Expected \\'===\\' and instead saw \\'==\\'.\\ncontrollers/register-nodes.js: line 255, col 7, Unnecessary semicolon.\\ncontrollers/register-nodes.js: line 255, col 44, Missing semicolon.\\ncontrollers/register-nodes.js: line 283, col 30, Expected \\'===\\' and instead saw \\'==\\'.\\ncontrollers/register-nodes.js: line 167, col 42, \\'index\\' is defined but never used.\\ncontrollers/register-nodes.js: line 180, col 46, \\'index\\' is defined but never used.\\n\\n6 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/review.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/review.js should pass jshint', function() { \n    ok(false, 'controllers/review.js should pass jshint.\\ncontrollers/review.js: line 11, col 59, Missing semicolon.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/review/installation.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/review');\n  test('controllers/review/installation.js should pass jshint', function() { \n    ok(true, 'controllers/review/installation.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/review/progress.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/review');\n  test('controllers/review/progress.js should pass jshint', function() { \n    ok(true, 'controllers/review/progress.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/review/progress/details/task.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/review/progress/details');\n  test('controllers/review/progress/details/task.js should pass jshint', function() { \n    ok(true, 'controllers/review/progress/details/task.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/review/progress/details/task/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/review/progress/details/task');\n  test('controllers/review/progress/details/task/index.js should pass jshint', function() { \n    ok(true, 'controllers/review/progress/details/task/index.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/review/progress/overview.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/review/progress');\n  test('controllers/review/progress/overview.js should pass jshint', function() { \n    ok(true, 'controllers/review/progress/overview.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/rhci.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/rhci.js should pass jshint', function() { \n    ok(true, 'controllers/rhci.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/rhev-options.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/rhev-options.js should pass jshint', function() { \n    ok(true, 'controllers/rhev-options.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/rhev-setup.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/rhev-setup.js should pass jshint', function() { \n    ok(false, 'controllers/rhev-setup.js should pass jshint.\\ncontrollers/rhev-setup.js: line 10, col 71, Missing semicolon.\\ncontrollers/rhev-setup.js: line 14, col 79, Missing semicolon.\\ncontrollers/rhev-setup.js: line 18, col 50, Missing semicolon.\\ncontrollers/rhev-setup.js: line 22, col 32, \\'value\\' is defined but never used.\\n\\n4 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/rhev.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/rhev.js should pass jshint', function() { \n    ok(true, 'controllers/rhev.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/satellite.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/satellite.js should pass jshint', function() { \n    ok(true, 'controllers/satellite.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/satellite/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/satellite');\n  test('controllers/satellite/index.js should pass jshint', function() { \n    ok(true, 'controllers/satellite/index.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/satellite/subscription.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/satellite');\n  test('controllers/satellite/subscription.js should pass jshint', function() { \n    ok(true, 'controllers/satellite/subscription.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/side-menu.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/side-menu.js should pass jshint', function() { \n    ok(true, 'controllers/side-menu.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/storage.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/storage.js should pass jshint', function() { \n    ok(true, 'controllers/storage.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/subscription.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/subscription.js should pass jshint', function() { \n    ok(true, 'controllers/subscription.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/subscriptions.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/subscriptions.js should pass jshint', function() { \n    ok(true, 'controllers/subscriptions.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/subscriptions/credentials.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/subscriptions');\n  test('controllers/subscriptions/credentials.js should pass jshint', function() { \n    ok(true, 'controllers/subscriptions/credentials.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/subscriptions/management-application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/subscriptions');\n  test('controllers/subscriptions/management-application.js should pass jshint', function() { \n    ok(false, 'controllers/subscriptions/management-application.js should pass jshint.\\ncontrollers/subscriptions/management-application.js: line 27, col 19, \\'$\\' is not defined.\\ncontrollers/subscriptions/management-application.js: line 26, col 31, \\'params\\' is defined but never used.\\ncontrollers/subscriptions/management-application.js: line 35, col 56, \\'reject\\' is defined but never used.\\ncontrollers/subscriptions/management-application.js: line 55, col 29, \\'response\\' is defined but never used.\\n\\n4 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/subscriptions/select-subscriptions.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/subscriptions');\n  test('controllers/subscriptions/select-subscriptions.js should pass jshint', function() { \n    ok(true, 'controllers/subscriptions/select-subscriptions.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/controllers/where-install.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/where-install.js should pass jshint', function() { \n    ok(true, 'controllers/where-install.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/helpers/raw-text.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/raw-text.js should pass jshint', function() { \n    ok(false, 'helpers/raw-text.js should pass jshint.\\nhelpers/raw-text.js: line 4, col 14, \\'Handlebars\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/helpers/resolver', ['exports', 'ember/resolver', 'fusor-ember-cli/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('fusor-ember-cli/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/helpers/start-app', ['exports', 'ember', 'fusor-ember-cli/app', 'fusor-ember-cli/router', 'fusor-ember-cli/config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('fusor-ember-cli/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/mixins/configure-environment-mixin.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins');\n  test('mixins/configure-environment-mixin.js should pass jshint', function() { \n    ok(false, 'mixins/configure-environment-mixin.js should pass jshint.\\nmixins/configure-environment-mixin.js: line 17, col 98, \\'array\\' is defined but never used.\\nmixins/configure-environment-mixin.js: line 17, col 91, \\'index\\' is defined but never used.\\n\\n2 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/mixins/configure-organization-mixin.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins');\n  test('mixins/configure-organization-mixin.js should pass jshint', function() { \n    ok(true, 'mixins/configure-organization-mixin.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/mixins/deployment-controller-mixin.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins');\n  test('mixins/deployment-controller-mixin.js should pass jshint', function() { \n    ok(false, 'mixins/deployment-controller-mixin.js should pass jshint.\\nmixins/deployment-controller-mixin.js: line 147, col 24, Missing semicolon.\\nmixins/deployment-controller-mixin.js: line 155, col 24, Missing semicolon.\\nmixins/deployment-controller-mixin.js: line 161, col 24, Missing semicolon.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/mixins/deployment-new-controller-mixin.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins');\n  test('mixins/deployment-new-controller-mixin.js should pass jshint', function() { \n    ok(true, 'mixins/deployment-new-controller-mixin.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/mixins/deployment-new-satellite-route-mixin.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins');\n  test('mixins/deployment-new-satellite-route-mixin.js should pass jshint', function() { \n    ok(true, 'mixins/deployment-new-satellite-route-mixin.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/mixins/deployment-route-mixin.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins');\n  test('mixins/deployment-route-mixin.js should pass jshint', function() { \n    ok(true, 'mixins/deployment-route-mixin.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/mixins/disable-tab-mixin.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins');\n  test('mixins/disable-tab-mixin.js should pass jshint', function() { \n    ok(true, 'mixins/disable-tab-mixin.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/mixins/meta.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins');\n  test('mixins/meta.js should pass jshint', function() { \n    ok(true, 'mixins/meta.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/mixins/progress-bar-mixin.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins');\n  test('mixins/progress-bar-mixin.js should pass jshint', function() { \n    ok(false, 'mixins/progress-bar-mixin.js should pass jshint.\\nmixins/progress-bar-mixin.js: line 19, col 31, Missing semicolon.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/mixins/satellite-controller-mixin.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins');\n  test('mixins/satellite-controller-mixin.js should pass jshint', function() { \n    ok(true, 'mixins/satellite-controller-mixin.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/mixins/save-hostname-mixin.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins');\n  test('mixins/save-hostname-mixin.js should pass jshint', function() { \n    ok(false, 'mixins/save-hostname-mixin.js should pass jshint.\\nmixins/save-hostname-mixin.js: line 10, col 19, \\'$\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/mixins/start-controller-mixin.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - mixins');\n  test('mixins/start-controller-mixin.js should pass jshint', function() { \n    ok(true, 'mixins/start-controller-mixin.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/models/deployment.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/deployment.js should pass jshint', function() { \n    ok(true, 'models/deployment.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/models/discovered-host.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/discovered-host.js should pass jshint', function() { \n    ok(true, 'models/discovered-host.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/models/environment.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/environment.js should pass jshint', function() { \n    ok(true, 'models/environment.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/models/foreman-task.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/foreman-task.js should pass jshint', function() { \n    ok(true, 'models/foreman-task.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/models/host.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/host.js should pass jshint', function() { \n    ok(true, 'models/host.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/models/hostgroup.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/hostgroup.js should pass jshint', function() { \n    ok(true, 'models/hostgroup.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/models/lifecycle-environment.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/lifecycle-environment.js should pass jshint', function() { \n    ok(true, 'models/lifecycle-environment.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/models/location.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/location.js should pass jshint', function() { \n    ok(true, 'models/location.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/models/management-application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/management-application.js should pass jshint', function() { \n    ok(true, 'models/management-application.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/models/organization.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/organization.js should pass jshint', function() { \n    ok(true, 'models/organization.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/models/product.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/product.js should pass jshint', function() { \n    ok(true, 'models/product.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/models/session-portal.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/session-portal.js should pass jshint', function() { \n    ok(true, 'models/session-portal.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/models/subnet.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/subnet.js should pass jshint', function() { \n    ok(true, 'models/subnet.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/models/subscription.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/subscription.js should pass jshint', function() { \n    ok(true, 'models/subscription.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/models/traffic-type.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/traffic-type.js should pass jshint', function() { \n    ok(true, 'models/traffic-type.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/models/user.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/user.js should pass jshint', function() { \n    ok(true, 'models/user.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/router.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('router.js should pass jshint', function() { \n    ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/application.js should pass jshint', function() { \n    ok(true, 'routes/application.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/assign-nodes.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/assign-nodes.js should pass jshint', function() { \n    ok(true, 'routes/assign-nodes.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/cloudforms-storage-domain.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/cloudforms-storage-domain.js should pass jshint', function() { \n    ok(true, 'routes/cloudforms-storage-domain.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/cloudforms-vm.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/cloudforms-vm.js should pass jshint', function() { \n    ok(true, 'routes/cloudforms-vm.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/cloudforms.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/cloudforms.js should pass jshint', function() { \n    ok(true, 'routes/cloudforms.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/cloudforms/cfme-configuration.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/cloudforms');\n  test('routes/cloudforms/cfme-configuration.js should pass jshint', function() { \n    ok(true, 'routes/cloudforms/cfme-configuration.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/cloudforms/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/cloudforms');\n  test('routes/cloudforms/index.js should pass jshint', function() { \n    ok(true, 'routes/cloudforms/index.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/configure-environment.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/configure-environment.js should pass jshint', function() { \n    ok(true, 'routes/configure-environment.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/configure-organization.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/configure-organization.js should pass jshint', function() { \n    ok(true, 'routes/configure-organization.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/deployment-new.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/deployment-new.js should pass jshint', function() { \n    ok(true, 'routes/deployment-new.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/deployment-new/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/deployment-new');\n  test('routes/deployment-new/index.js should pass jshint', function() { \n    ok(true, 'routes/deployment-new/index.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/deployment-new/satellite.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/deployment-new');\n  test('routes/deployment-new/satellite.js should pass jshint', function() { \n    ok(true, 'routes/deployment-new/satellite.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/deployment-new/satellite/configure-environment.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/deployment-new/satellite');\n  test('routes/deployment-new/satellite/configure-environment.js should pass jshint', function() { \n    ok(true, 'routes/deployment-new/satellite/configure-environment.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/deployment-new/satellite/configure-organization.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/deployment-new/satellite');\n  test('routes/deployment-new/satellite/configure-organization.js should pass jshint', function() { \n    ok(true, 'routes/deployment-new/satellite/configure-organization.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/deployment-new/satellite/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/deployment-new/satellite');\n  test('routes/deployment-new/satellite/index.js should pass jshint', function() { \n    ok(true, 'routes/deployment-new/satellite/index.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/deployment-new/start.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/deployment-new');\n  test('routes/deployment-new/start.js should pass jshint', function() { \n    ok(true, 'routes/deployment-new/start.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/deployment.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/deployment.js should pass jshint', function() { \n    ok(false, 'routes/deployment.js should pass jshint.\\nroutes/deployment.js: line 53, col 17, Missing semicolon.\\nroutes/deployment.js: line 24, col 19, \\'$\\' is not defined.\\nroutes/deployment.js: line 84, col 19, \\'$\\' is not defined.\\nroutes/deployment.js: line 21, col 33, \\'options\\' is defined but never used.\\nroutes/deployment.js: line 81, col 32, \\'options\\' is defined but never used.\\nroutes/deployment.js: line 104, col 19, \\'deployment\\' is defined but never used.\\n\\n6 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/deployment/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/deployment');\n  test('routes/deployment/index.js should pass jshint', function() { \n    ok(true, 'routes/deployment/index.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/deployment/start.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/deployment');\n  test('routes/deployment/start.js should pass jshint', function() { \n    ok(true, 'routes/deployment/start.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/deployments.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/deployments.js should pass jshint', function() { \n    ok(true, 'routes/deployments.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/discovered-host.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/discovered-host.js should pass jshint', function() { \n    ok(true, 'routes/discovered-host.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/discovered-hosts.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/discovered-hosts.js should pass jshint', function() { \n    ok(true, 'routes/discovered-hosts.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/engine.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/engine.js should pass jshint', function() { \n    ok(true, 'routes/engine.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/engine/discovered-host.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/engine');\n  test('routes/engine/discovered-host.js should pass jshint', function() { \n    ok(true, 'routes/engine/discovered-host.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/engine/existing-host.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/engine');\n  test('routes/engine/existing-host.js should pass jshint', function() { \n    ok(true, 'routes/engine/existing-host.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/engine/hypervisor.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/engine');\n  test('routes/engine/hypervisor.js should pass jshint', function() { \n    ok(true, 'routes/engine/hypervisor.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/engine/new-host.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/engine');\n  test('routes/engine/new-host.js should pass jshint', function() { \n    ok(true, 'routes/engine/new-host.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/hostgroup.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/hostgroup.js should pass jshint', function() { \n    ok(true, 'routes/hostgroup.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/hostgroup/edit.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/hostgroup');\n  test('routes/hostgroup/edit.js should pass jshint', function() { \n    ok(true, 'routes/hostgroup/edit.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/hostgroups.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/hostgroups.js should pass jshint', function() { \n    ok(true, 'routes/hostgroups.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/hypervisor.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/hypervisor.js should pass jshint', function() { \n    ok(true, 'routes/hypervisor.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/hypervisor/discovered-host.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/hypervisor');\n  test('routes/hypervisor/discovered-host.js should pass jshint', function() { \n    ok(false, 'routes/hypervisor/discovered-host.js should pass jshint.\\nroutes/hypervisor/discovered-host.js: line 14, col 44, Missing semicolon.\\nroutes/hypervisor/discovered-host.js: line 23, col 19, \\'$\\' is not defined.\\nroutes/hypervisor/discovered-host.js: line 14, col 9, \\'model\\' is defined but never used.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/hypervisor/existing-host.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/hypervisor');\n  test('routes/hypervisor/existing-host.js should pass jshint', function() { \n    ok(true, 'routes/hypervisor/existing-host.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/hypervisor/new-host.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/hypervisor');\n  test('routes/hypervisor/new-host.js should pass jshint', function() { \n    ok(true, 'routes/hypervisor/new-host.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/index.js should pass jshint', function() { \n    ok(true, 'routes/index.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/loggedin.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/loggedin.js should pass jshint', function() { \n    ok(true, 'routes/loggedin.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/login.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/login.js should pass jshint', function() { \n    ok(false, 'routes/login.js should pass jshint.\\nroutes/login.js: line 8, col 6, Unnecessary semicolon.\\nroutes/login.js: line 5, col 25, \\'transition\\' is defined but never used.\\n\\n2 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/networking.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/networking.js should pass jshint', function() { \n    ok(true, 'routes/networking.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/new-environment.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/new-environment.js should pass jshint', function() { \n    ok(true, 'routes/new-environment.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/new-node-registration.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/new-node-registration.js should pass jshint', function() { \n    ok(true, 'routes/new-node-registration.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/new-organization.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/new-organization.js should pass jshint', function() { \n    ok(true, 'routes/new-organization.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/openstack.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/openstack.js should pass jshint', function() { \n    ok(true, 'routes/openstack.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/openstack/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/openstack');\n  test('routes/openstack/index.js should pass jshint', function() { \n    ok(true, 'routes/openstack/index.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/products.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/products.js should pass jshint', function() { \n    ok(true, 'routes/products.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/register-nodes.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/register-nodes.js should pass jshint', function() { \n    ok(true, 'routes/register-nodes.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/review.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/review.js should pass jshint', function() { \n    ok(true, 'routes/review.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/review/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/review');\n  test('routes/review/index.js should pass jshint', function() { \n    ok(true, 'routes/review/index.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/review/installation.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/review');\n  test('routes/review/installation.js should pass jshint', function() { \n    ok(true, 'routes/review/installation.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/review/progress.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/review');\n  test('routes/review/progress.js should pass jshint', function() { \n    ok(true, 'routes/review/progress.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/review/progress/details.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/review/progress');\n  test('routes/review/progress/details.js should pass jshint', function() { \n    ok(false, 'routes/review/progress/details.js should pass jshint.\\nroutes/review/progress/details.js: line 4, col 19, \\'params\\' is defined but never used.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/review/progress/details/task.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/review/progress/details');\n  test('routes/review/progress/details/task.js should pass jshint', function() { \n    ok(true, 'routes/review/progress/details/task.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/review/progress/details/task/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/review/progress/details/task');\n  test('routes/review/progress/details/task/index.js should pass jshint', function() { \n    ok(false, 'routes/review/progress/details/task/index.js should pass jshint.\\nroutes/review/progress/details/task/index.js: line 5, col 41, \\'model\\' is defined but never used.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/review/progress/details/task/running-steps.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/review/progress/details/task');\n  test('routes/review/progress/details/task/running-steps.js should pass jshint', function() { \n    ok(true, 'routes/review/progress/details/task/running-steps.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/review/progress/details/task/task-errors.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/review/progress/details/task');\n  test('routes/review/progress/details/task/task-errors.js should pass jshint', function() { \n    ok(true, 'routes/review/progress/details/task/task-errors.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/review/progress/details/task/task-locks.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/review/progress/details/task');\n  test('routes/review/progress/details/task/task-locks.js should pass jshint', function() { \n    ok(true, 'routes/review/progress/details/task/task-locks.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/review/progress/details/task/task-raw.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/review/progress/details/task');\n  test('routes/review/progress/details/task/task-raw.js should pass jshint', function() { \n    ok(true, 'routes/review/progress/details/task/task-raw.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/review/progress/overview.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/review/progress');\n  test('routes/review/progress/overview.js should pass jshint', function() { \n    ok(true, 'routes/review/progress/overview.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/rhci.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/rhci.js should pass jshint', function() { \n    ok(true, 'routes/rhci.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/rhev-options.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/rhev-options.js should pass jshint', function() { \n    ok(true, 'routes/rhev-options.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/rhev-setup.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/rhev-setup.js should pass jshint', function() { \n    ok(true, 'routes/rhev-setup.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/rhev.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/rhev.js should pass jshint', function() { \n    ok(true, 'routes/rhev.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/rhev/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/rhev');\n  test('routes/rhev/index.js should pass jshint', function() { \n    ok(true, 'routes/rhev/index.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/satellite.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/satellite.js should pass jshint', function() { \n    ok(true, 'routes/satellite.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/satellite/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/satellite');\n  test('routes/satellite/index.js should pass jshint', function() { \n    ok(true, 'routes/satellite/index.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/setpassword.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/setpassword.js should pass jshint', function() { \n    ok(true, 'routes/setpassword.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/single-deployment.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/single-deployment.js should pass jshint', function() { \n    ok(true, 'routes/single-deployment.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/storage.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/storage.js should pass jshint', function() { \n    ok(true, 'routes/storage.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/subscriptions.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/subscriptions.js should pass jshint', function() { \n    ok(false, 'routes/subscriptions.js should pass jshint.\\nroutes/subscriptions.js: line 23, col 29, \\'transition\\' is defined but never used.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/subscriptions/credentials.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/subscriptions');\n  test('routes/subscriptions/credentials.js should pass jshint', function() { \n    ok(false, 'routes/subscriptions/credentials.js should pass jshint.\\nroutes/subscriptions/credentials.js: line 11, col 67, Missing semicolon.\\nroutes/subscriptions/credentials.js: line 32, col 71, Missing semicolon.\\nroutes/subscriptions/credentials.js: line 64, col 71, Missing semicolon.\\nroutes/subscriptions/credentials.js: line 93, col 71, Missing semicolon.\\nroutes/subscriptions/credentials.js: line 97, col 60, Missing semicolon.\\nroutes/subscriptions/credentials.js: line 99, col 27, \\'sessionPortal\\' is already defined.\\nroutes/subscriptions/credentials.js: line 102, col 46, Missing semicolon.\\nroutes/subscriptions/credentials.js: line 103, col 51, Missing semicolon.\\nroutes/subscriptions/credentials.js: line 115, col 71, Missing semicolon.\\nroutes/subscriptions/credentials.js: line 139, col 66, Missing semicolon.\\nroutes/subscriptions/credentials.js: line 156, col 45, Missing semicolon.\\nroutes/subscriptions/credentials.js: line 164, col 71, Missing semicolon.\\nroutes/subscriptions/credentials.js: line 13, col 5, \\'$\\' is not defined.\\nroutes/subscriptions/credentials.js: line 35, col 19, \\'$\\' is not defined.\\nroutes/subscriptions/credentials.js: line 65, col 19, \\'$\\' is not defined.\\nroutes/subscriptions/credentials.js: line 118, col 19, \\'$\\' is not defined.\\nroutes/subscriptions/credentials.js: line 8, col 9, \\'sessionPortal\\' is defined but never used.\\nroutes/subscriptions/credentials.js: line 9, col 9, \\'upstream_consumer_uuid\\' is defined but never used.\\nroutes/subscriptions/credentials.js: line 25, col 29, \\'transition\\' is defined but never used.\\nroutes/subscriptions/credentials.js: line 25, col 21, \\'reason\\' is defined but never used.\\nroutes/subscriptions/credentials.js: line 38, col 56, \\'reject\\' is defined but never used.\\nroutes/subscriptions/credentials.js: line 38, col 47, \\'resolve\\' is defined but never used.\\nroutes/subscriptions/credentials.js: line 48, col 31, \\'response\\' is defined but never used.\\nroutes/subscriptions/credentials.js: line 52, col 29, \\'response\\' is defined but never used.\\nroutes/subscriptions/credentials.js: line 64, col 11, \\'controller\\' is defined but never used.\\nroutes/subscriptions/credentials.js: line 67, col 56, \\'reject\\' is defined but never used.\\nroutes/subscriptions/credentials.js: line 67, col 47, \\'resolve\\' is defined but never used.\\nroutes/subscriptions/credentials.js: line 76, col 31, \\'response\\' is defined but never used.\\nroutes/subscriptions/credentials.js: line 84, col 29, \\'response\\' is defined but never used.\\nroutes/subscriptions/credentials.js: line 101, col 42, \\'result\\' is defined but never used.\\nroutes/subscriptions/credentials.js: line 105, col 19, \\'response\\' is defined but never used.\\nroutes/subscriptions/credentials.js: line 117, col 11, \\'password\\' is defined but never used.\\nroutes/subscriptions/credentials.js: line 122, col 56, \\'reject\\' is defined but never used.\\nroutes/subscriptions/credentials.js: line 122, col 47, \\'resolve\\' is defined but never used.\\nroutes/subscriptions/credentials.js: line 138, col 50, \\'result\\' is defined but never used.\\nroutes/subscriptions/credentials.js: line 143, col 27, \\'response\\' is defined but never used.\\nroutes/subscriptions/credentials.js: line 150, col 29, \\'response\\' is defined but never used.\\n\\n37 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/subscriptions/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/subscriptions');\n  test('routes/subscriptions/index.js should pass jshint', function() { \n    ok(true, 'routes/subscriptions/index.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/subscriptions/management-application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/subscriptions');\n  test('routes/subscriptions/management-application.js should pass jshint', function() { \n    ok(false, 'routes/subscriptions/management-application.js should pass jshint.\\nroutes/subscriptions/management-application.js: line 23, col 64, Missing semicolon.\\nroutes/subscriptions/management-application.js: line 41, col 69, Missing semicolon.\\nroutes/subscriptions/management-application.js: line 45, col 31, Missing semicolon.\\nroutes/subscriptions/management-application.js: line 46, col 57, Missing semicolon.\\nroutes/subscriptions/management-application.js: line 13, col 12, \\'$\\' is not defined.\\nroutes/subscriptions/management-application.js: line 43, col 7, \\'$\\' is not defined.\\nroutes/subscriptions/management-application.js: line 58, col 31, \\'transition\\' is defined but never used.\\nroutes/subscriptions/management-application.js: line 58, col 23, \\'reason\\' is defined but never used.\\n\\n8 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/subscriptions/select-subscriptions.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/subscriptions');\n  test('routes/subscriptions/select-subscriptions.js should pass jshint', function() { \n    ok(false, 'routes/subscriptions/select-subscriptions.js should pass jshint.\\nroutes/subscriptions/select-subscriptions.js: line 12, col 57, Missing semicolon.\\nroutes/subscriptions/select-subscriptions.js: line 13, col 53, Missing semicolon.\\nroutes/subscriptions/select-subscriptions.js: line 35, col 63, Missing semicolon.\\nroutes/subscriptions/select-subscriptions.js: line 12, col 31, \\'$\\' is not defined.\\nroutes/subscriptions/select-subscriptions.js: line 13, col 31, \\'$\\' is not defined.\\nroutes/subscriptions/select-subscriptions.js: line 49, col 21, \\'$\\' is not defined.\\nroutes/subscriptions/select-subscriptions.js: line 51, col 13, \\'ownerKey\\' is defined but never used.\\nroutes/subscriptions/select-subscriptions.js: line 76, col 62, \\'reject\\' is defined but never used.\\nroutes/subscriptions/select-subscriptions.js: line 76, col 53, \\'resolve\\' is defined but never used.\\nroutes/subscriptions/select-subscriptions.js: line 86, col 37, \\'response\\' is defined but never used.\\nroutes/subscriptions/select-subscriptions.js: line 92, col 35, \\'response\\' is defined but never used.\\nroutes/subscriptions/select-subscriptions.js: line 103, col 31, \\'transition\\' is defined but never used.\\n\\n12 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/routes/where-install.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/where-install.js should pass jshint', function() { \n    ok(true, 'routes/where-install.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/serializers/foreman-task.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - serializers');\n  test('serializers/foreman-task.js should pass jshint', function() { \n    ok(true, 'serializers/foreman-task.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/serializers/puppetclass.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - serializers');\n  test('serializers/puppetclass.js should pass jshint', function() { \n    ok(false, 'serializers/puppetclass.js should pass jshint.\\nserializers/puppetclass.js: line 8, col 35, \\'$\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/test-helper', ['fusor-ember-cli/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('fusor-ember-cli/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/torii-providers/foreman.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - torii-providers');\n  test('torii-providers/foreman.js should pass jshint', function() { \n    ok(false, 'torii-providers/foreman.js should pass jshint.\\ntorii-providers/foreman.js: line 1, col 16, \\'Ember\\' is not defined.\\ntorii-providers/foreman.js: line 5, col 16, \\'Ember\\' is not defined.\\ntorii-providers/foreman.js: line 7, col 7, \\'exampleAsyncLogin\\' is not defined.\\ntorii-providers/foreman.js: line 14, col 11, \\'Ember\\' is not defined.\\ntorii-providers/foreman.js: line 5, col 53, \\'reject\\' is defined but never used.\\n\\n5 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/adapters/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:application', 'ApplicationAdapter', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var adapter = this.subject();\n    ok(adapter);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['serializer:foo']\n\n});","define('fusor-ember-cli/tests/unit/adapters/application-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/adapters');\n  test('unit/adapters/application-test.js should pass jshint', function() { \n    ok(false, 'unit/adapters/application-test.js should pass jshint.\\nunit/adapters/application-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/adapters/credential-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:credential', 'CredentialAdapter', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['serializer:foo']\n\n});","define('fusor-ember-cli/tests/unit/adapters/credential-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/adapters');\n  test('unit/adapters/credential-test.js should pass jshint', function() { \n    ok(true, 'unit/adapters/credential-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/adapters/foreman-task-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:foreman-task', 'ForemanTaskAdapter', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['serializer:foo']\n\n});","define('fusor-ember-cli/tests/unit/adapters/foreman-task-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/adapters');\n  test('unit/adapters/foreman-task-test.js should pass jshint', function() { \n    ok(true, 'unit/adapters/foreman-task-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/adapters/hostgroup-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:hostgroup', 'HostgroupAdapter', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var adapter = this.subject();\n    ok(adapter);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['serializer:foo']\n\n});","define('fusor-ember-cli/tests/unit/adapters/hostgroup-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/adapters');\n  test('unit/adapters/hostgroup-test.js should pass jshint', function() { \n    ok(false, 'unit/adapters/hostgroup-test.js should pass jshint.\\nunit/adapters/hostgroup-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/adapters/lifecycle-environment-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:lifecycle-environment', 'LifecycleEnvironmentAdapter', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var adapter = this.subject();\n    ok(adapter);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['serializer:foo']\n\n});","define('fusor-ember-cli/tests/unit/adapters/lifecycle-environment-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/adapters');\n  test('unit/adapters/lifecycle-environment-test.js should pass jshint', function() { \n    ok(false, 'unit/adapters/lifecycle-environment-test.js should pass jshint.\\nunit/adapters/lifecycle-environment-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/adapters/subscriptions-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:subscriptions', 'SubscriptionsAdapter', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var adapter = this.subject();\n    ok(adapter);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['serializer:foo']\n\n});","define('fusor-ember-cli/tests/unit/adapters/subscriptions-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/adapters');\n  test('unit/adapters/subscriptions-test.js should pass jshint', function() { \n    ok(false, 'unit/adapters/subscriptions-test.js should pass jshint.\\nunit/adapters/subscriptions-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/adapters/traffic-type-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:traffic-type', 'TrafficTypeAdapter', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var adapter = this.subject();\n    ok(adapter);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['serializer:foo']\n\n});","define('fusor-ember-cli/tests/unit/adapters/traffic-type-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/adapters');\n  test('unit/adapters/traffic-type-test.js should pass jshint', function() { \n    ok(false, 'unit/adapters/traffic-type-test.js should pass jshint.\\nunit/adapters/traffic-type-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/components/accordion-item-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('accordion-item', 'AccordionItemComponent', {});\n\n  ember_qunit.test('it renders', function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    equal(component._state, 'preRender');\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, 'inDOM');\n  });\n\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('fusor-ember-cli/tests/unit/components/accordion-item-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/accordion-item-test.js should pass jshint', function() { \n    ok(false, 'unit/components/accordion-item-test.js should pass jshint.\\nunit/components/accordion-item-test.js: line 12, col 3, \\'expect\\' is not defined.\\nunit/components/accordion-item-test.js: line 16, col 3, \\'equal\\' is not defined.\\nunit/components/accordion-item-test.js: line 20, col 3, \\'equal\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/components/base-f-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('base-f', 'BaseFComponent', {});\n\n  ember_qunit.test('it renders', function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    equal(component._state, 'preRender');\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, 'inDOM');\n  });\n\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('fusor-ember-cli/tests/unit/components/base-f-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/base-f-test.js should pass jshint', function() { \n    ok(false, 'unit/components/base-f-test.js should pass jshint.\\nunit/components/base-f-test.js: line 12, col 3, \\'expect\\' is not defined.\\nunit/components/base-f-test.js: line 16, col 3, \\'equal\\' is not defined.\\nunit/components/base-f-test.js: line 20, col 3, \\'equal\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/components/button-f-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('button-f', {});\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    assert.equal(component._state, 'preRender');\n\n    // renders the component to the page\n    this.render();\n    assert.equal(component._state, 'inDOM');\n  });\n\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('fusor-ember-cli/tests/unit/components/button-f-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/button-f-test.js should pass jshint', function() { \n    ok(true, 'unit/components/button-f-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/components/cancel-back-next-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('cancel-back-next', 'Unit | Component | cancel back next', {});\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // Creates the component instance\n    var component = this.subject();\n    assert.equal(component._state, 'preRender');\n\n    // Renders the component to the page\n    this.render();\n    assert.equal(component._state, 'inDOM');\n  });\n\n  // Specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('fusor-ember-cli/tests/unit/components/cancel-back-next-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/cancel-back-next-test.js should pass jshint', function() { \n    ok(true, 'unit/components/cancel-back-next-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/components/env-path-list-item-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('env-path-list-item', 'EnvPathListItemComponent', {});\n\n  ember_qunit.test('it renders', function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    equal(component._state, 'preRender');\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, 'inDOM');\n  });\n\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('fusor-ember-cli/tests/unit/components/env-path-list-item-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/env-path-list-item-test.js should pass jshint', function() { \n    ok(false, 'unit/components/env-path-list-item-test.js should pass jshint.\\nunit/components/env-path-list-item-test.js: line 12, col 3, \\'expect\\' is not defined.\\nunit/components/env-path-list-item-test.js: line 16, col 3, \\'equal\\' is not defined.\\nunit/components/env-path-list-item-test.js: line 20, col 3, \\'equal\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/components/modal-confirm-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('model-confirm', 'ModelConfirmComponent', {});\n\n  ember_qunit.test('it renders', function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    equal(component._state, 'preRender');\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, 'inDOM');\n  });\n\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('fusor-ember-cli/tests/unit/components/modal-confirm-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/modal-confirm-test.js should pass jshint', function() { \n    ok(false, 'unit/components/modal-confirm-test.js should pass jshint.\\nunit/components/modal-confirm-test.js: line 12, col 3, \\'expect\\' is not defined.\\nunit/components/modal-confirm-test.js: line 16, col 3, \\'equal\\' is not defined.\\nunit/components/modal-confirm-test.js: line 20, col 3, \\'equal\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/components/radio-button-f-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('radio-button-f', 'RadioButtonFComponent', {});\n\n  ember_qunit.test('it renders', function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    equal(component._state, 'preRender');\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, 'inDOM');\n  });\n\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('fusor-ember-cli/tests/unit/components/radio-button-f-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/radio-button-f-test.js should pass jshint', function() { \n    ok(false, 'unit/components/radio-button-f-test.js should pass jshint.\\nunit/components/radio-button-f-test.js: line 12, col 3, \\'expect\\' is not defined.\\nunit/components/radio-button-f-test.js: line 16, col 3, \\'equal\\' is not defined.\\nunit/components/radio-button-f-test.js: line 20, col 3, \\'equal\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/components/rchi-item-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('rchi-item', 'RchiItemComponent', {});\n\n  ember_qunit.test('it renders', function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    equal(component._state, 'preRender');\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, 'inDOM');\n  });\n\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('fusor-ember-cli/tests/unit/components/rchi-item-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/rchi-item-test.js should pass jshint', function() { \n    ok(false, 'unit/components/rchi-item-test.js should pass jshint.\\nunit/components/rchi-item-test.js: line 12, col 3, \\'expect\\' is not defined.\\nunit/components/rchi-item-test.js: line 16, col 3, \\'equal\\' is not defined.\\nunit/components/rchi-item-test.js: line 20, col 3, \\'equal\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/components/review-link-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('review-link', {});\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // Creates the component instance\n    var component = this.subject();\n    assert.equal(component._state, 'preRender');\n\n    // Renders the component to the page\n    this.render();\n    assert.equal(component._state, 'inDOM');\n  });\n\n  // Specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('fusor-ember-cli/tests/unit/components/review-link-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/review-link-test.js should pass jshint', function() { \n    ok(true, 'unit/components/review-link-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/components/rhci-hover-text-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('rhci-hover-text', 'RhciHoverTextComponent', {});\n\n  ember_qunit.test('it renders', function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    equal(component._state, 'preRender');\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, 'inDOM');\n  });\n\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('fusor-ember-cli/tests/unit/components/rhci-hover-text-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/rhci-hover-text-test.js should pass jshint', function() { \n    ok(false, 'unit/components/rhci-hover-text-test.js should pass jshint.\\nunit/components/rhci-hover-text-test.js: line 12, col 3, \\'expect\\' is not defined.\\nunit/components/rhci-hover-text-test.js: line 16, col 3, \\'equal\\' is not defined.\\nunit/components/rhci-hover-text-test.js: line 20, col 3, \\'equal\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/components/rhci-start-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('rhci-start', 'RhciStartComponent', {});\n\n  ember_qunit.test('it renders', function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    equal(component._state, 'preRender');\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, 'inDOM');\n  });\n\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('fusor-ember-cli/tests/unit/components/rhci-start-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/rhci-start-test.js should pass jshint', function() { \n    ok(false, 'unit/components/rhci-start-test.js should pass jshint.\\nunit/components/rhci-start-test.js: line 12, col 3, \\'expect\\' is not defined.\\nunit/components/rhci-start-test.js: line 16, col 3, \\'equal\\' is not defined.\\nunit/components/rhci-start-test.js: line 20, col 3, \\'equal\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/components/rhci-wizard-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('rhci-wizard', 'RhciWizardComponent', {});\n\n  ember_qunit.test('it renders', function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    equal(component._state, 'preRender');\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, 'inDOM');\n  });\n\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('fusor-ember-cli/tests/unit/components/rhci-wizard-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/rhci-wizard-test.js should pass jshint', function() { \n    ok(false, 'unit/components/rhci-wizard-test.js should pass jshint.\\nunit/components/rhci-wizard-test.js: line 12, col 3, \\'expect\\' is not defined.\\nunit/components/rhci-wizard-test.js: line 16, col 3, \\'equal\\' is not defined.\\nunit/components/rhci-wizard-test.js: line 20, col 3, \\'equal\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/components/select-f-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('select-f', 'SelectFComponent', {});\n\n  ember_qunit.test('it renders', function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    equal(component._state, 'preRender');\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, 'inDOM');\n  });\n\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('fusor-ember-cli/tests/unit/components/select-f-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/select-f-test.js should pass jshint', function() { \n    ok(false, 'unit/components/select-f-test.js should pass jshint.\\nunit/components/select-f-test.js: line 12, col 3, \\'expect\\' is not defined.\\nunit/components/select-f-test.js: line 16, col 3, \\'equal\\' is not defined.\\nunit/components/select-f-test.js: line 20, col 3, \\'equal\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/components/select-simple-f-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('select-simple-f', 'SelectSimpleFComponent', {});\n\n  ember_qunit.test('it renders', function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    equal(component._state, 'preRender');\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, 'inDOM');\n  });\n\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('fusor-ember-cli/tests/unit/components/select-simple-f-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/select-simple-f-test.js should pass jshint', function() { \n    ok(false, 'unit/components/select-simple-f-test.js should pass jshint.\\nunit/components/select-simple-f-test.js: line 12, col 3, \\'expect\\' is not defined.\\nunit/components/select-simple-f-test.js: line 16, col 3, \\'equal\\' is not defined.\\nunit/components/select-simple-f-test.js: line 20, col 3, \\'equal\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/components/step-number-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('step-number', 'StepNumberComponent', {});\n\n  ember_qunit.test('it renders', function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    equal(component._state, 'preRender');\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, 'inDOM');\n  });\n\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('fusor-ember-cli/tests/unit/components/step-number-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/step-number-test.js should pass jshint', function() { \n    ok(false, 'unit/components/step-number-test.js should pass jshint.\\nunit/components/step-number-test.js: line 12, col 3, \\'expect\\' is not defined.\\nunit/components/step-number-test.js: line 16, col 3, \\'equal\\' is not defined.\\nunit/components/step-number-test.js: line 20, col 3, \\'equal\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/components/subnet-drop-area-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('subnet-drop-area', 'SubnetDropAreaComponent', {});\n\n  ember_qunit.test('it renders', function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    equal(component._state, 'preRender');\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, 'inDOM');\n  });\n\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('fusor-ember-cli/tests/unit/components/subnet-drop-area-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/subnet-drop-area-test.js should pass jshint', function() { \n    ok(false, 'unit/components/subnet-drop-area-test.js should pass jshint.\\nunit/components/subnet-drop-area-test.js: line 12, col 3, \\'expect\\' is not defined.\\nunit/components/subnet-drop-area-test.js: line 16, col 3, \\'equal\\' is not defined.\\nunit/components/subnet-drop-area-test.js: line 20, col 3, \\'equal\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/components/text-f-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('text-f', 'TextFComponent', {});\n\n  ember_qunit.test('it renders', function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    equal(component._state, 'preRender');\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, 'inDOM');\n  });\n\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('fusor-ember-cli/tests/unit/components/text-f-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/text-f-test.js should pass jshint', function() { \n    ok(false, 'unit/components/text-f-test.js should pass jshint.\\nunit/components/text-f-test.js: line 12, col 3, \\'expect\\' is not defined.\\nunit/components/text-f-test.js: line 16, col 3, \\'equal\\' is not defined.\\nunit/components/text-f-test.js: line 20, col 3, \\'equal\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/components/textarea-f-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('textarea-f', 'TextareaFComponent', {});\n\n  ember_qunit.test('it renders', function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    equal(component._state, 'preRender');\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, 'inDOM');\n  });\n\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('fusor-ember-cli/tests/unit/components/textarea-f-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/textarea-f-test.js should pass jshint', function() { \n    ok(false, 'unit/components/textarea-f-test.js should pass jshint.\\nunit/components/textarea-f-test.js: line 12, col 3, \\'expect\\' is not defined.\\nunit/components/textarea-f-test.js: line 16, col 3, \\'equal\\' is not defined.\\nunit/components/textarea-f-test.js: line 20, col 3, \\'equal\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/components/tr-engine-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('tr-engine', {});\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    assert.equal(component._state, 'preRender');\n\n    // renders the component to the page\n    this.render();\n    assert.equal(component._state, 'inDOM');\n  });\n\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('fusor-ember-cli/tests/unit/components/tr-engine-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/tr-engine-test.js should pass jshint', function() { \n    ok(true, 'unit/components/tr-engine-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/components/tr-hypervisor-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('tr-hypervisor', {});\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    assert.equal(component._state, 'preRender');\n\n    // renders the component to the page\n    this.render();\n    assert.equal(component._state, 'inDOM');\n  });\n\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('fusor-ember-cli/tests/unit/components/tr-hypervisor-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/tr-hypervisor-test.js should pass jshint', function() { \n    ok(true, 'unit/components/tr-hypervisor-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/components/tr-management-app-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('tr-management-app', {});\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // Creates the component instance\n    var component = this.subject();\n    assert.equal(component._state, 'preRender');\n\n    // Renders the component to the page\n    this.render();\n    assert.equal(component._state, 'inDOM');\n  });\n\n  // Specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('fusor-ember-cli/tests/unit/components/tr-management-app-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/tr-management-app-test.js should pass jshint', function() { \n    ok(true, 'unit/components/tr-management-app-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/components/tr-organization-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('tr-organization', 'TrOrganizationComponent', {});\n\n  ember_qunit.test('it renders', function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    equal(component._state, 'preRender');\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, 'inDOM');\n  });\n\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('fusor-ember-cli/tests/unit/components/tr-organization-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/tr-organization-test.js should pass jshint', function() { \n    ok(false, 'unit/components/tr-organization-test.js should pass jshint.\\nunit/components/tr-organization-test.js: line 12, col 3, \\'expect\\' is not defined.\\nunit/components/tr-organization-test.js: line 16, col 3, \\'equal\\' is not defined.\\nunit/components/tr-organization-test.js: line 20, col 3, \\'equal\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/components/tr-subscription-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('tr-subscription', {});\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // Creates the component instance\n    var component = this.subject();\n    assert.equal(component._state, 'preRender');\n\n    // Renders the component to the page\n    this.render();\n    assert.equal(component._state, 'inDOM');\n  });\n\n  // Specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('fusor-ember-cli/tests/unit/components/tr-subscription-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/tr-subscription-test.js should pass jshint', function() { \n    ok(true, 'unit/components/tr-subscription-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/components/tr-task-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('tr-task', {});\n\n  ember_qunit.test('it renders', function (assert) {\n    assert.expect(2);\n\n    // Creates the component instance\n    var component = this.subject();\n    assert.equal(component._state, 'preRender');\n\n    // Renders the component to the page\n    this.render();\n    assert.equal(component._state, 'inDOM');\n  });\n\n  // Specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('fusor-ember-cli/tests/unit/components/tr-task-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/tr-task-test.js should pass jshint', function() { \n    ok(true, 'unit/components/tr-task-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/components/traffic-type-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('traffic-type', 'TrafficTypeComponent', {});\n\n  ember_qunit.test('it renders', function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    equal(component._state, 'preRender');\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, 'inDOM');\n  });\n\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('fusor-ember-cli/tests/unit/components/traffic-type-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/traffic-type-test.js should pass jshint', function() { \n    ok(false, 'unit/components/traffic-type-test.js should pass jshint.\\nunit/components/traffic-type-test.js: line 12, col 3, \\'expect\\' is not defined.\\nunit/components/traffic-type-test.js: line 16, col 3, \\'equal\\' is not defined.\\nunit/components/traffic-type-test.js: line 20, col 3, \\'equal\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/components/upstream-downstream-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('upstream-downstream', 'UpstreamDownstreamComponent', {});\n\n  ember_qunit.test('it renders', function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    equal(component._state, 'preRender');\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, 'inDOM');\n  });\n\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('fusor-ember-cli/tests/unit/components/upstream-downstream-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/upstream-downstream-test.js should pass jshint', function() { \n    ok(false, 'unit/components/upstream-downstream-test.js should pass jshint.\\nunit/components/upstream-downstream-test.js: line 12, col 3, \\'expect\\' is not defined.\\nunit/components/upstream-downstream-test.js: line 16, col 3, \\'equal\\' is not defined.\\nunit/components/upstream-downstream-test.js: line 20, col 3, \\'equal\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/components/vertical-tab-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('vertical-tab', 'VerticalTabComponent', {});\n\n  ember_qunit.test('it renders', function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    equal(component._state, 'preRender');\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, 'inDOM');\n  });\n\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('fusor-ember-cli/tests/unit/components/vertical-tab-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/vertical-tab-test.js should pass jshint', function() { \n    ok(false, 'unit/components/vertical-tab-test.js should pass jshint.\\nunit/components/vertical-tab-test.js: line 12, col 3, \\'expect\\' is not defined.\\nunit/components/vertical-tab-test.js: line 16, col 3, \\'equal\\' is not defined.\\nunit/components/vertical-tab-test.js: line 20, col 3, \\'equal\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/components/wizard-item-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('wizard-item', 'WizardItemComponent', {});\n\n  ember_qunit.test('it renders', function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    equal(component._state, 'preRender');\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, 'inDOM');\n  });\n\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('fusor-ember-cli/tests/unit/components/wizard-item-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/wizard-item-test.js should pass jshint', function() { \n    ok(false, 'unit/components/wizard-item-test.js should pass jshint.\\nunit/components/wizard-item-test.js: line 12, col 3, \\'expect\\' is not defined.\\nunit/components/wizard-item-test.js: line 16, col 3, \\'equal\\' is not defined.\\nunit/components/wizard-item-test.js: line 20, col 3, \\'equal\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/components/wrap-in-container-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent('wrap-in-container', 'WrapInContainerComponent', {});\n\n  ember_qunit.test('it renders', function () {\n    expect(2);\n\n    // creates the component instance\n    var component = this.subject();\n    equal(component._state, 'preRender');\n\n    // appends the component to the page\n    this.append();\n    equal(component._state, 'inDOM');\n  });\n\n  // specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('fusor-ember-cli/tests/unit/components/wrap-in-container-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/wrap-in-container-test.js should pass jshint', function() { \n    ok(false, 'unit/components/wrap-in-container-test.js should pass jshint.\\nunit/components/wrap-in-container-test.js: line 12, col 3, \\'expect\\' is not defined.\\nunit/components/wrap-in-container-test.js: line 16, col 3, \\'equal\\' is not defined.\\nunit/components/wrap-in-container-test.js: line 20, col 3, \\'equal\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:application', 'ApplicationController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/application-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/application-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/application-test.js should pass jshint.\\nunit/controllers/application-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/cloudforms-storage-domain-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:cloudforms-storage-domain', 'CloudformsStorageDomainController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/cloudforms-storage-domain-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/cloudforms-storage-domain-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/cloudforms-storage-domain-test.js should pass jshint.\\nunit/controllers/cloudforms-storage-domain-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/cloudforms-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:cloudforms', 'CloudformsController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/cloudforms-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/cloudforms-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/cloudforms-test.js should pass jshint.\\nunit/controllers/cloudforms-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/cloudforms-vm-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:cloudforms-vm', 'CloudformsVmController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/cloudforms-vm-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/cloudforms-vm-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/cloudforms-vm-test.js should pass jshint.\\nunit/controllers/cloudforms-vm-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/cloudforms/cfme-configuration-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:cloudforms/cfme-configuration', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/cloudforms/cfme-configuration-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/cloudforms');\n  test('unit/controllers/cloudforms/cfme-configuration-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/cloudforms/cfme-configuration-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/configure-environment-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:configure-environment', 'ConfigureEnvironmentController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/configure-environment-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/configure-environment-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/configure-environment-test.js should pass jshint.\\nunit/controllers/configure-environment-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/configure-organization-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:configure-organization', 'ConfigureOrganizationController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/configure-organization-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/configure-organization-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/configure-organization-test.js should pass jshint.\\nunit/controllers/configure-organization-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/configure/new-organization-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:configure/new-organization', 'ConfigureNewOrganizationController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/configure/new-organization-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/configure');\n  test('unit/controllers/configure/new-organization-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/configure/new-organization-test.js should pass jshint.\\nunit/controllers/configure/new-organization-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/deployment-new-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:deployment-new', 'DeploymentNewController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/deployment-new-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/deployment-new-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/deployment-new-test.js should pass jshint.\\nunit/controllers/deployment-new-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/deployment-new/satellite-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:deployment-new/satellite', 'DeploymentNewSatelliteController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/deployment-new/satellite-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/deployment-new');\n  test('unit/controllers/deployment-new/satellite-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/deployment-new/satellite-test.js should pass jshint.\\nunit/controllers/deployment-new/satellite-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/deployment-new/satellite/configure-environment-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:deployment-new/satellite/configure-environment', 'DeploymentNewSatelliteConfigureEnvironmentController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/deployment-new/satellite/configure-environment-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/deployment-new/satellite');\n  test('unit/controllers/deployment-new/satellite/configure-environment-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/deployment-new/satellite/configure-environment-test.js should pass jshint.\\nunit/controllers/deployment-new/satellite/configure-environment-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/deployment-new/satellite/configure-organization-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:deployment-new/satellite/configure-organization', 'DeploymentNewSatelliteConfigureOrganizationController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/deployment-new/satellite/configure-organization-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/deployment-new/satellite');\n  test('unit/controllers/deployment-new/satellite/configure-organization-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/deployment-new/satellite/configure-organization-test.js should pass jshint.\\nunit/controllers/deployment-new/satellite/configure-organization-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/deployment-new/satellite/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:deployment-new/satellite/index', 'DeploymentNewSatelliteIndexController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/deployment-new/satellite/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/deployment-new/satellite');\n  test('unit/controllers/deployment-new/satellite/index-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/deployment-new/satellite/index-test.js should pass jshint.\\nunit/controllers/deployment-new/satellite/index-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/deployment-new/start-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:deployment-new/start', 'DeploymentNewStartController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/deployment-new/start-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/deployment-new');\n  test('unit/controllers/deployment-new/start-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/deployment-new/start-test.js should pass jshint.\\nunit/controllers/deployment-new/start-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/deployment-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:deployment', 'DeploymentController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/deployment-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/deployment-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/deployment-test.js should pass jshint.\\nunit/controllers/deployment-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/deployment/start-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:deployment/start', 'DeploymentStartController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/deployment/start-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/deployment');\n  test('unit/controllers/deployment/start-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/deployment/start-test.js should pass jshint.\\nunit/controllers/deployment/start-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/deployments-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:deployments', 'DeploymentsController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/deployments-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/deployments-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/deployments-test.js should pass jshint.\\nunit/controllers/deployments-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/discovered-host-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:discovered-host', 'DiscoveredHostController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/discovered-host-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/discovered-host-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/discovered-host-test.js should pass jshint.\\nunit/controllers/discovered-host-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/engine-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:engine', 'EngineController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/engine-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/engine-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/engine-test.js should pass jshint.\\nunit/controllers/engine-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/engine/discovered-host-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:engine/discovered-host', 'EngineDiscoveredHostController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/engine/discovered-host-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/engine');\n  test('unit/controllers/engine/discovered-host-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/engine/discovered-host-test.js should pass jshint.\\nunit/controllers/engine/discovered-host-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/host-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:host', 'HostController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/host-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/host-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/host-test.js should pass jshint.\\nunit/controllers/host-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/hostgroup-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:hostgroup', 'HostgroupController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/hostgroup-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/hostgroup-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/hostgroup-test.js should pass jshint.\\nunit/controllers/hostgroup-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/hypervisor-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:hypervisor', 'HypervisorController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/hypervisor-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/hypervisor-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/hypervisor-test.js should pass jshint.\\nunit/controllers/hypervisor-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/hypervisor/discovered-host-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:hypervisor/discovered-host', 'HypervisorDiscoveredHostController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/hypervisor/discovered-host-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/hypervisor');\n  test('unit/controllers/hypervisor/discovered-host-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/hypervisor/discovered-host-test.js should pass jshint.\\nunit/controllers/hypervisor/discovered-host-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/lifecycle-environment-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:environment', 'EnvironmentController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/lifecycle-environment-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/lifecycle-environment-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/lifecycle-environment-test.js should pass jshint.\\nunit/controllers/lifecycle-environment-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/lifecycle-environments-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:environments', 'EnvironmentsController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/lifecycle-environments-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/lifecycle-environments-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/lifecycle-environments-test.js should pass jshint.\\nunit/controllers/lifecycle-environments-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/login-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:login', 'LoginController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/login-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/login-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/login-test.js should pass jshint.\\nunit/controllers/login-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/logout-model-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:logout-model', 'LogoutModelController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/logout-model-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/logout-model-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/logout-model-test.js should pass jshint.\\nunit/controllers/logout-model-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/networking-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:networking', 'NetworkingController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/networking-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/networking-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/networking-test.js should pass jshint.\\nunit/controllers/networking-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/new-environment-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:new-environment', 'NewEnvironmentController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/new-environment-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/new-environment-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/new-environment-test.js should pass jshint.\\nunit/controllers/new-environment-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/new-organization-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:new-organization', 'NewOrganizationController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/new-organization-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/new-organization-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/new-organization-test.js should pass jshint.\\nunit/controllers/new-organization-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/openstack-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:openstack', 'OpenstackController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/openstack-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/openstack-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/openstack-test.js should pass jshint.\\nunit/controllers/openstack-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/organization-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:organization', 'OrganizationController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/organization-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/organization-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/organization-test.js should pass jshint.\\nunit/controllers/organization-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/organizations-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:organizations', 'OrganizationsController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/organizations-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/organizations-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/organizations-test.js should pass jshint.\\nunit/controllers/organizations-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/product-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:product', 'ProductController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/product-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/product-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/product-test.js should pass jshint.\\nunit/controllers/product-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/products-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:products', 'ProductsController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/products-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/products-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/products-test.js should pass jshint.\\nunit/controllers/products-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/review-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:review', 'ReviewController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/review-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/review-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/review-test.js should pass jshint.\\nunit/controllers/review-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/review/installation-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:review/installation', 'ReviewInstallationController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/review/installation-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/review');\n  test('unit/controllers/review/installation-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/review/installation-test.js should pass jshint.\\nunit/controllers/review/installation-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/review/progress-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:review/progress', 'ReviewProgressController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/review/progress-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/review');\n  test('unit/controllers/review/progress-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/review/progress-test.js should pass jshint.\\nunit/controllers/review/progress-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/review/progress/details/task-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:review/progress/details/task', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/review/progress/details/task-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/review/progress/details');\n  test('unit/controllers/review/progress/details/task-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/review/progress/details/task-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/review/progress/details/task/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:review/progress/details/task/index', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/review/progress/details/task/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/review/progress/details/task');\n  test('unit/controllers/review/progress/details/task/index-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/review/progress/details/task/index-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/review/progress/overview-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:review/progress/overview', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/review/progress/overview-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/review/progress');\n  test('unit/controllers/review/progress/overview-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/review/progress/overview-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/rhci-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:rhci', 'RhciController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/rhci-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/rhci-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/rhci-test.js should pass jshint.\\nunit/controllers/rhci-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/rhev-options-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:rhev-options', 'RhevOptionsController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/rhev-options-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/rhev-options-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/rhev-options-test.js should pass jshint.\\nunit/controllers/rhev-options-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/rhev-setup-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:rhev-setup', 'RhevSetupController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/rhev-setup-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/rhev-setup-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/rhev-setup-test.js should pass jshint.\\nunit/controllers/rhev-setup-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/rhev-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:rhev', 'RhevController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/rhev-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/rhev-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/rhev-test.js should pass jshint.\\nunit/controllers/rhev-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/rhev/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:rhev/index', 'RhevIndexController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/rhev/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/rhev');\n  test('unit/controllers/rhev/index-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/rhev/index-test.js should pass jshint.\\nunit/controllers/rhev/index-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/satellite-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:satellite', 'SatelliteController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/satellite-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/satellite-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/satellite-test.js should pass jshint.\\nunit/controllers/satellite-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/satellite/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:satellite/index', 'SatelliteIndexController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/satellite/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/satellite');\n  test('unit/controllers/satellite/index-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/satellite/index-test.js should pass jshint.\\nunit/controllers/satellite/index-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/side-menu-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:side-menu', 'SideMenuController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/side-menu-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/side-menu-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/side-menu-test.js should pass jshint.\\nunit/controllers/side-menu-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/storage-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:storage', 'StorageController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/storage-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/storage-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/storage-test.js should pass jshint.\\nunit/controllers/storage-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/subscription-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:subscription', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/subscription-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/subscription-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/subscription-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/subscriptions-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:subscriptions', 'SubscriptionsController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/subscriptions-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/subscriptions-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/subscriptions-test.js should pass jshint.\\nunit/controllers/subscriptions-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/subscriptions/credentials-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:subscriptions/credentials', 'SubscriptionsCredentialsController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/subscriptions/credentials-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/subscriptions');\n  test('unit/controllers/subscriptions/credentials-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/subscriptions/credentials-test.js should pass jshint.\\nunit/controllers/subscriptions/credentials-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/subscriptions/management-application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:subscriptions/management-application', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/subscriptions/management-application-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/subscriptions');\n  test('unit/controllers/subscriptions/management-application-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/subscriptions/management-application-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/subscriptions/select-subscriptions-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:subscriptions/select-subscriptions', 'SubscriptionsSelectSubscriptionsController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/subscriptions/select-subscriptions-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/subscriptions');\n  test('unit/controllers/subscriptions/select-subscriptions-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/subscriptions/select-subscriptions-test.js should pass jshint.\\nunit/controllers/subscriptions/select-subscriptions-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/user-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:user', 'UserController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/user-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/user-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/user-test.js should pass jshint.\\nunit/controllers/user-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/user/edit-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:user/edit', 'UserEditController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/user/edit-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/user');\n  test('unit/controllers/user/edit-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/user/edit-test.js should pass jshint.\\nunit/controllers/user/edit-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/users-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:users', 'UsersController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/users-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/users-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/users-test.js should pass jshint.\\nunit/controllers/users-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/users/new-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:users/new', 'UsersNewController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/users/new-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers/users');\n  test('unit/controllers/users/new-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/users/new-test.js should pass jshint.\\nunit/controllers/users/new-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/controllers/where-install-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:where-install', 'WhereInstallController', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var controller = this.subject();\n    ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/controllers/where-install-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/where-install-test.js should pass jshint', function() { \n    ok(false, 'unit/controllers/where-install-test.js should pass jshint.\\nunit/controllers/where-install-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/helpers/raw-text-test', ['fusor-ember-cli/helpers/raw-text'], function (raw_text) {\n\n  'use strict';\n\n  module('RawTextHelper');\n\n  // Replace this with your real tests.\n  test('it works', function () {\n    var result = raw_text.rawText(42);\n    ok(result);\n  });\n\n});","define('fusor-ember-cli/tests/unit/helpers/raw-text-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/helpers');\n  test('unit/helpers/raw-text-test.js should pass jshint', function() { \n    ok(false, 'unit/helpers/raw-text-test.js should pass jshint.\\nunit/helpers/raw-text-test.js: line 5, col 1, \\'module\\' is not defined.\\nunit/helpers/raw-text-test.js: line 8, col 1, \\'test\\' is not defined.\\nunit/helpers/raw-text-test.js: line 10, col 3, \\'ok\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/mixins/config-environment-mixin-test', ['ember', 'fusor-ember-cli/mixins/config-environment-mixin'], function (Ember, ConfigEnvironmentMixinMixin) {\n\n  'use strict';\n\n  module('ConfigEnvironmentMixinMixin');\n\n  // Replace this with your real tests.\n  test('it works', function () {\n    var ConfigEnvironmentMixinObject = Ember['default'].Object.extend(ConfigEnvironmentMixinMixin['default']);\n    var subject = ConfigEnvironmentMixinObject.create();\n    ok(subject);\n  });\n\n});","define('fusor-ember-cli/tests/unit/mixins/config-environment-mixin-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/mixins');\n  test('unit/mixins/config-environment-mixin-test.js should pass jshint', function() { \n    ok(false, 'unit/mixins/config-environment-mixin-test.js should pass jshint.\\nunit/mixins/config-environment-mixin-test.js: line 4, col 1, \\'module\\' is not defined.\\nunit/mixins/config-environment-mixin-test.js: line 7, col 1, \\'test\\' is not defined.\\nunit/mixins/config-environment-mixin-test.js: line 10, col 3, \\'ok\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/mixins/configure-organization-mixin-test', ['ember', 'fusor-ember-cli/mixins/configure-organization-mixin'], function (Ember, ConfigureOrganizationMixinMixin) {\n\n  'use strict';\n\n  module('ConfigureOrganizationMixinMixin');\n\n  // Replace this with your real tests.\n  test('it works', function () {\n    var ConfigureOrganizationMixinObject = Ember['default'].Object.extend(ConfigureOrganizationMixinMixin['default']);\n    var subject = ConfigureOrganizationMixinObject.create();\n    ok(subject);\n  });\n\n});","define('fusor-ember-cli/tests/unit/mixins/configure-organization-mixin-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/mixins');\n  test('unit/mixins/configure-organization-mixin-test.js should pass jshint', function() { \n    ok(false, 'unit/mixins/configure-organization-mixin-test.js should pass jshint.\\nunit/mixins/configure-organization-mixin-test.js: line 4, col 1, \\'module\\' is not defined.\\nunit/mixins/configure-organization-mixin-test.js: line 7, col 1, \\'test\\' is not defined.\\nunit/mixins/configure-organization-mixin-test.js: line 10, col 3, \\'ok\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/mixins/deployment-controller-mixin-test', ['ember', 'fusor-ember-cli/mixins/deployment-controller-mixin'], function (Ember, DeploymentControllerMixinMixin) {\n\n  'use strict';\n\n  module('DeploymentControllerMixinMixin');\n\n  // Replace this with your real tests.\n  test('it works', function () {\n    var DeploymentControllerMixinObject = Ember['default'].Object.extend(DeploymentControllerMixinMixin['default']);\n    var subject = DeploymentControllerMixinObject.create();\n    ok(subject);\n  });\n\n});","define('fusor-ember-cli/tests/unit/mixins/deployment-controller-mixin-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/mixins');\n  test('unit/mixins/deployment-controller-mixin-test.js should pass jshint', function() { \n    ok(false, 'unit/mixins/deployment-controller-mixin-test.js should pass jshint.\\nunit/mixins/deployment-controller-mixin-test.js: line 4, col 1, \\'module\\' is not defined.\\nunit/mixins/deployment-controller-mixin-test.js: line 7, col 1, \\'test\\' is not defined.\\nunit/mixins/deployment-controller-mixin-test.js: line 10, col 3, \\'ok\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/mixins/deployment-new-satellite-route-mixin-test', ['ember', 'fusor-ember-cli/mixins/deployment-new-satellite-route-mixin'], function (Ember, DeploymentNewSatelliteRouteMixinMixin) {\n\n  'use strict';\n\n  module('DeploymentNewSatelliteRouteMixinMixin');\n\n  // Replace this with your real tests.\n  test('it works', function () {\n    var DeploymentNewSatelliteRouteMixinObject = Ember['default'].Object.extend(DeploymentNewSatelliteRouteMixinMixin['default']);\n    var subject = DeploymentNewSatelliteRouteMixinObject.create();\n    ok(subject);\n  });\n\n});","define('fusor-ember-cli/tests/unit/mixins/deployment-new-satellite-route-mixin-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/mixins');\n  test('unit/mixins/deployment-new-satellite-route-mixin-test.js should pass jshint', function() { \n    ok(false, 'unit/mixins/deployment-new-satellite-route-mixin-test.js should pass jshint.\\nunit/mixins/deployment-new-satellite-route-mixin-test.js: line 4, col 1, \\'module\\' is not defined.\\nunit/mixins/deployment-new-satellite-route-mixin-test.js: line 7, col 1, \\'test\\' is not defined.\\nunit/mixins/deployment-new-satellite-route-mixin-test.js: line 10, col 3, \\'ok\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/mixins/deployment-route-mixin-test', ['ember', 'fusor-ember-cli/mixins/deployment-route-mixin'], function (Ember, DeploymentRouteMixinMixin) {\n\n  'use strict';\n\n  module('DeploymentRouteMixinMixin');\n\n  // Replace this with your real tests.\n  test('it works', function () {\n    var DeploymentRouteMixinObject = Ember['default'].Object.extend(DeploymentRouteMixinMixin['default']);\n    var subject = DeploymentRouteMixinObject.create();\n    ok(subject);\n  });\n\n});","define('fusor-ember-cli/tests/unit/mixins/deployment-route-mixin-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/mixins');\n  test('unit/mixins/deployment-route-mixin-test.js should pass jshint', function() { \n    ok(false, 'unit/mixins/deployment-route-mixin-test.js should pass jshint.\\nunit/mixins/deployment-route-mixin-test.js: line 4, col 1, \\'module\\' is not defined.\\nunit/mixins/deployment-route-mixin-test.js: line 7, col 1, \\'test\\' is not defined.\\nunit/mixins/deployment-route-mixin-test.js: line 10, col 3, \\'ok\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/mixins/disable-tab-mixin-test', ['ember', 'fusor-ember-cli/mixins/disable-tab-mixin'], function (Ember, DisableTabMixinMixin) {\n\n  'use strict';\n\n  module('DisableTabMixinMixin');\n\n  // Replace this with your real tests.\n  test('it works', function () {\n    var DisableTabMixinObject = Ember['default'].Object.extend(DisableTabMixinMixin['default']);\n    var subject = DisableTabMixinObject.create();\n    ok(subject);\n  });\n\n});","define('fusor-ember-cli/tests/unit/mixins/disable-tab-mixin-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/mixins');\n  test('unit/mixins/disable-tab-mixin-test.js should pass jshint', function() { \n    ok(false, 'unit/mixins/disable-tab-mixin-test.js should pass jshint.\\nunit/mixins/disable-tab-mixin-test.js: line 4, col 1, \\'module\\' is not defined.\\nunit/mixins/disable-tab-mixin-test.js: line 7, col 1, \\'test\\' is not defined.\\nunit/mixins/disable-tab-mixin-test.js: line 10, col 3, \\'ok\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/mixins/progress-bar-mixin-test', ['ember', 'fusor-ember-cli/mixins/progress-bar-mixin', 'qunit'], function (Ember, ProgressBarMixinMixin, qunit) {\n\n  'use strict';\n\n  qunit.module('ProgressBarMixinMixin');\n\n  // Replace this with your real tests.\n  qunit.test('it works', function (assert) {\n    var ProgressBarMixinObject = Ember['default'].Object.extend(ProgressBarMixinMixin['default']);\n    var subject = ProgressBarMixinObject.create();\n    assert.ok(subject);\n  });\n\n});","define('fusor-ember-cli/tests/unit/mixins/progress-bar-mixin-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/mixins');\n  test('unit/mixins/progress-bar-mixin-test.js should pass jshint', function() { \n    ok(true, 'unit/mixins/progress-bar-mixin-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/mixins/satellite-controller-mixin-test', ['ember', 'fusor-ember-cli/mixins/satellite-controller-mixin'], function (Ember, SatelliteControllerMixinMixin) {\n\n  'use strict';\n\n  module('SatelliteControllerMixinMixin');\n\n  // Replace this with your real tests.\n  test('it works', function () {\n    var SatelliteControllerMixinObject = Ember['default'].Object.extend(SatelliteControllerMixinMixin['default']);\n    var subject = SatelliteControllerMixinObject.create();\n    ok(subject);\n  });\n\n});","define('fusor-ember-cli/tests/unit/mixins/satellite-controller-mixin-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/mixins');\n  test('unit/mixins/satellite-controller-mixin-test.js should pass jshint', function() { \n    ok(false, 'unit/mixins/satellite-controller-mixin-test.js should pass jshint.\\nunit/mixins/satellite-controller-mixin-test.js: line 4, col 1, \\'module\\' is not defined.\\nunit/mixins/satellite-controller-mixin-test.js: line 7, col 1, \\'test\\' is not defined.\\nunit/mixins/satellite-controller-mixin-test.js: line 10, col 3, \\'ok\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/mixins/save-hostname-mixin-test', ['ember', 'fusor-ember-cli/mixins/save-hostname-mixin', 'qunit'], function (Ember, SaveHostnameMixinMixin, qunit) {\n\n  'use strict';\n\n  qunit.module('SaveHostnameMixinMixin');\n\n  // Replace this with your real tests.\n  qunit.test('it works', function (assert) {\n    var SaveHostnameMixinObject = Ember['default'].Object.extend(SaveHostnameMixinMixin['default']);\n    var subject = SaveHostnameMixinObject.create();\n    assert.ok(subject);\n  });\n\n});","define('fusor-ember-cli/tests/unit/mixins/save-hostname-mixin-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/mixins');\n  test('unit/mixins/save-hostname-mixin-test.js should pass jshint', function() { \n    ok(true, 'unit/mixins/save-hostname-mixin-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/mixins/start-controller-mixin-test', ['ember', 'fusor-ember-cli/mixins/start-controller-mixin'], function (Ember, StartControllerMixinMixin) {\n\n  'use strict';\n\n  module('StartControllerMixinMixin');\n\n  // Replace this with your real tests.\n  test('it works', function () {\n    var StartControllerMixinObject = Ember['default'].Object.extend(StartControllerMixinMixin['default']);\n    var subject = StartControllerMixinObject.create();\n    ok(subject);\n  });\n\n});","define('fusor-ember-cli/tests/unit/mixins/start-controller-mixin-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/mixins');\n  test('unit/mixins/start-controller-mixin-test.js should pass jshint', function() { \n    ok(false, 'unit/mixins/start-controller-mixin-test.js should pass jshint.\\nunit/mixins/start-controller-mixin-test.js: line 4, col 1, \\'module\\' is not defined.\\nunit/mixins/start-controller-mixin-test.js: line 7, col 1, \\'test\\' is not defined.\\nunit/mixins/start-controller-mixin-test.js: line 10, col 3, \\'ok\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/models/credential-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('credential', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('fusor-ember-cli/tests/unit/models/credential-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/credential-test.js should pass jshint', function() { \n    ok(true, 'unit/models/credential-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/models/deployment-host-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('deployment-host', 'DeploymentHost', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function () {\n    var model = this.subject();\n    // var store = this.store();\n    ok(!!model);\n  });\n\n});","define('fusor-ember-cli/tests/unit/models/deployment-host-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/deployment-host-test.js should pass jshint', function() { \n    ok(false, 'unit/models/deployment-host-test.js should pass jshint.\\nunit/models/deployment-host-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/models/deployment-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('deployment', 'Deployment', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function () {\n    var model = this.subject();\n    // var store = this.store();\n    ok(!!model);\n  });\n\n});","define('fusor-ember-cli/tests/unit/models/deployment-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/deployment-test.js should pass jshint', function() { \n    ok(false, 'unit/models/deployment-test.js should pass jshint.\\nunit/models/deployment-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/models/discovered-host-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('discovered-host', 'DiscoveredHost', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function () {\n    var model = this.subject();\n    // var store = this.store();\n    ok(!!model);\n  });\n\n});","define('fusor-ember-cli/tests/unit/models/discovered-host-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/discovered-host-test.js should pass jshint', function() { \n    ok(false, 'unit/models/discovered-host-test.js should pass jshint.\\nunit/models/discovered-host-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/models/environment-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('environment', 'Environment', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function () {\n    var model = this.subject();\n    // var store = this.store();\n    ok(!!model);\n  });\n\n});","define('fusor-ember-cli/tests/unit/models/environment-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/environment-test.js should pass jshint', function() { \n    ok(false, 'unit/models/environment-test.js should pass jshint.\\nunit/models/environment-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/models/foreman-task-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('foreman-task', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('fusor-ember-cli/tests/unit/models/foreman-task-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/foreman-task-test.js should pass jshint', function() { \n    ok(true, 'unit/models/foreman-task-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/models/host-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('host', 'Host', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function () {\n    var model = this.subject();\n    // var store = this.store();\n    ok(!!model);\n  });\n\n});","define('fusor-ember-cli/tests/unit/models/host-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/host-test.js should pass jshint', function() { \n    ok(false, 'unit/models/host-test.js should pass jshint.\\nunit/models/host-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/models/hostgroup-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('hostgroup', 'Hostgroup', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function () {\n    var model = this.subject();\n    // var store = this.store();\n    ok(!!model);\n  });\n\n});","define('fusor-ember-cli/tests/unit/models/hostgroup-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/hostgroup-test.js should pass jshint', function() { \n    ok(false, 'unit/models/hostgroup-test.js should pass jshint.\\nunit/models/hostgroup-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/models/lifecycle-environment-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('environment', 'Environment', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function () {\n    var model = this.subject();\n    // var store = this.store();\n    ok(!!model);\n  });\n\n});","define('fusor-ember-cli/tests/unit/models/lifecycle-environment-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/lifecycle-environment-test.js should pass jshint', function() { \n    ok(false, 'unit/models/lifecycle-environment-test.js should pass jshint.\\nunit/models/lifecycle-environment-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/models/location-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('location', 'Location', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function () {\n    var model = this.subject();\n    // var store = this.store();\n    ok(!!model);\n  });\n\n});","define('fusor-ember-cli/tests/unit/models/location-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/location-test.js should pass jshint', function() { \n    ok(false, 'unit/models/location-test.js should pass jshint.\\nunit/models/location-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/models/management-application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('management-application', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('fusor-ember-cli/tests/unit/models/management-application-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/management-application-test.js should pass jshint', function() { \n    ok(true, 'unit/models/management-application-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/models/organization-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('organization', 'Organization', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function () {\n    var model = this.subject();\n    // var store = this.store();\n    ok(!!model);\n  });\n\n});","define('fusor-ember-cli/tests/unit/models/organization-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/organization-test.js should pass jshint', function() { \n    ok(false, 'unit/models/organization-test.js should pass jshint.\\nunit/models/organization-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/models/product-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('product', 'Product', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function () {\n    var model = this.subject();\n    // var store = this.store();\n    ok(!!model);\n  });\n\n});","define('fusor-ember-cli/tests/unit/models/product-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/product-test.js should pass jshint', function() { \n    ok(false, 'unit/models/product-test.js should pass jshint.\\nunit/models/product-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/models/rhev-setup-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('rhev-setup', 'RhevSetup', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function () {\n    var model = this.subject();\n    // var store = this.store();\n    ok(!!model);\n  });\n\n});","define('fusor-ember-cli/tests/unit/models/rhev-setup-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/rhev-setup-test.js should pass jshint', function() { \n    ok(false, 'unit/models/rhev-setup-test.js should pass jshint.\\nunit/models/rhev-setup-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/models/subnet-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('subnet', 'Subnet', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function () {\n    var model = this.subject();\n    // var store = this.store();\n    ok(!!model);\n  });\n\n});","define('fusor-ember-cli/tests/unit/models/subnet-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/subnet-test.js should pass jshint', function() { \n    ok(false, 'unit/models/subnet-test.js should pass jshint.\\nunit/models/subnet-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/models/subscription-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('subscription', 'Subscription', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function () {\n    var model = this.subject();\n    // var store = this.store();\n    ok(!!model);\n  });\n\n});","define('fusor-ember-cli/tests/unit/models/subscription-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/subscription-test.js should pass jshint', function() { \n    ok(false, 'unit/models/subscription-test.js should pass jshint.\\nunit/models/subscription-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/models/traffic-type-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('traffic-type', 'TrafficType', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function () {\n    var model = this.subject();\n    // var store = this.store();\n    ok(!!model);\n  });\n\n});","define('fusor-ember-cli/tests/unit/models/traffic-type-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/traffic-type-test.js should pass jshint', function() { \n    ok(false, 'unit/models/traffic-type-test.js should pass jshint.\\nunit/models/traffic-type-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/models/user-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('user', 'User', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function () {\n    var model = this.subject();\n    // var store = this.store();\n    ok(!!model);\n  });\n\n});","define('fusor-ember-cli/tests/unit/models/user-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/user-test.js should pass jshint', function() { \n    ok(false, 'unit/models/user-test.js should pass jshint.\\nunit/models/user-test.js: line 14, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:application', 'ApplicationRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/application-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/application-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/application-test.js should pass jshint.\\nunit/routes/application-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/assign-nodes-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:assign-nodes', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/assign-nodes-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/assign-nodes-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/assign-nodes-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/cloudforms-storage-domain-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:cloudforms-storage-domain', 'CloudformsStorageDomainRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/cloudforms-storage-domain-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/cloudforms-storage-domain-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/cloudforms-storage-domain-test.js should pass jshint.\\nunit/routes/cloudforms-storage-domain-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/cloudforms-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:cloudforms', 'Unit | Route | cloudforms', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/cloudforms-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/cloudforms-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/cloudforms-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/cloudforms-vm-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:cloudforms-vm', 'CloudformsVmRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/cloudforms-vm-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/cloudforms-vm-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/cloudforms-vm-test.js should pass jshint.\\nunit/routes/cloudforms-vm-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/cloudforms/cfme-configuration-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:cloudforms/cfme-configuration', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/cloudforms/cfme-configuration-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/cloudforms');\n  test('unit/routes/cloudforms/cfme-configuration-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/cloudforms/cfme-configuration-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/cloudforms/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:cloudforms/index', 'CloudformsIndexRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/cloudforms/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/cloudforms');\n  test('unit/routes/cloudforms/index-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/cloudforms/index-test.js should pass jshint.\\nunit/routes/cloudforms/index-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/configure-environment-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:configure-environment', 'ConfigureEnvironmentRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/configure-environment-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/configure-environment-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/configure-environment-test.js should pass jshint.\\nunit/routes/configure-environment-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/configure-organization-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:configure-organization', 'ConfigureOrganizationRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/configure-organization-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/configure-organization-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/configure-organization-test.js should pass jshint.\\nunit/routes/configure-organization-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/configure/new-organization-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:configure/new-organization', 'ConfigureNewOrganizationRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/configure/new-organization-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/configure');\n  test('unit/routes/configure/new-organization-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/configure/new-organization-test.js should pass jshint.\\nunit/routes/configure/new-organization-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/content-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:content', 'ContentRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/content-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/content-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/content-test.js should pass jshint.\\nunit/routes/content-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/deployment-new-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:deployment-new', 'DeploymentNewRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/deployment-new-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/deployment-new-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/deployment-new-test.js should pass jshint.\\nunit/routes/deployment-new-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/deployment-new/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:deployment-new/index', 'DeploymentNewIndexRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/deployment-new/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/deployment-new');\n  test('unit/routes/deployment-new/index-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/deployment-new/index-test.js should pass jshint.\\nunit/routes/deployment-new/index-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/deployment-new/satellite-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:deployment-new/satellite', 'DeploymentNewSatelliteRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/deployment-new/satellite-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/deployment-new');\n  test('unit/routes/deployment-new/satellite-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/deployment-new/satellite-test.js should pass jshint.\\nunit/routes/deployment-new/satellite-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/deployment-new/satellite/configure-environment-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:deployment-new/satellite/configure-environment', 'DeploymentNewSatelliteConfigureEnvironmentRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/deployment-new/satellite/configure-environment-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/deployment-new/satellite');\n  test('unit/routes/deployment-new/satellite/configure-environment-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/deployment-new/satellite/configure-environment-test.js should pass jshint.\\nunit/routes/deployment-new/satellite/configure-environment-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/deployment-new/satellite/configure-organization-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:deployment-new/satellite/configure-organization', 'DeploymentNewSatelliteConfigureOrganizationRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/deployment-new/satellite/configure-organization-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/deployment-new/satellite');\n  test('unit/routes/deployment-new/satellite/configure-organization-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/deployment-new/satellite/configure-organization-test.js should pass jshint.\\nunit/routes/deployment-new/satellite/configure-organization-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/deployment-new/satellite/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:deployment-new/satellite/index', 'DeploymentNewSatelliteIndexRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/deployment-new/satellite/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/deployment-new/satellite');\n  test('unit/routes/deployment-new/satellite/index-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/deployment-new/satellite/index-test.js should pass jshint.\\nunit/routes/deployment-new/satellite/index-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/deployment-new/start-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:deployment-new/start', 'DeploymentNewStartRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/deployment-new/start-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/deployment-new');\n  test('unit/routes/deployment-new/start-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/deployment-new/start-test.js should pass jshint.\\nunit/routes/deployment-new/start-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/deployment-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:deployment', 'DeploymentRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/deployment-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/deployment-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/deployment-test.js should pass jshint.\\nunit/routes/deployment-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/deployment/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:deployment/index', 'DeploymentIndexRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/deployment/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/deployment');\n  test('unit/routes/deployment/index-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/deployment/index-test.js should pass jshint.\\nunit/routes/deployment/index-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/deployment/new-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:deployment/new', 'DeploymentNewRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/deployment/new-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/deployment');\n  test('unit/routes/deployment/new-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/deployment/new-test.js should pass jshint.\\nunit/routes/deployment/new-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/deployment/review-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:deployment/review', 'DeploymentReviewRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/deployment/review-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/deployment');\n  test('unit/routes/deployment/review-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/deployment/review-test.js should pass jshint.\\nunit/routes/deployment/review-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/deployment/satellite/configure/new-organization-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:deployment/satellite/configure/new-organization', 'DeploymentSatelliteConfigureNewOrganizationRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/deployment/satellite/configure/new-organization-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/deployment/satellite/configure');\n  test('unit/routes/deployment/satellite/configure/new-organization-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/deployment/satellite/configure/new-organization-test.js should pass jshint.\\nunit/routes/deployment/satellite/configure/new-organization-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/deployment/start-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:deployment/start', 'DeploymentStartRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/deployment/start-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/deployment');\n  test('unit/routes/deployment/start-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/deployment/start-test.js should pass jshint.\\nunit/routes/deployment/start-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/deployments-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:deployments', 'DeploymentsRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/deployments-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/deployments-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/deployments-test.js should pass jshint.\\nunit/routes/deployments-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/discovered-host-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:discovered-host', 'DiscoveredHostRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/discovered-host-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/discovered-host-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/discovered-host-test.js should pass jshint.\\nunit/routes/discovered-host-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/discovered-hosts-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:discovered-hosts', 'DiscoveredHostsRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/discovered-hosts-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/discovered-hosts-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/discovered-hosts-test.js should pass jshint.\\nunit/routes/discovered-hosts-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/engine-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:engine', 'EngineRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/engine-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/engine-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/engine-test.js should pass jshint.\\nunit/routes/engine-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/engine/discovered-host-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:engine/discovered-host', 'EngineDiscoveredHostRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/engine/discovered-host-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/engine');\n  test('unit/routes/engine/discovered-host-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/engine/discovered-host-test.js should pass jshint.\\nunit/routes/engine/discovered-host-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/engine/existing-host-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:engine/existing-host', 'EngineExistingHostRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/engine/existing-host-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/engine');\n  test('unit/routes/engine/existing-host-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/engine/existing-host-test.js should pass jshint.\\nunit/routes/engine/existing-host-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/engine/hypervisor-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:engine/hypervisor', 'EngineHypervisorRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/engine/hypervisor-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/engine');\n  test('unit/routes/engine/hypervisor-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/engine/hypervisor-test.js should pass jshint.\\nunit/routes/engine/hypervisor-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/engine/new-host-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:engine/new-host', 'EngineNewHostRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/engine/new-host-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/engine');\n  test('unit/routes/engine/new-host-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/engine/new-host-test.js should pass jshint.\\nunit/routes/engine/new-host-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/hostgroup-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:hostgroup', 'HostgroupRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/hostgroup-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/hostgroup-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/hostgroup-test.js should pass jshint.\\nunit/routes/hostgroup-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/hostgroup/edit-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:hostgroup/edit', 'HostgroupEditRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/hostgroup/edit-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/hostgroup');\n  test('unit/routes/hostgroup/edit-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/hostgroup/edit-test.js should pass jshint.\\nunit/routes/hostgroup/edit-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/hostgroups-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:hostgroups', 'HostgroupsRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/hostgroups-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/hostgroups-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/hostgroups-test.js should pass jshint.\\nunit/routes/hostgroups-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/hypervisor-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:hypervisor', 'HypervisorRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/hypervisor-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/hypervisor-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/hypervisor-test.js should pass jshint.\\nunit/routes/hypervisor-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/hypervisor/discovered-host-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:hypervisor/discovered-host', 'HypervisorDiscoveredHostRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/hypervisor/discovered-host-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/hypervisor');\n  test('unit/routes/hypervisor/discovered-host-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/hypervisor/discovered-host-test.js should pass jshint.\\nunit/routes/hypervisor/discovered-host-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/hypervisor/existing-host-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:hypervisor/existing-host', 'HypervisorExistingHostRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/hypervisor/existing-host-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/hypervisor');\n  test('unit/routes/hypervisor/existing-host-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/hypervisor/existing-host-test.js should pass jshint.\\nunit/routes/hypervisor/existing-host-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/hypervisor/new-host-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:hypervisor/new-host', 'HypervisorNewHostRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/hypervisor/new-host-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/hypervisor');\n  test('unit/routes/hypervisor/new-host-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/hypervisor/new-host-test.js should pass jshint.\\nunit/routes/hypervisor/new-host-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:index', 'IndexRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/index-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/index-test.js should pass jshint.\\nunit/routes/index-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/loggedin-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:loggedin', 'LoggedinRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/loggedin-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/loggedin-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/loggedin-test.js should pass jshint.\\nunit/routes/loggedin-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/login-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:login', 'LoginRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/login-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/login-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/login-test.js should pass jshint.\\nunit/routes/login-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/networking-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:networking', 'NetworkingRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/networking-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/networking-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/networking-test.js should pass jshint.\\nunit/routes/networking-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/new-environment-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:new-environment', 'NewEnvironmentRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/new-environment-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/new-environment-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/new-environment-test.js should pass jshint.\\nunit/routes/new-environment-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/new-organization-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:new-organization', 'NewOrganizationRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/new-organization-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/new-organization-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/new-organization-test.js should pass jshint.\\nunit/routes/new-organization-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/openstack-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:openstack', 'Unit | Route | openstack', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/openstack-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/openstack-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/openstack-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/openstack/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:openstack/index', 'OpenstackIndexRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/openstack/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/openstack');\n  test('unit/routes/openstack/index-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/openstack/index-test.js should pass jshint.\\nunit/routes/openstack/index-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/register-nodes-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:register-nodes', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/register-nodes-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/register-nodes-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/register-nodes-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/review-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:review', 'Unit | Route | review', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/review-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/review-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/review-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/review/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:review/index', 'ReviewIndexRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/review/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/review');\n  test('unit/routes/review/index-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/review/index-test.js should pass jshint.\\nunit/routes/review/index-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/review/installation-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:review/installation', 'ReviewInstallationRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/review/installation-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/review');\n  test('unit/routes/review/installation-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/review/installation-test.js should pass jshint.\\nunit/routes/review/installation-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/review/progress-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:review/progress', 'ReviewProgressRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/review/progress-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/review');\n  test('unit/routes/review/progress-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/review/progress-test.js should pass jshint.\\nunit/routes/review/progress-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/review/progress/details-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:review/progress/details', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/review/progress/details-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/review/progress');\n  test('unit/routes/review/progress/details-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/review/progress/details-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/review/progress/details/task-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:review/progress/details/task', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/review/progress/details/task-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/review/progress/details');\n  test('unit/routes/review/progress/details/task-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/review/progress/details/task-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/review/progress/details/task/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:review/progress/details/task/index', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/review/progress/details/task/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/review/progress/details/task');\n  test('unit/routes/review/progress/details/task/index-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/review/progress/details/task/index-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/review/progress/details/task/running-steps-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:review/progress/details/task/running-steps', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/review/progress/details/task/running-steps-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/review/progress/details/task');\n  test('unit/routes/review/progress/details/task/running-steps-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/review/progress/details/task/running-steps-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/review/progress/details/task/task-errors-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:review/progress/details/task/task-errors', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/review/progress/details/task/task-errors-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/review/progress/details/task');\n  test('unit/routes/review/progress/details/task/task-errors-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/review/progress/details/task/task-errors-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/review/progress/details/task/task-locks-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:review/progress/details/task/task-locks', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/review/progress/details/task/task-locks-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/review/progress/details/task');\n  test('unit/routes/review/progress/details/task/task-locks-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/review/progress/details/task/task-locks-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/review/progress/details/task/task-raw-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:review/progress/details/task/task-raw', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/review/progress/details/task/task-raw-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/review/progress/details/task');\n  test('unit/routes/review/progress/details/task/task-raw-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/review/progress/details/task/task-raw-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/review/progress/overview-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:review/progress/overview', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/review/progress/overview-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/review/progress');\n  test('unit/routes/review/progress/overview-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/review/progress/overview-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/rhci-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:rhci', 'RhciRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/rhci-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/rhci-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/rhci-test.js should pass jshint.\\nunit/routes/rhci-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/rhev-options-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:rhev-options', 'RhevOptionsRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/rhev-options-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/rhev-options-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/rhev-options-test.js should pass jshint.\\nunit/routes/rhev-options-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/rhev-setup-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:rhev-setup', 'RhevSetupRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/rhev-setup-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/rhev-setup-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/rhev-setup-test.js should pass jshint.\\nunit/routes/rhev-setup-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/rhev-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:rhev', 'RhevRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/rhev-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/rhev-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/rhev-test.js should pass jshint.\\nunit/routes/rhev-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/rhev/engine-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:rhev/engine', 'RhevEngineRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/rhev/engine-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/rhev');\n  test('unit/routes/rhev/engine-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/rhev/engine-test.js should pass jshint.\\nunit/routes/rhev/engine-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/rhev/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:rhev/index', 'RhevIndexRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/rhev/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/rhev');\n  test('unit/routes/rhev/index-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/rhev/index-test.js should pass jshint.\\nunit/routes/rhev/index-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/satellite-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:satellite', 'SatelliteRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/satellite-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/satellite-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/satellite-test.js should pass jshint.\\nunit/routes/satellite-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/satellite/configure-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:satellite/configure', 'SatelliteConfigureRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/satellite/configure-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/satellite');\n  test('unit/routes/satellite/configure-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/satellite/configure-test.js should pass jshint.\\nunit/routes/satellite/configure-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/satellite/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:satellite/index', 'SatelliteIndexRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/satellite/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/satellite');\n  test('unit/routes/satellite/index-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/satellite/index-test.js should pass jshint.\\nunit/routes/satellite/index-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/satellite/review-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:satellite/review', 'SatelliteReviewRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/satellite/review-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/satellite');\n  test('unit/routes/satellite/review-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/satellite/review-test.js should pass jshint.\\nunit/routes/satellite/review-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/satellite/subscriptions-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:subscriptions', 'SatelliteSubscriptionsRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/satellite/subscriptions-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/satellite');\n  test('unit/routes/satellite/subscriptions-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/satellite/subscriptions-test.js should pass jshint.\\nunit/routes/satellite/subscriptions-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/setpassword-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:setpassword', 'SetpasswordRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/setpassword-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/setpassword-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/setpassword-test.js should pass jshint.\\nunit/routes/setpassword-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/single-deployment-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:single-deployment', 'SingleDeploymentRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/single-deployment-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/single-deployment-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/single-deployment-test.js should pass jshint.\\nunit/routes/single-deployment-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/storage-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:storage', 'StorageRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/storage-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/storage-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/storage-test.js should pass jshint.\\nunit/routes/storage-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/subscriptions/credentials-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:subscriptions/credentials', 'SubscriptionsCredentialsRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/subscriptions/credentials-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/subscriptions');\n  test('unit/routes/subscriptions/credentials-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/subscriptions/credentials-test.js should pass jshint.\\nunit/routes/subscriptions/credentials-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/subscriptions/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:subscriptions/index', 'SubscriptionsIndexRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/subscriptions/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/subscriptions');\n  test('unit/routes/subscriptions/index-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/subscriptions/index-test.js should pass jshint.\\nunit/routes/subscriptions/index-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/subscriptions/management-application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:subscriptions/management-application', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/subscriptions/management-application-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/subscriptions');\n  test('unit/routes/subscriptions/management-application-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/subscriptions/management-application-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/subscriptions/select-subscriptions-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:subscriptions/select-subscriptions', 'SubscriptionsSelectSubscriptionsRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/subscriptions/select-subscriptions-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/subscriptions');\n  test('unit/routes/subscriptions/select-subscriptions-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/subscriptions/select-subscriptions-test.js should pass jshint.\\nunit/routes/subscriptions/select-subscriptions-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/user-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:user', 'UserRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/user-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/user-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/user-test.js should pass jshint.\\nunit/routes/user-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/user/edit-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:user/edit', 'UserEditRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/user/edit-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/user');\n  test('unit/routes/user/edit-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/user/edit-test.js should pass jshint.\\nunit/routes/user/edit-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/users-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:users', 'UsersRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/users-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/users-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/users-test.js should pass jshint.\\nunit/routes/users-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/users/new-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:users/new', 'UsersNewRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/users/new-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes/users');\n  test('unit/routes/users/new-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/users/new-test.js should pass jshint.\\nunit/routes/users/new-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/routes/where-install-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:where-install', 'WhereInstallRoute', {});\n\n  ember_qunit.test('it exists', function () {\n    var route = this.subject();\n    ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('fusor-ember-cli/tests/unit/routes/where-install-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/where-install-test.js should pass jshint', function() { \n    ok(false, 'unit/routes/where-install-test.js should pass jshint.\\nunit/routes/where-install-test.js: line 13, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/serializers/discovered-host-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('serializer:discovered-host', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var serializer = this.subject();\n    assert.ok(serializer);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['serializer:foo']\n\n});","define('fusor-ember-cli/tests/unit/serializers/discovered-host-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/serializers');\n  test('unit/serializers/discovered-host-test.js should pass jshint', function() { \n    ok(true, 'unit/serializers/discovered-host-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/serializers/foreman-task-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('foreman-task', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:foreman-task']\n  });\n\n  // Replace this with your real tests.\n  ember_qunit.test('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n\n});","define('fusor-ember-cli/tests/unit/serializers/foreman-task-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/serializers');\n  test('unit/serializers/foreman-task-test.js should pass jshint', function() { \n    ok(true, 'unit/serializers/foreman-task-test.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/views/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:application', 'ApplicationView');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var view = this.subject();\n    ok(view);\n  });\n\n});","define('fusor-ember-cli/tests/unit/views/application-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views');\n  test('unit/views/application-test.js should pass jshint', function() { \n    ok(false, 'unit/views/application-test.js should pass jshint.\\nunit/views/application-test.js: line 11, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/views/configure-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:configure', 'ConfigureView');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var view = this.subject();\n    ok(view);\n  });\n\n});","define('fusor-ember-cli/tests/unit/views/configure-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views');\n  test('unit/views/configure-test.js should pass jshint', function() { \n    ok(false, 'unit/views/configure-test.js should pass jshint.\\nunit/views/configure-test.js: line 11, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/views/organization-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:organization', 'OrganizationView');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var view = this.subject();\n    ok(view);\n  });\n\n});","define('fusor-ember-cli/tests/unit/views/organization-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views');\n  test('unit/views/organization-test.js should pass jshint', function() { \n    ok(false, 'unit/views/organization-test.js should pass jshint.\\nunit/views/organization-test.js: line 11, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/unit/views/rhci-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('view:rhci', 'RhciView');\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function () {\n    var view = this.subject();\n    ok(view);\n  });\n\n});","define('fusor-ember-cli/tests/unit/views/rhci-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/views');\n  test('unit/views/rhci-test.js should pass jshint', function() { \n    ok(false, 'unit/views/rhci-test.js should pass jshint.\\nunit/views/rhci-test.js: line 11, col 3, \\'ok\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/views/configure.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/configure.js should pass jshint', function() { \n    ok(true, 'views/configure.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/tests/views/organization.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/organization.js should pass jshint', function() { \n    ok(false, 'views/organization.js should pass jshint.\\nviews/organization.js: line 18, col 25, \\'event\\' is defined but never used.\\n\\n1 error'); \n  });\n\n});","define('fusor-ember-cli/tests/views/rhci.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - views');\n  test('views/rhci.js should pass jshint', function() { \n    ok(true, 'views/rhci.js should pass jshint.'); \n  });\n\n});","define('fusor-ember-cli/torii-providers/foreman', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.Object.extend({\n\n    // credentials as passed from torii.open\n    open: function open(credentials) {\n      return new Ember.RSVP.Promise(function (resolve, reject) {\n        alert(credentials.username);\n        exampleAsyncLogin(credentials.username, credentials.password,\n\n        // callback function:\n        function (error, response) {\n          // the promise is resolved with the authorization\n          Ember.run.bind(null, resolve, { sessionToken: response.token });\n        });\n      });\n    }\n\n  });\n\n});","define('fusor-ember-cli/views/configure', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].View.extend({});\n\n});","define('fusor-ember-cli/views/organization', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].View.extend({\n    classNameBindings: ['color'],\n    color: null,\n    highlight: function highlight() {\n      return this.get('color');\n    },\n\n    // mouseEnter: function(event) {\n    //   this.set('color', 'yellow');\n    // },\n\n    // mouseLeave: function(event) {\n    //   this.set('color', 'green');\n    //   //alert(\"mouseLeave!\");\n    // },\n    doubleClick: function doubleClick(event) {\n      this.set('color', 'red');\n      //alert(\"ClickableView was clicked!\");\n    } });\n\n});","define('fusor-ember-cli/views/rhci', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].View.extend(Ember['default'].ViewTargetActionSupport, {});\n\n\t// classNameBindings: ['color'],\n\t// color: null,\n\t// highlight: function() {\n\t//   return this.get('color');\n\t// },\n\n\t// mouseEnter: function(event) {\n\t//   this.set('color', 'yellow');\n\t// },\n\n\t// mouseLeave: function(event) {\n\t//   this.set('color', 'green');\n\t//   //alert(\"mouseLeave!\");\n\t// },\n\t// doubleClick: function(event) {\n\t//   this.set('color', 'red');\n\t//   //alert(\"ClickableView was clicked!\");\n\t// },\n\n\t// didInsertElement: function(){\n\t//     this.$().hide().show('slow');\n\t// }\n\n\t// click: function() {\n\t//   this.triggerAction({\n\t//     action: 'showRHCIModal'\n\t//   }); // Sends the `save` action, along with the current context\n\t//       // to the current controller\n\t// },\n\t// doRhciModal: function() {\n\t//   // this.triggerAction({\n\t//   //   action: 'ddd'\n\t//   // });\n\t//   alert('DDD');\n\t// }.on('didInsertElement'),\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('fusor-ember-cli/config/environment', ['ember'], function(Ember) {\n  return { 'default': {\"modulePrefix\":\"fusor-ember-cli\",\"environment\":\"development\",\"baseURL\":\"/\",\"locationType\":\"hash\",\"EmberENV\":{\"FEATURES\":{}},\"contentSecurityPolicyHeader\":\"Disabled-Content-Security-Policy\",\"APP\":{\"LOG_ACTIVE_GENERATION\":true,\"LOG_TRANSITIONS\":true,\"LOG_VIEW_LOOKUPS\":true,\"rootElement\":\"#ember-app\",\"name\":\"fusor-ember-cli\",\"version\":\"0.0.0.7d4eb9f3\"},\"contentSecurityPolicy\":{\"default-src\":\"'none'\",\"script-src\":\"'self' 'unsafe-eval'\",\"font-src\":\"'self'\",\"connect-src\":\"'self'\",\"img-src\":\"'self'\",\"style-src\":\"'self'\",\"media-src\":\"'self'\"},\"exportApplicationGlobal\":true}};\n});\n\nif (runningTests) {\n  require(\"fusor-ember-cli/tests/test-helper\");\n} else {\n  require(\"fusor-ember-cli/app\")[\"default\"].create({\"LOG_ACTIVE_GENERATION\":true,\"LOG_TRANSITIONS\":true,\"LOG_VIEW_LOOKUPS\":true,\"rootElement\":\"#ember-app\",\"name\":\"fusor-ember-cli\",\"version\":\"0.0.0.7d4eb9f3\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACntEA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACprLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjlEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtFA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACztTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjhMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdvKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChdvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtjdtVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpplvMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnvnrnYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtxnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpntjOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxlxnlxrpvxhNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjzmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxxTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxpxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxphjpYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzxllZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjlSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxvgltZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxnxlqzjtjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtjxpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxhFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxtmpkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxrdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"fusor-ember-cli.js"}